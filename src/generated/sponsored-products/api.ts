/* tslint:disable */
/* eslint-disable */
/**
 * Sponsored Products
 *
 *
 * The version of the OpenAPI document: 3.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Configuration } from './configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import globalAxios from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import {
  DUMMY_BASE_URL,
  assertParamExists,
  setApiKeyToObject,
  setBasicAuthToObject,
  setBearerAuthToObject,
  setOAuthToObject,
  setSearchParams,
  serializeDataIfNeeded,
  toPathString,
  createRequestFunction,
} from './common';
import type { RequestArgs } from './base';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, BaseAPI, RequiredError, operationServerMap } from './base';

/**
 * Returns information about an AccessDeniedException.
 * @export
 * @interface AccessDeniedException
 */
export interface AccessDeniedException {
  /**
   * The HTTP status code of the response.
   * @type {string}
   * @memberof AccessDeniedException
   */
  code?: string;
  /**
   * A human-readable description of the response.
   * @type {string}
   * @memberof AccessDeniedException
   */
  details?: string;
}
/**
 *
 * @export
 * @interface AdGroup
 */
export interface AdGroup {
  /**
   * The list of targeting expressions. Maximum of 100 per request.
   * @type {Array<TargetingExpression>}
   * @memberof AdGroup
   */
  targetingExpressions: Array<TargetingExpression>;
  /**
   * The list of ad ASINs in the ad group.
   * @type {Array<string>}
   * @memberof AdGroup
   */
  asins: Array<string>;
  /**
   * The ad group identifier.
   * @type {string}
   * @memberof AdGroup
   */
  adGroupId?: string;
}
/**
 *
 * @export
 * @interface AdGroupBasedRequest
 */
export interface AdGroupBasedRequest {
  /**
   * The identifier of the campaign
   * @type {string}
   * @memberof AdGroupBasedRequest
   */
  campaignId?: string;
  /**
   * The recommendationType to retrieve recommended keyword targets for an existing ad group.
   * @type {string}
   * @memberof AdGroupBasedRequest
   */
  recommendationType?: AdGroupBasedRequestRecommendationTypeEnum;
  /**
   * Set this parameter to false if you do not want to retrieve bid suggestions for your keyword targets. Defaults to true.
   * @type {boolean}
   * @memberof AdGroupBasedRequest
   */
  bidsEnabled?: boolean;
  /**
   * The identifier of the ad group
   * @type {string}
   * @memberof AdGroupBasedRequest
   */
  adGroupId?: string;
  /**
   * The max size of recommended target. Set it to 0 if you only want to rank user-defined keywords.
   * @type {number}
   * @memberof AdGroupBasedRequest
   */
  maxRecommendations?: number;
  /**
   * The ranking metric value. Supported values: CLICKS, CONVERSIONS, DEFAULT. DEFAULT will be applied if no value passed in.
   * @type {string}
   * @memberof AdGroupBasedRequest
   */
  sortDimension?: AdGroupBasedRequestSortDimensionEnum;
  /**
   * Translations are for readability and do not affect the targeting of ads. Supported marketplace to locale mappings can be found at the <a href=\'https://advertising.amazon.com/API/docs/en-us/localization/#/Keyword%20Localization\'>POST /keywords/localize</a> endpoint. Note: Translations will be null if locale is unsupported.
   * @type {string}
   * @memberof AdGroupBasedRequest
   */
  locale?: AdGroupBasedRequestLocaleEnum;
}

export const AdGroupBasedRequestRecommendationTypeEnum = {
  KeywordsForAdgroup: 'KEYWORDS_FOR_ADGROUP',
} as const;

export type AdGroupBasedRequestRecommendationTypeEnum =
  (typeof AdGroupBasedRequestRecommendationTypeEnum)[keyof typeof AdGroupBasedRequestRecommendationTypeEnum];
export const AdGroupBasedRequestSortDimensionEnum = {
  Clicks: 'CLICKS',
  Conversions: 'CONVERSIONS',
  Default: 'DEFAULT',
} as const;

export type AdGroupBasedRequestSortDimensionEnum = (typeof AdGroupBasedRequestSortDimensionEnum)[keyof typeof AdGroupBasedRequestSortDimensionEnum];
export const AdGroupBasedRequestLocaleEnum = {
  ArEg: 'ar_EG',
  DeDe: 'de_DE',
  EnAe: 'en_AE',
  EnAu: 'en_AU',
  EnCa: 'en_CA',
  EnGb: 'en_GB',
  EnIn: 'en_IN',
  EnSa: 'en_SA',
  EnSg: 'en_SG',
  EnUs: 'en_US',
  EsEs: 'es_ES',
  EsMx: 'es_MX',
  FrFr: 'fr_FR',
  ItIt: 'it_IT',
  JaJp: 'ja_JP',
  NlNl: 'nl_NL',
  PlPl: 'pl_PL',
  PtBr: 'pt_BR',
  SvSe: 'sv_SE',
  TrTr: 'tr_TR',
  ZhCn: 'zh_CN',
} as const;

export type AdGroupBasedRequestLocaleEnum = (typeof AdGroupBasedRequestLocaleEnum)[keyof typeof AdGroupBasedRequestLocaleEnum];

/**
 * This request type is used to retrieve recommended keyword targets for an existing ad group. Set the recommendationType to KEYWORDS_FOR_ADGROUP to use this request type.
 * @export
 * @interface AdGroupKeywordTargetRankRecommendationRequest
 */
export interface AdGroupKeywordTargetRankRecommendationRequest {
  /**
   * The identifier of the campaign
   * @type {string}
   * @memberof AdGroupKeywordTargetRankRecommendationRequest
   */
  campaignId: string;
  /**
   * The recommendationType to retrieve recommended keyword targets for an existing ad group.
   * @type {string}
   * @memberof AdGroupKeywordTargetRankRecommendationRequest
   */
  recommendationType: AdGroupKeywordTargetRankRecommendationRequestRecommendationTypeEnum;
  /**
   * The identifier of the ad group
   * @type {string}
   * @memberof AdGroupKeywordTargetRankRecommendationRequest
   */
  adGroupId: string;
  /**
   * A list of targets that need to be ranked
   * @type {Array<KeywordTarget>}
   * @memberof AdGroupKeywordTargetRankRecommendationRequest
   */
  targets?: Array<KeywordTarget>;
  /**
   * The max size of recommended target. Set it to 0 if you only want to rank user-defined keywords.
   * @type {number}
   * @memberof AdGroupKeywordTargetRankRecommendationRequest
   */
  maxRecommendations?: number;
  /**
   * The ranking metric value. Supported values: CLICKS, CONVERSIONS, DEFAULT. DEFAULT will be applied if no value passed in.
   * @type {string}
   * @memberof AdGroupKeywordTargetRankRecommendationRequest
   */
  sortDimension?: AdGroupKeywordTargetRankRecommendationRequestSortDimensionEnum;
  /**
   * Translations are for readability and do not affect the targeting of ads. Supported marketplace to locale mappings can be found at the <a href=\'https://advertising.amazon.com/API/docs/en-us/localization/#/Keyword%20Localization\'>POST /keywords/localize</a> endpoint. Note: Translations will be null if locale is unsupported.
   * @type {string}
   * @memberof AdGroupKeywordTargetRankRecommendationRequest
   */
  locale?: AdGroupKeywordTargetRankRecommendationRequestLocaleEnum;
}

export const AdGroupKeywordTargetRankRecommendationRequestRecommendationTypeEnum = {
  KeywordsForAdgroup: 'KEYWORDS_FOR_ADGROUP',
} as const;

export type AdGroupKeywordTargetRankRecommendationRequestRecommendationTypeEnum =
  (typeof AdGroupKeywordTargetRankRecommendationRequestRecommendationTypeEnum)[keyof typeof AdGroupKeywordTargetRankRecommendationRequestRecommendationTypeEnum];
export const AdGroupKeywordTargetRankRecommendationRequestSortDimensionEnum = {
  Clicks: 'CLICKS',
  Conversions: 'CONVERSIONS',
  Default: 'DEFAULT',
} as const;

export type AdGroupKeywordTargetRankRecommendationRequestSortDimensionEnum =
  (typeof AdGroupKeywordTargetRankRecommendationRequestSortDimensionEnum)[keyof typeof AdGroupKeywordTargetRankRecommendationRequestSortDimensionEnum];
export const AdGroupKeywordTargetRankRecommendationRequestLocaleEnum = {
  ArEg: 'ar_EG',
  DeDe: 'de_DE',
  EnAe: 'en_AE',
  EnAu: 'en_AU',
  EnCa: 'en_CA',
  EnGb: 'en_GB',
  EnIn: 'en_IN',
  EnSa: 'en_SA',
  EnSg: 'en_SG',
  EnUs: 'en_US',
  EsEs: 'es_ES',
  EsMx: 'es_MX',
  FrFr: 'fr_FR',
  ItIt: 'it_IT',
  JaJp: 'ja_JP',
  NlNl: 'nl_NL',
  PlPl: 'pl_PL',
  PtBr: 'pt_BR',
  SvSe: 'sv_SE',
  TrTr: 'tr_TR',
  ZhCn: 'zh_CN',
} as const;

export type AdGroupKeywordTargetRankRecommendationRequestLocaleEnum =
  (typeof AdGroupKeywordTargetRankRecommendationRequestLocaleEnum)[keyof typeof AdGroupKeywordTargetRankRecommendationRequestLocaleEnum];

/**
 *
 * @export
 * @interface AdGroupThemeBasedBidRecommendationRequest
 */
export interface AdGroupThemeBasedBidRecommendationRequest {
  /**
   * The list of targeting expressions. Maximum of 100 per request, use pagination for more if needed.
   * @type {Array<TargetingExpression>}
   * @memberof AdGroupThemeBasedBidRecommendationRequest
   */
  targetingExpressions: Array<TargetingExpression>;
  /**
   * The campaign identifier.
   * @type {string}
   * @memberof AdGroupThemeBasedBidRecommendationRequest
   */
  campaignId: string;
  /**
   * The bid recommendation type.
   * @type {string}
   * @memberof AdGroupThemeBasedBidRecommendationRequest
   */
  recommendationType: AdGroupThemeBasedBidRecommendationRequestRecommendationTypeEnum;
  /**
   * The ad group identifier.
   * @type {string}
   * @memberof AdGroupThemeBasedBidRecommendationRequest
   */
  adGroupId: string;
}

export const AdGroupThemeBasedBidRecommendationRequestRecommendationTypeEnum = {
  BidsForExistingAdGroup: 'BIDS_FOR_EXISTING_AD_GROUP',
} as const;

export type AdGroupThemeBasedBidRecommendationRequestRecommendationTypeEnum =
  (typeof AdGroupThemeBasedBidRecommendationRequestRecommendationTypeEnum)[keyof typeof AdGroupThemeBasedBidRecommendationRequestRecommendationTypeEnum];

/**
 *
 * @export
 * @interface AdGroupThemeBasedBidRecommendationRequestV4
 */
export interface AdGroupThemeBasedBidRecommendationRequestV4 {
  /**
   * The list of targeting expressions. Maximum of 100 per request, use pagination for more if needed.
   * @type {Array<TargetingExpressionV4>}
   * @memberof AdGroupThemeBasedBidRecommendationRequestV4
   */
  targetingExpressions: Array<TargetingExpressionV4>;
  /**
   * The campaign identifier.
   * @type {string}
   * @memberof AdGroupThemeBasedBidRecommendationRequestV4
   */
  campaignId: string;
  /**
   * The bid recommendation type.
   * @type {string}
   * @memberof AdGroupThemeBasedBidRecommendationRequestV4
   */
  recommendationType: AdGroupThemeBasedBidRecommendationRequestV4RecommendationTypeEnum;
  /**
   * The ad group identifier.
   * @type {string}
   * @memberof AdGroupThemeBasedBidRecommendationRequestV4
   */
  adGroupId: string;
}

export const AdGroupThemeBasedBidRecommendationRequestV4RecommendationTypeEnum = {
  BidsForExistingAdGroup: 'BIDS_FOR_EXISTING_AD_GROUP',
} as const;

export type AdGroupThemeBasedBidRecommendationRequestV4RecommendationTypeEnum =
  (typeof AdGroupThemeBasedBidRecommendationRequestV4RecommendationTypeEnum)[keyof typeof AdGroupThemeBasedBidRecommendationRequestV4RecommendationTypeEnum];

/**
 *
 * @export
 * @interface AdGroupThemeBasedBidRecommendationRequestV5
 */
export interface AdGroupThemeBasedBidRecommendationRequestV5 {
  /**
   * The list of targeting expressions. Maximum of 100 per request, use pagination for more if needed.
   * @type {Array<TargetingExpressionV4>}
   * @memberof AdGroupThemeBasedBidRecommendationRequestV5
   */
  targetingExpressions: Array<TargetingExpressionV4>;
  /**
   * The campaign identifier.
   * @type {string}
   * @memberof AdGroupThemeBasedBidRecommendationRequestV5
   */
  campaignId: string;
  /**
   * The bid recommendation type.
   * @type {string}
   * @memberof AdGroupThemeBasedBidRecommendationRequestV5
   */
  recommendationType: AdGroupThemeBasedBidRecommendationRequestV5RecommendationTypeEnum;
  /**
   * Flag to include new bid analyzer data.
   * @type {boolean}
   * @memberof AdGroupThemeBasedBidRecommendationRequestV5
   */
  includeAnalysis?: boolean;
  /**
   * The ad group identifier.
   * @type {string}
   * @memberof AdGroupThemeBasedBidRecommendationRequestV5
   */
  adGroupId: string;
}

export const AdGroupThemeBasedBidRecommendationRequestV5RecommendationTypeEnum = {
  BidsForExistingAdGroup: 'BIDS_FOR_EXISTING_AD_GROUP',
} as const;

export type AdGroupThemeBasedBidRecommendationRequestV5RecommendationTypeEnum =
  (typeof AdGroupThemeBasedBidRecommendationRequestV5RecommendationTypeEnum)[keyof typeof AdGroupThemeBasedBidRecommendationRequestV5RecommendationTypeEnum];

/**
 *
 * @export
 * @interface Adjustment
 */
export interface Adjustment {
  /**
   *
   * @type {PlacementAdjustment}
   * @memberof Adjustment
   */
  placementAdjustment?: PlacementAdjustment;
}
/**
 *
 * @export
 * @interface AgeRange
 */
export interface AgeRange {
  /**
   * Name of Age Range. This field is OPTIONAL if the Age Range object is being used as an input.
   * @type {string}
   * @memberof AgeRange
   */
  name?: string;
  /**
   * Id of Age Range. This field is REQUIRED if the Age Range object is being used as an input. Use the GetRefinementsForCategory to retrieve Age Range Node IDs.
   * @type {string}
   * @memberof AgeRange
   */
  id?: string;
}
/**
 *
 * @export
 * @interface AgeRangeLoP
 */
export interface AgeRangeLoP {
  /**
   * Name of Age Range.
   * @type {string}
   * @memberof AgeRangeLoP
   */
  name?: string;
  /**
   * Id of Age Range. Use the POST /sp/targets/category/{categoryId}/refinements endpoint to retrieve Age Range Node IDs.
   * @type {string}
   * @memberof AgeRangeLoP
   */
  id?: string;
  /**
   * Translated name of Age Range based off locale sent in request.
   * @type {string}
   * @memberof AgeRangeLoP
   */
  translatedName?: string;
}
/**
 *
 * @export
 * @interface AsinsBasedRequest
 */
export interface AsinsBasedRequest {
  /**
   * The bid recommendations returned will depend on the bidding strategy. <br> LEGACY_FOR_SALES - Dynamic Bids (Down only) <br> AUTO_FOR_SALES - Dynamic Bids (Up or down) <br> MANUAL - Fixed Bids
   * @type {string}
   * @memberof AsinsBasedRequest
   */
  biddingStrategy?: AsinsBasedRequestBiddingStrategyEnum;
  /**
   * The recommendationType to retrieve recommended keyword targets for a list of ASINs.
   * @type {string}
   * @memberof AsinsBasedRequest
   */
  recommendationType?: AsinsBasedRequestRecommendationTypeEnum;
  /**
   * Set this parameter to false if you do not want to retrieve bid suggestions for your keyword targets. Defaults to true.
   * @type {boolean}
   * @memberof AsinsBasedRequest
   */
  bidsEnabled?: boolean;
  /**
   * The max size of recommended target. Set it to 0 if you only want to rank user-defined keywords.
   * @type {number}
   * @memberof AsinsBasedRequest
   */
  maxRecommendations?: number;
  /**
   * The ranking metric value. Supported values: CLICKS, CONVERSIONS, DEFAULT. DEFAULT will be applied if no value passed in.
   * @type {string}
   * @memberof AsinsBasedRequest
   */
  sortDimension?: AsinsBasedRequestSortDimensionEnum;
  /**
   * Translations are for readability and do not affect the targeting of ads. Supported marketplace to locale mappings can be found at the <a href=\'https://advertising.amazon.com/API/docs/en-us/localization/#/Keyword%20Localization\'>POST /keywords/localize</a> endpoint. Note: Translations will be null if locale is unsupported.
   * @type {string}
   * @memberof AsinsBasedRequest
   */
  locale?: AsinsBasedRequestLocaleEnum;
}

export const AsinsBasedRequestBiddingStrategyEnum = {
  LegacyForSales: 'LEGACY_FOR_SALES',
  AutoForSales: 'AUTO_FOR_SALES',
  Manual: 'MANUAL',
  RuleBased: 'RULE_BASED',
} as const;

export type AsinsBasedRequestBiddingStrategyEnum = (typeof AsinsBasedRequestBiddingStrategyEnum)[keyof typeof AsinsBasedRequestBiddingStrategyEnum];
export const AsinsBasedRequestRecommendationTypeEnum = {
  KeywordsForAsins: 'KEYWORDS_FOR_ASINS',
} as const;

export type AsinsBasedRequestRecommendationTypeEnum =
  (typeof AsinsBasedRequestRecommendationTypeEnum)[keyof typeof AsinsBasedRequestRecommendationTypeEnum];
export const AsinsBasedRequestSortDimensionEnum = {
  Clicks: 'CLICKS',
  Conversions: 'CONVERSIONS',
  Default: 'DEFAULT',
} as const;

export type AsinsBasedRequestSortDimensionEnum = (typeof AsinsBasedRequestSortDimensionEnum)[keyof typeof AsinsBasedRequestSortDimensionEnum];
export const AsinsBasedRequestLocaleEnum = {
  ArEg: 'ar_EG',
  DeDe: 'de_DE',
  EnAe: 'en_AE',
  EnAu: 'en_AU',
  EnCa: 'en_CA',
  EnGb: 'en_GB',
  EnIn: 'en_IN',
  EnSa: 'en_SA',
  EnSg: 'en_SG',
  EnUs: 'en_US',
  EsEs: 'es_ES',
  EsMx: 'es_MX',
  FrFr: 'fr_FR',
  ItIt: 'it_IT',
  JaJp: 'ja_JP',
  NlNl: 'nl_NL',
  PlPl: 'pl_PL',
  PtBr: 'pt_BR',
  SvSe: 'sv_SE',
  TrTr: 'tr_TR',
  ZhCn: 'zh_CN',
} as const;

export type AsinsBasedRequestLocaleEnum = (typeof AsinsBasedRequestLocaleEnum)[keyof typeof AsinsBasedRequestLocaleEnum];

/**
 * This request type is used to retrieve recommended keyword targets for ASINs. Set the recommendationType to KEYWORDS_FOR_ASINS to use this request type.
 * @export
 * @interface AsinsKeywordTargetRankRecommendationRequest
 */
export interface AsinsKeywordTargetRankRecommendationRequest {
  /**
   * An array list of Asins
   * @type {Array<string>}
   * @memberof AsinsKeywordTargetRankRecommendationRequest
   */
  asins: Array<string>;
  /**
   * The recommendationType to retrieve recommended keyword targets for a list of ASINs.
   * @type {string}
   * @memberof AsinsKeywordTargetRankRecommendationRequest
   */
  recommendationType: AsinsKeywordTargetRankRecommendationRequestRecommendationTypeEnum;
  /**
   * A list of targets that need to be ranked
   * @type {Array<KeywordTarget>}
   * @memberof AsinsKeywordTargetRankRecommendationRequest
   */
  targets?: Array<KeywordTarget>;
  /**
   * The max size of recommended target. Set it to 0 if you only want to rank user-defined keywords.
   * @type {number}
   * @memberof AsinsKeywordTargetRankRecommendationRequest
   */
  maxRecommendations?: number;
  /**
   * The ranking metric value. Supported values: CLICKS, CONVERSIONS, DEFAULT. DEFAULT will be applied if no value passed in.
   * @type {string}
   * @memberof AsinsKeywordTargetRankRecommendationRequest
   */
  sortDimension?: AsinsKeywordTargetRankRecommendationRequestSortDimensionEnum;
  /**
   * Translations are for readability and do not affect the targeting of ads. Supported marketplace to locale mappings can be found at the <a href=\'https://advertising.amazon.com/API/docs/en-us/localization/#/Keyword%20Localization\'>POST /keywords/localize</a> endpoint. Note: Translations will be null if locale is unsupported.
   * @type {string}
   * @memberof AsinsKeywordTargetRankRecommendationRequest
   */
  locale?: AsinsKeywordTargetRankRecommendationRequestLocaleEnum;
}

export const AsinsKeywordTargetRankRecommendationRequestRecommendationTypeEnum = {
  KeywordsForAsins: 'KEYWORDS_FOR_ASINS',
} as const;

export type AsinsKeywordTargetRankRecommendationRequestRecommendationTypeEnum =
  (typeof AsinsKeywordTargetRankRecommendationRequestRecommendationTypeEnum)[keyof typeof AsinsKeywordTargetRankRecommendationRequestRecommendationTypeEnum];
export const AsinsKeywordTargetRankRecommendationRequestSortDimensionEnum = {
  Clicks: 'CLICKS',
  Conversions: 'CONVERSIONS',
  Default: 'DEFAULT',
} as const;

export type AsinsKeywordTargetRankRecommendationRequestSortDimensionEnum =
  (typeof AsinsKeywordTargetRankRecommendationRequestSortDimensionEnum)[keyof typeof AsinsKeywordTargetRankRecommendationRequestSortDimensionEnum];
export const AsinsKeywordTargetRankRecommendationRequestLocaleEnum = {
  ArEg: 'ar_EG',
  DeDe: 'de_DE',
  EnAe: 'en_AE',
  EnAu: 'en_AU',
  EnCa: 'en_CA',
  EnGb: 'en_GB',
  EnIn: 'en_IN',
  EnSa: 'en_SA',
  EnSg: 'en_SG',
  EnUs: 'en_US',
  EsEs: 'es_ES',
  EsMx: 'es_MX',
  FrFr: 'fr_FR',
  ItIt: 'it_IT',
  JaJp: 'ja_JP',
  NlNl: 'nl_NL',
  PlPl: 'pl_PL',
  PtBr: 'pt_BR',
  SvSe: 'sv_SE',
  TrTr: 'tr_TR',
  ZhCn: 'zh_CN',
} as const;

export type AsinsKeywordTargetRankRecommendationRequestLocaleEnum =
  (typeof AsinsKeywordTargetRankRecommendationRequestLocaleEnum)[keyof typeof AsinsKeywordTargetRankRecommendationRequestLocaleEnum];

/**
 *
 * @export
 * @interface AsinsThemeBasedBidRecommendationRequest
 */
export interface AsinsThemeBasedBidRecommendationRequest {
  /**
   * The list of ad ASINs in the ad group.
   * @type {Array<string>}
   * @memberof AsinsThemeBasedBidRecommendationRequest
   */
  asins: Array<string>;
  /**
   * The list of targeting expressions. Maximum of 100 per request, use pagination for more if needed.
   * @type {Array<TargetingExpression>}
   * @memberof AsinsThemeBasedBidRecommendationRequest
   */
  targetingExpressions: Array<TargetingExpression>;
  /**
   *
   * @type {AsinsThemeBasedBidRecommendationRequestV5Bidding}
   * @memberof AsinsThemeBasedBidRecommendationRequest
   */
  bidding: AsinsThemeBasedBidRecommendationRequestV5Bidding;
  /**
   * The bid recommendation type.
   * @type {string}
   * @memberof AsinsThemeBasedBidRecommendationRequest
   */
  recommendationType: AsinsThemeBasedBidRecommendationRequestRecommendationTypeEnum;
}

export const AsinsThemeBasedBidRecommendationRequestRecommendationTypeEnum = {
  BidsForNewAdGroup: 'BIDS_FOR_NEW_AD_GROUP',
} as const;

export type AsinsThemeBasedBidRecommendationRequestRecommendationTypeEnum =
  (typeof AsinsThemeBasedBidRecommendationRequestRecommendationTypeEnum)[keyof typeof AsinsThemeBasedBidRecommendationRequestRecommendationTypeEnum];

/**
 *
 * @export
 * @interface AsinsThemeBasedBidRecommendationRequestV4
 */
export interface AsinsThemeBasedBidRecommendationRequestV4 {
  /**
   * The list of ad ASINs in the ad group.
   * @type {Array<string>}
   * @memberof AsinsThemeBasedBidRecommendationRequestV4
   */
  asins: Array<string>;
  /**
   * The list of targeting expressions. Maximum of 100 per request, use pagination for more if needed.
   * @type {Array<TargetingExpressionV4>}
   * @memberof AsinsThemeBasedBidRecommendationRequestV4
   */
  targetingExpressions: Array<TargetingExpressionV4>;
  /**
   * The list of products in the request, required for GlobalStore ASINs.
   * @type {Array<ProductDetails>}
   * @memberof AsinsThemeBasedBidRecommendationRequestV4
   */
  productDetailsList?: Array<ProductDetails>;
  /**
   *
   * @type {AsinsThemeBasedBidRecommendationRequestV5Bidding}
   * @memberof AsinsThemeBasedBidRecommendationRequestV4
   */
  bidding: AsinsThemeBasedBidRecommendationRequestV5Bidding;
  /**
   * The bid recommendation type.
   * @type {string}
   * @memberof AsinsThemeBasedBidRecommendationRequestV4
   */
  recommendationType: AsinsThemeBasedBidRecommendationRequestV4RecommendationTypeEnum;
}

export const AsinsThemeBasedBidRecommendationRequestV4RecommendationTypeEnum = {
  BidsForNewAdGroup: 'BIDS_FOR_NEW_AD_GROUP',
} as const;

export type AsinsThemeBasedBidRecommendationRequestV4RecommendationTypeEnum =
  (typeof AsinsThemeBasedBidRecommendationRequestV4RecommendationTypeEnum)[keyof typeof AsinsThemeBasedBidRecommendationRequestV4RecommendationTypeEnum];

/**
 *
 * @export
 * @interface AsinsThemeBasedBidRecommendationRequestV5
 */
export interface AsinsThemeBasedBidRecommendationRequestV5 {
  /**
   * The list of ad ASINs in the ad group.
   * @type {Array<string>}
   * @memberof AsinsThemeBasedBidRecommendationRequestV5
   */
  asins: Array<string>;
  /**
   * The list of targeting expressions. Maximum of 100 per request, use pagination for more if needed.
   * @type {Array<TargetingExpressionV4>}
   * @memberof AsinsThemeBasedBidRecommendationRequestV5
   */
  targetingExpressions: Array<TargetingExpressionV4>;
  /**
   * This field is upcoming and not ready for use. The list of products in the request, required for GlobalStore ASINs.
   * @type {Array<ProductDetails>}
   * @memberof AsinsThemeBasedBidRecommendationRequestV5
   */
  productDetailsList?: Array<ProductDetails>;
  /**
   *
   * @type {AsinsThemeBasedBidRecommendationRequestV5Bidding}
   * @memberof AsinsThemeBasedBidRecommendationRequestV5
   */
  bidding: AsinsThemeBasedBidRecommendationRequestV5Bidding;
  /**
   * The bid recommendation type.
   * @type {string}
   * @memberof AsinsThemeBasedBidRecommendationRequestV5
   */
  recommendationType: AsinsThemeBasedBidRecommendationRequestV5RecommendationTypeEnum;
  /**
   * Flag to include new bid analyzer data.
   * @type {boolean}
   * @memberof AsinsThemeBasedBidRecommendationRequestV5
   */
  includeAnalysis?: boolean;
}

export const AsinsThemeBasedBidRecommendationRequestV5RecommendationTypeEnum = {
  BidsForNewAdGroup: 'BIDS_FOR_NEW_AD_GROUP',
} as const;

export type AsinsThemeBasedBidRecommendationRequestV5RecommendationTypeEnum =
  (typeof AsinsThemeBasedBidRecommendationRequestV5RecommendationTypeEnum)[keyof typeof AsinsThemeBasedBidRecommendationRequestV5RecommendationTypeEnum];

/**
 * Bidding control configuration for the campaign.
 * @export
 * @interface AsinsThemeBasedBidRecommendationRequestV5Bidding
 */
export interface AsinsThemeBasedBidRecommendationRequestV5Bidding {
  /**
   * Placement adjustment configuration for the campaign.
   * @type {Array<PlacementAdjustment>}
   * @memberof AsinsThemeBasedBidRecommendationRequestV5Bidding
   */
  adjustments?: Array<PlacementAdjustment>;
  /**
   *
   * @type {BiddingStrategy}
   * @memberof AsinsThemeBasedBidRecommendationRequestV5Bidding
   */
  strategy: BiddingStrategy;
}

/**
 *
 * @export
 * @interface AssociatedBudgetRuleResponse
 */
export interface AssociatedBudgetRuleResponse {
  /**
   * An enumerated success or error code for machine use.
   * @type {string}
   * @memberof AssociatedBudgetRuleResponse
   */
  code?: string;
  /**
   * A human-readable description of the error, if unsuccessful
   * @type {string}
   * @memberof AssociatedBudgetRuleResponse
   */
  details?: string;
  /**
   * The budget rule identifier.
   * @type {string}
   * @memberof AssociatedBudgetRuleResponse
   */
  ruleId?: string;
}
/**
 *
 * @export
 * @interface AssociatedCampaign
 */
export interface AssociatedCampaign {
  /**
   * The campaign identifier.
   * @type {string}
   * @memberof AssociatedCampaign
   */
  campaignId: string;
  /**
   * The budget rule evaluation status for this campaign. Read-only.
   * @type {string}
   * @memberof AssociatedCampaign
   */
  ruleStatus: string;
  /**
   * The campaign name.
   * @type {string}
   * @memberof AssociatedCampaign
   */
  campaignName: string;
}
/**
 * Returns information about a BadRequestException.
 * @export
 * @interface BadRequestException
 */
export interface BadRequestException {
  /**
   * The HTTP status code of the response.
   * @type {string}
   * @memberof BadRequestException
   */
  code?: string;
  /**
   * A human-readable description of the response.
   * @type {string}
   * @memberof BadRequestException
   */
  details?: string;
}
/**
 * Forecasted impact metrics for next 7 days or during special days.
 * @export
 * @interface Benchmark
 */
export interface Benchmark {
  /**
   * Specifies the processing status of the benchmark. Success - If all fields in values property (impressions, clicks, conversions) have all non-null values. Failed - If all fields in values property have all null values. Partial - If some of the fields (impressions, clicks, or conversions) in values property have null values.
   * @type {string}
   * @memberof Benchmark
   */
  benchmarkStatus?: BenchmarkBenchmarkStatusEnum;
  /**
   *
   * @type {Values}
   * @memberof Benchmark
   */
  values?: Values;
}

export const BenchmarkBenchmarkStatusEnum = {
  Success: 'success',
  Failed: 'failed',
  Partial: 'partial',
} as const;

export type BenchmarkBenchmarkStatusEnum = (typeof BenchmarkBenchmarkStatusEnum)[keyof typeof BenchmarkBenchmarkStatusEnum];

/**
 *
 * @export
 * @interface BidAnalysesPerPlacement
 */
export interface BidAnalysesPerPlacement {
  /**
   *
   * @type {Array<BidAnalysis>}
   * @memberof BidAnalysesPerPlacement
   */
  ALL: Array<BidAnalysis>;
  /**
   *
   * @type {Array<BidAnalysis>}
   * @memberof BidAnalysesPerPlacement
   */
  PLACEMENT_TOP: Array<BidAnalysis>;
  /**
   *
   * @type {Array<BidAnalysis>}
   * @memberof BidAnalysesPerPlacement
   */
  PLACEMENT_REST_OF_SEARCH: Array<BidAnalysis>;
  /**
   *
   * @type {Array<BidAnalysis>}
   * @memberof BidAnalysesPerPlacement
   */
  PLACEMENT_PRODUCT_PAGE: Array<BidAnalysis>;
}
/**
 *
 * @export
 * @interface BidAnalysesPerTargetingExpression
 */
export interface BidAnalysesPerTargetingExpression {
  /**
   *
   * @type {BidAnalysesPerPlacement}
   * @memberof BidAnalysesPerTargetingExpression
   */
  bidAnalyses: BidAnalysesPerPlacement;
  /**
   *
   * @type {TargetingExpressionV4}
   * @memberof BidAnalysesPerTargetingExpression
   */
  targetingExpression: TargetingExpressionV4;
}
/**
 *
 * @export
 * @interface BidAnalysis
 */
export interface BidAnalysis {
  /**
   *
   * @type {number}
   * @memberof BidAnalysis
   */
  bid: number;
  /**
   * The type of bids in bid analyses. <br>`SUGGESTED_UPPER` - The upper bound for the suggested bid. <br>`SUGGESTED_LOWER` - The lower bound for the suggested bid. <br>`SUGGESTED` - The suggested bid value. <br>\'ALTERNATIVE\' - The alternative bids that is included in the bid analyses.
   * @type {string}
   * @memberof BidAnalysis
   */
  type: BidAnalysisTypeEnum;
  /**
   *
   * @type {BidAnalysisImpactMetrics}
   * @memberof BidAnalysis
   */
  impactMetrics: BidAnalysisImpactMetrics;
}

export const BidAnalysisTypeEnum = {
  SuggestedUpper: 'SUGGESTED_UPPER',
  SuggestedLower: 'SUGGESTED_LOWER',
  Suggested: 'SUGGESTED',
  Alternative: 'ALTERNATIVE',
} as const;

export type BidAnalysisTypeEnum = (typeof BidAnalysisTypeEnum)[keyof typeof BidAnalysisTypeEnum];

/**
 *
 * @export
 * @interface BidAnalysisImpactMetrics
 */
export interface BidAnalysisImpactMetrics {
  /**
   * Number indicating the average of the estimated impressions
   * @type {number}
   * @memberof BidAnalysisImpactMetrics
   */
  estimatedImpressionAvg: number;
  /**
   * Number indicating an upper bound of the estimated impressions
   * @type {number}
   * @memberof BidAnalysisImpactMetrics
   */
  estimatedImpressionUpper: number;
  /**
   * Number indicating a lower bound of the estimated impressions
   * @type {number}
   * @memberof BidAnalysisImpactMetrics
   */
  estimatedImpressionLower: number;
}
/**
 * Specifies bid adjustments based on the placement location. Use `PLACEMENT_TOP` for the top of the search page. Use `PLACEMENT_REST_OF_SEARCH` for the rest of the search page. Use `PLACEMENT_PRODUCT_PAGE` for a product page.
 * @export
 * @interface BidPlacementAdjustment
 */
export interface BidPlacementAdjustment {
  /**
   *
   * @type {string}
   * @memberof BidPlacementAdjustment
   */
  predicate?: BidPlacementAdjustmentPredicateEnum;
  /**
   *
   * @type {number}
   * @memberof BidPlacementAdjustment
   */
  percentage?: number;
}

export const BidPlacementAdjustmentPredicateEnum = {
  PlacementTop: 'PLACEMENT_TOP',
  PlacementRestOfSearch: 'PLACEMENT_REST_OF_SEARCH',
  PlacementProductPage: 'PLACEMENT_PRODUCT_PAGE',
} as const;

export type BidPlacementAdjustmentPredicateEnum = (typeof BidPlacementAdjustmentPredicateEnum)[keyof typeof BidPlacementAdjustmentPredicateEnum];

/**
 *
 * @export
 * @interface BidRecommendationError
 */
export interface BidRecommendationError {
  /**
   * A machine-readable error code.
   * @type {string}
   * @memberof BidRecommendationError
   */
  code: string;
  /**
   * A human-readable description of the response.
   * @type {string}
   * @memberof BidRecommendationError
   */
  details: string;
}
/**
 *
 * @export
 * @interface BidRecommendationPerTargetingExpression
 */
export interface BidRecommendationPerTargetingExpression {
  /**
   *
   * @type {Array<BidValue>}
   * @memberof BidRecommendationPerTargetingExpression
   */
  bidValues: Array<BidValue>;
  /**
   *
   * @type {TargetingExpression}
   * @memberof BidRecommendationPerTargetingExpression
   */
  targetingExpression: TargetingExpression;
}
/**
 *
 * @export
 * @interface BidRecommendationPerTargetingExpressionV4
 */
export interface BidRecommendationPerTargetingExpressionV4 {
  /**
   *
   * @type {Array<BidValue>}
   * @memberof BidRecommendationPerTargetingExpressionV4
   */
  bidValues: Array<BidValue>;
  /**
   *
   * @type {TargetingExpressionV4}
   * @memberof BidRecommendationPerTargetingExpressionV4
   */
  targetingExpression: TargetingExpressionV4;
}
/**
 *
 * @export
 * @interface BidRecommendationPerTargetingExpressionV5
 */
export interface BidRecommendationPerTargetingExpressionV5 {
  /**
   *
   * @type {BidRecommendationPerTargetingExpressionV5SuggestedBidImpactMetrics}
   * @memberof BidRecommendationPerTargetingExpressionV5
   */
  suggestedBidImpactMetrics?: BidRecommendationPerTargetingExpressionV5SuggestedBidImpactMetrics | null;
  /**
   *
   * @type {Array<BidValue>}
   * @memberof BidRecommendationPerTargetingExpressionV5
   */
  bidValues: Array<BidValue>;
  /**
   *
   * @type {TargetingExpressionV4}
   * @memberof BidRecommendationPerTargetingExpressionV5
   */
  targetingExpression: TargetingExpressionV4;
}
/**
 *
 * @export
 * @interface BidRecommendationPerTargetingExpressionV5SuggestedBidImpactMetrics
 */
export interface BidRecommendationPerTargetingExpressionV5SuggestedBidImpactMetrics {
  /**
   *
   * @type {number}
   * @memberof BidRecommendationPerTargetingExpressionV5SuggestedBidImpactMetrics
   */
  estimatedImpressionUpper?: number;
  /**
   *
   * @type {number}
   * @memberof BidRecommendationPerTargetingExpressionV5SuggestedBidImpactMetrics
   */
  estimatedImpressionLower?: number;
}
/**
 * Suggested bid range in major and minor currency units (example: dollars and cents).
 * @export
 * @interface BidSuggestion
 */
export interface BidSuggestion {
  /**
   * The suggested bid
   * @type {number}
   * @memberof BidSuggestion
   */
  suggested?: number;
  /**
   * The bid range start
   * @type {number}
   * @memberof BidSuggestion
   */
  rangeStart?: number;
  /**
   * The bid recommendation id
   * @type {string}
   * @memberof BidSuggestion
   */
  bidRecId?: string;
  /**
   * The bid range end
   * @type {number}
   * @memberof BidSuggestion
   */
  rangeEnd?: number;
}
/**
 * Bid value of the bid recommendations.
 * @export
 * @interface BidValue
 */
export interface BidValue {
  /**
   * The suggested bid.
   * @type {number}
   * @memberof BidValue
   */
  suggestedBid: number;
}
/**
 * Suggested bid range
 * @export
 * @interface BidValues
 */
export interface BidValues {
  /**
   * The suggested bid
   * @type {number}
   * @memberof BidValues
   */
  suggested?: number;
  /**
   * The bid range start
   * @type {number}
   * @memberof BidValues
   */
  rangeStart?: number;
  /**
   * The bid range end
   * @type {number}
   * @memberof BidValues
   */
  rangeEnd?: number;
}
/**
 * The bidding control configuration for the new campaign.
 * @export
 * @interface Bidding
 */
export interface Bidding {
  /**
   * Placement adjustment configuration for the campaign.
   * @type {Array<Adjustment>}
   * @memberof Bidding
   */
  adjustments?: Array<Adjustment>;
  /**
   * The bidding strategy selected for the campaign. Use LEGACY_FOR_SALES to lower your bid in real time when your ad may be less likely to convert to a sale. Use AUTO_FOR_SALES to increase your bid in real time when your ad may be more likely to convert to a sale or lower your bid when less likely to convert to a sale. Use MANUAL to use your exact bid along with any manual adjustments.
   * @type {string}
   * @memberof Bidding
   */
  strategy: BiddingStrategyEnum;
}

export const BiddingStrategyEnum = {
  LegacyForSales: 'LEGACY_FOR_SALES',
  AutoForSales: 'AUTO_FOR_SALES',
  Manual: 'MANUAL',
  RuleBased: 'RULE_BASED',
} as const;

export type BiddingStrategyEnum = (typeof BiddingStrategyEnum)[keyof typeof BiddingStrategyEnum];

/**
 *
 * @export
 * @interface BiddingError
 */
export interface BiddingError {
  /**
   *
   * @type {SponsoredProductsBiddingError}
   * @memberof BiddingError
   */
  biddingError: SponsoredProductsBiddingError;
}
/**
 * The bidding strategy selected for the campaign. Use `LEGACY_FOR_SALES` to lower your bid in real time when your ad may be less likely to convert to a sale. Use `AUTO_FOR_SALES` to increase your bid in real time when your ad may be more likely to convert to a sale or lower your bid when less likely to convert to a sale. Use `MANUAL` to use your exact bid along with any manual adjustments.
 * @export
 * @enum {string}
 */

export const BiddingStrategy = {
  LegacyForSales: 'LEGACY_FOR_SALES',
  AutoForSales: 'AUTO_FOR_SALES',
  Manual: 'MANUAL',
  RuleBased: 'RULE_BASED',
} as const;

export type BiddingStrategy = (typeof BiddingStrategy)[keyof typeof BiddingStrategy];

/**
 * Contains suggested recommendation for the campaign bidding strategy.
 * @export
 * @interface BiddingStrategyRecommendation
 */
export interface BiddingStrategyRecommendation {
  /**
   * The suggested bidding strategy value for the campaign. | Value | Strategy name | Description | |----------------|---------------|-------------| | `LEGACY_FOR_SALES` | Dynamic bids - down only | Lowers your bids in real time when your ad may be less likely to convert to a sale. Campaigns created before the release of the bidding controls feature used this setting by default. | | `AUTO_FOR_SALES` | Dynamic bids - up and down | Increases or decreases your bids in real time by a maximum of 100%. With this setting bids increase when your ad is more likely to convert to a sale, and bids decrease when less likely to convert to a sale. | | `MANUAL` | Fixed bid | Uses your exact bid and any placement adjustments you set, and is not subject to dynamic bidding. |
   * @type {string}
   * @memberof BiddingStrategyRecommendation
   */
  suggestedBiddingStrategy?: BiddingStrategyRecommendationSuggestedBiddingStrategyEnum;
  /**
   * Type of suggested action.
   * @type {string}
   * @memberof BiddingStrategyRecommendation
   */
  action?: BiddingStrategyRecommendationActionEnum;
}

export const BiddingStrategyRecommendationSuggestedBiddingStrategyEnum = {
  LegacyForSales: 'LEGACY_FOR_SALES',
  AutoForSales: 'AUTO_FOR_SALES',
  Manual: 'MANUAL',
} as const;

export type BiddingStrategyRecommendationSuggestedBiddingStrategyEnum =
  (typeof BiddingStrategyRecommendationSuggestedBiddingStrategyEnum)[keyof typeof BiddingStrategyRecommendationSuggestedBiddingStrategyEnum];
export const BiddingStrategyRecommendationActionEnum = {
  Update: 'UPDATE',
} as const;

export type BiddingStrategyRecommendationActionEnum =
  (typeof BiddingStrategyRecommendationActionEnum)[keyof typeof BiddingStrategyRecommendationActionEnum];

/**
 *
 * @export
 * @interface BillingError
 */
export interface BillingError {
  /**
   *
   * @type {SponsoredProductsBillingError}
   * @memberof BillingError
   */
  billingError: SponsoredProductsBillingError;
}
/**
 *
 * @export
 * @interface Brand
 */
export interface Brand {
  /**
   * Name of brand. This field is OPTIONAL if the Brand object is being used as an input.
   * @type {string}
   * @memberof Brand
   */
  name?: string;
  /**
   * Id of brand. This field is REQUIRED if the Brand object is being used as an input. Use the GetRefinementsForCategory to retrieve Brand Node IDs.
   * @type {string}
   * @memberof Brand
   */
  id?: string;
}
/**
 *
 * @export
 * @interface BrandLoP
 */
export interface BrandLoP {
  /**
   * Name of brand.
   * @type {string}
   * @memberof BrandLoP
   */
  name?: string;
  /**
   * Id of brand.
   * @type {string}
   * @memberof BrandLoP
   */
  id?: string;
}
/**
 * The value by which to update the budget of the budget rule.
 * @export
 * @enum {string}
 */

export const BudgetChangeType = {
  Percent: 'PERCENT',
} as const;

export type BudgetChangeType = (typeof BudgetChangeType)[keyof typeof BudgetChangeType];

/**
 *
 * @export
 * @interface BudgetIncreaseBy
 */
export interface BudgetIncreaseBy {
  /**
   *
   * @type {BudgetChangeType}
   * @memberof BudgetIncreaseBy
   */
  type: BudgetChangeType;
  /**
   * The budget value.
   * @type {number}
   * @memberof BudgetIncreaseBy
   */
  value: number;
}

/**
 * Contains suggested recommendation for the campaign budget.
 * @export
 * @interface BudgetRecommendation
 */
export interface BudgetRecommendation {
  /**
   * The suggested budget value for the campaign.
   * @type {number}
   * @memberof BudgetRecommendation
   */
  suggestedBudget?: number;
  /**
   * Type of suggested action.
   * @type {string}
   * @memberof BudgetRecommendation
   */
  action?: BudgetRecommendationActionEnum;
}

export const BudgetRecommendationActionEnum = {
  Increase: 'INCREASE',
  Decrease: 'DECREASE',
} as const;

export type BudgetRecommendationActionEnum = (typeof BudgetRecommendationActionEnum)[keyof typeof BudgetRecommendationActionEnum];

/**
 *
 * @export
 * @interface BudgetRecommendationError
 */
export interface BudgetRecommendationError {
  /**
   * encrypted campaignId
   * @type {string}
   * @memberof BudgetRecommendationError
   */
  campaignId: string;
  /**
   * Correlate the recommendation to the campaign index in the request. Zero-based
   * @type {number}
   * @memberof BudgetRecommendationError
   */
  index: number;
  /**
   *
   * @type {SPTORBudgetRecommendationError}
   * @memberof BudgetRecommendationError
   */
  Error: SPTORBudgetRecommendationError;
}
/**
 *
 * @export
 * @interface BudgetRecommendationForExistingCampaign
 */
export interface BudgetRecommendationForExistingCampaign {
  /**
   * encrypted campaignId
   * @type {string}
   * @memberof BudgetRecommendationForExistingCampaign
   */
  campaignId: string;
  /**
   * recommended budget for the campaign.
   * @type {number}
   * @memberof BudgetRecommendationForExistingCampaign
   */
  suggestedBudget: number;
  /**
   * Correlate the recommendation to the campaign index in the request. Zero-based
   * @type {number}
   * @memberof BudgetRecommendationForExistingCampaign
   */
  index: number;
  /**
   *
   * @type {SevenDaysMissedOpportunities}
   * @memberof BudgetRecommendationForExistingCampaign
   */
  sevenDaysMissedOpportunities: SevenDaysMissedOpportunities;
  /**
   *
   * @type {BudgetRuleRecommendation}
   * @memberof BudgetRecommendationForExistingCampaign
   */
  budgetRuleRecommendation: BudgetRuleRecommendation;
}
/**
 *
 * @export
 * @interface BudgetRecommendationNewCampaignsException
 */
export interface BudgetRecommendationNewCampaignsException {
  /**
   *
   * @type {string}
   * @memberof BudgetRecommendationNewCampaignsException
   */
  message?: string;
}
/**
 *
 * @export
 * @interface BudgetRecommendationRequest
 */
export interface BudgetRecommendationRequest {
  /**
   * List of campaigns.
   * @type {Array<string>}
   * @memberof BudgetRecommendationRequest
   */
  campaignIds: Array<string>;
}
/**
 *
 * @export
 * @interface BudgetRecommendationResponse
 */
export interface BudgetRecommendationResponse {
  /**
   * List of successful budget recomendation for campagins.
   * @type {Array<BudgetRecommendationForExistingCampaign>}
   * @memberof BudgetRecommendationResponse
   */
  budgetRecommendationsSuccessResults: Array<BudgetRecommendationForExistingCampaign>;
  /**
   * List of errors that occured when generating bduget recommendation.
   * @type {Array<BudgetRecommendationError>}
   * @memberof BudgetRecommendationResponse
   */
  budgetRecommendationsErrorResults: Array<BudgetRecommendationError>;
}
/**
 * The Error Response Object.
 * @export
 * @interface BudgetRuleError
 */
export interface BudgetRuleError {
  /**
   * An enumerated error code for machine use.
   * @type {string}
   * @memberof BudgetRuleError
   */
  code?: string;
  /**
   * A human-readable description of the response.
   * @type {string}
   * @memberof BudgetRuleError
   */
  details?: string;
}
/**
 *
 * @export
 * @interface BudgetRuleRecommendation
 */
export interface BudgetRuleRecommendation {
  /**
   * suggested increase percent
   * @type {number}
   * @memberof BudgetRuleRecommendation
   */
  suggestedBudgetIncreasePercent?: number;
  /**
   * rule name for the recomemendation
   * @type {string}
   * @memberof BudgetRuleRecommendation
   */
  ruleName?: string;
  /**
   * rule id for the recomemendation
   * @type {string}
   * @memberof BudgetRuleRecommendation
   */
  ruleId?: string;
}
/**
 *
 * @export
 * @interface BudgetRuleResponse
 */
export interface BudgetRuleResponse {
  /**
   * An enumerated success or error code for machine use.
   * @type {string}
   * @memberof BudgetRuleResponse
   */
  code?: string;
  /**
   * A human-readable description of the error, if unsuccessful
   * @type {string}
   * @memberof BudgetRuleResponse
   */
  details?: string;
  /**
   * The rule identifier.
   * @type {string}
   * @memberof BudgetRuleResponse
   */
  ruleId?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof BudgetRuleResponse
   */
  associatedCampaignIds?: Array<string>;
}
/**
 *
 * @export
 * @interface BudgetRulesRelations
 */
export interface BudgetRulesRelations {
  /**
   * The campaign identifier.
   * @type {string}
   * @memberof BudgetRulesRelations
   */
  campaignId: string;
  /**
   * The rule identifier.
   * @type {string}
   * @memberof BudgetRulesRelations
   */
  budgetRuleId: string;
}
/**
 *
 * @export
 * @interface BudgetUsageCampaign
 */
export interface BudgetUsageCampaign {
  /**
   * Budget usage percentage (spend / available budget) for the given budget policy.
   * @type {number}
   * @memberof BudgetUsageCampaign
   */
  budgetUsagePercent?: number;
  /**
   * ID of requested resource
   * @type {string}
   * @memberof BudgetUsageCampaign
   */
  campaignId?: string;
  /**
   * Last evaluation time for budget usage
   * @type {string}
   * @memberof BudgetUsageCampaign
   */
  usageUpdatedTimestamp?: string;
  /**
   * An index to maintain order of the campaignIds
   * @type {number}
   * @memberof BudgetUsageCampaign
   */
  index?: number;
  /**
   * Budget amount of resource requested
   * @type {number}
   * @memberof BudgetUsageCampaign
   */
  budget?: number;
}
/**
 *
 * @export
 * @interface BudgetUsageCampaignBatchError
 */
export interface BudgetUsageCampaignBatchError {
  /**
   * An enumerated error code for machine use.
   * @type {string}
   * @memberof BudgetUsageCampaignBatchError
   */
  code?: string;
  /**
   * ID of requested resource
   * @type {string}
   * @memberof BudgetUsageCampaignBatchError
   */
  campaignId?: string;
  /**
   * An index to maintain order of the campaignIds
   * @type {number}
   * @memberof BudgetUsageCampaignBatchError
   */
  index?: number;
  /**
   * A human-readable description of the response.
   * @type {string}
   * @memberof BudgetUsageCampaignBatchError
   */
  details?: string;
}
/**
 *
 * @export
 * @interface BudgetUsageCampaignRequest
 */
export interface BudgetUsageCampaignRequest {
  /**
   * A list of campaign IDs
   * @type {Array<string>}
   * @memberof BudgetUsageCampaignRequest
   */
  campaignIds?: Array<string>;
}
/**
 *
 * @export
 * @interface BudgetUsageCampaignResponse
 */
export interface BudgetUsageCampaignResponse {
  /**
   * List of budget usage percentages that were successfully pulled
   * @type {Array<BudgetUsageCampaign>}
   * @memberof BudgetUsageCampaignResponse
   */
  success?: Array<BudgetUsageCampaign>;
  /**
   * List of budget usage percentages that failed to pull
   * @type {Array<BudgetUsageCampaignBatchError>}
   * @memberof BudgetUsageCampaignResponse
   */
  error?: Array<BudgetUsageCampaignBatchError>;
}
/**
 * The Error Response Object.
 * @export
 * @interface BudgetUsageError
 */
export interface BudgetUsageError {
  /**
   * An enumerated error code for machine use.
   * @type {string}
   * @memberof BudgetUsageError
   */
  code?: string;
  /**
   * A human-readable description of the response.
   * @type {string}
   * @memberof BudgetUsageError
   */
  details?: string;
}
/**
 *
 * @export
 * @interface BudgetUsagePortfolio
 */
export interface BudgetUsagePortfolio {
  /**
   * Budget usage percentage (spend / available budget) for the given budget policy.
   * @type {number}
   * @memberof BudgetUsagePortfolio
   */
  budgetUsagePercent?: number;
  /**
   * ID of requested resource
   * @type {string}
   * @memberof BudgetUsagePortfolio
   */
  portfolioId?: string;
  /**
   * Last evaluation time for budget usage
   * @type {string}
   * @memberof BudgetUsagePortfolio
   */
  usageUpdatedTimestamp?: string;
  /**
   * An index to maintain order of the portfolioIds
   * @type {number}
   * @memberof BudgetUsagePortfolio
   */
  index?: number;
  /**
   * Budget amount of resource requested
   * @type {number}
   * @memberof BudgetUsagePortfolio
   */
  budget?: number;
}
/**
 *
 * @export
 * @interface BudgetUsagePortfolioBatchError
 */
export interface BudgetUsagePortfolioBatchError {
  /**
   * ID of requested resource
   * @type {string}
   * @memberof BudgetUsagePortfolioBatchError
   */
  portfolioId?: string;
  /**
   * An enumerated error code for machine use.
   * @type {string}
   * @memberof BudgetUsagePortfolioBatchError
   */
  code?: string;
  /**
   * An index to maintain order of the portfolioIds
   * @type {number}
   * @memberof BudgetUsagePortfolioBatchError
   */
  index?: number;
  /**
   * A human-readable description of the response.
   * @type {string}
   * @memberof BudgetUsagePortfolioBatchError
   */
  details?: string;
}
/**
 *
 * @export
 * @interface BudgetUsagePortfolioRequest
 */
export interface BudgetUsagePortfolioRequest {
  /**
   * A list of portfolio IDs.
   * @type {Array<string>}
   * @memberof BudgetUsagePortfolioRequest
   */
  portfolioIds?: Array<string>;
}
/**
 *
 * @export
 * @interface BudgetUsagePortfolioResponse
 */
export interface BudgetUsagePortfolioResponse {
  /**
   * List of budget usage percentages that were successfully pulled
   * @type {Array<BudgetUsagePortfolio>}
   * @memberof BudgetUsagePortfolioResponse
   */
  success?: Array<BudgetUsagePortfolio>;
  /**
   * List of budget usage percentages that failed to pull
   * @type {Array<BudgetUsagePortfolioBatchError>}
   * @memberof BudgetUsagePortfolioResponse
   */
  error?: Array<BudgetUsagePortfolioBatchError>;
}
/**
 *
 * @export
 * @interface BulkBudgetRulesAssociationRequest
 */
export interface BulkBudgetRulesAssociationRequest {
  /**
   * A list of budget rule campaign details.
   * @type {Array<BudgetRulesRelations>}
   * @memberof BulkBudgetRulesAssociationRequest
   */
  budgetRulesAssociations?: Array<BudgetRulesRelations>;
}
/**
 *
 * @export
 * @interface BulkBudgetRulesAssociationResponse
 */
export interface BulkBudgetRulesAssociationResponse {
  /**
   *
   * @type {Array<BulkBudgetRulesRelationsResponse>}
   * @memberof BulkBudgetRulesAssociationResponse
   */
  sucessList?: Array<BulkBudgetRulesRelationsResponse>;
  /**
   *
   * @type {Array<BulkBudgetRulesRelationsResponse>}
   * @memberof BulkBudgetRulesAssociationResponse
   */
  errorList?: Array<BulkBudgetRulesRelationsResponse>;
}
/**
 *
 * @export
 * @interface BulkBudgetRulesDisAssociationRequest
 */
export interface BulkBudgetRulesDisAssociationRequest {
  /**
   * A list of budget rule campaign details.
   * @type {Array<BudgetRulesRelations>}
   * @memberof BulkBudgetRulesDisAssociationRequest
   */
  budgetRulesDissociations?: Array<BudgetRulesRelations>;
}
/**
 *
 * @export
 * @interface BulkBudgetRulesDisAssociationResponse
 */
export interface BulkBudgetRulesDisAssociationResponse {
  /**
   *
   * @type {Array<BulkBudgetRulesRelationsResponse>}
   * @memberof BulkBudgetRulesDisAssociationResponse
   */
  sucessList?: Array<BulkBudgetRulesRelationsResponse>;
  /**
   *
   * @type {Array<BulkBudgetRulesRelationsResponse>}
   * @memberof BulkBudgetRulesDisAssociationResponse
   */
  errorList?: Array<BulkBudgetRulesRelationsResponse>;
}
/**
 *
 * @export
 * @interface BulkBudgetRulesRelationsResponse
 */
export interface BulkBudgetRulesRelationsResponse {
  /**
   * An enumerated success or error code for machine use.
   * @type {string}
   * @memberof BulkBudgetRulesRelationsResponse
   */
  code?: string;
  /**
   * The campaign identifier.
   * @type {string}
   * @memberof BulkBudgetRulesRelationsResponse
   */
  campaignId?: string;
  /**
   * The index of the request in the bulk request.
   * @type {number}
   * @memberof BulkBudgetRulesRelationsResponse
   */
  index?: number;
  /**
   * A human-readable description of the error, if unsuccessful
   * @type {string}
   * @memberof BulkBudgetRulesRelationsResponse
   */
  details?: string;
  /**
   * The budget rule identifier.
   * @type {string}
   * @memberof BulkBudgetRulesRelationsResponse
   */
  ruleId?: string;
}
/**
 *
 * @export
 * @interface CampaignOptimizationRule
 */
export interface CampaignOptimizationRule {
  /**
   *
   * @type {RecurrenceType}
   * @memberof CampaignOptimizationRule
   */
  recurrence?: RecurrenceType;
  /**
   *
   * @type {RuleAction}
   * @memberof CampaignOptimizationRule
   */
  ruleAction?: RuleAction;
  /**
   * The persistent rule identifier.
   * @type {string}
   * @memberof CampaignOptimizationRule
   */
  campaignOptimizationId: string;
  /**
   * Time of campaign optimization rule creation in ISO 8061. Read-only.
   * @type {string}
   * @memberof CampaignOptimizationRule
   */
  createdDate?: string;
  /**
   *
   * @type {Array<RuleCondition>}
   * @memberof CampaignOptimizationRule
   */
  ruleCondition?: Array<RuleCondition>;
  /**
   *
   * @type {RuleType}
   * @memberof CampaignOptimizationRule
   */
  ruleType?: RuleType;
  /**
   * The campaign optimization rule name.
   * @type {string}
   * @memberof CampaignOptimizationRule
   */
  ruleName?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof CampaignOptimizationRule
   */
  campaignIds?: Array<string>;
  /**
   *
   * @type {RuleStatus}
   * @memberof CampaignOptimizationRule
   */
  ruleStatus?: RuleStatus;
}

/**
 * The Error Response Object.
 * @export
 * @interface CampaignOptimizationRuleError
 */
export interface CampaignOptimizationRuleError {
  /**
   * An enumerated error code for machine use.
   * @type {string}
   * @memberof CampaignOptimizationRuleError
   */
  code?: string;
  /**
   * A human-readable description of the response.
   * @type {string}
   * @memberof CampaignOptimizationRuleError
   */
  details?: string;
}
/**
 * This object contains a set of recommendations for a campaign across bid, budget, targeting.
 * @export
 * @interface CampaignRecommendation
 */
export interface CampaignRecommendation {
  /**
   *
   * @type {SevenDaysEstimatedOpportunities}
   * @memberof CampaignRecommendation
   */
  sevenDaysEstimatedOpportunities?: SevenDaysEstimatedOpportunities;
  /**
   *
   * @type {BiddingStrategyRecommendation}
   * @memberof CampaignRecommendation
   */
  biddingStrategyRecommendation?: BiddingStrategyRecommendation;
  /**
   * The identifier of the campaign.
   * @type {string}
   * @memberof CampaignRecommendation
   */
  campaignId?: string;
  /**
   *
   * @type {Array<KeywordTargetingRecommendation>}
   * @memberof CampaignRecommendation
   */
  keywordTargetingRecommendations?: Array<KeywordTargetingRecommendation>;
  /**
   *
   * @type {BudgetRecommendation}
   * @memberof CampaignRecommendation
   */
  budgetRecommendation?: BudgetRecommendation;
  /**
   *
   * @type {Array<TargetingGroupBidRecommendation>}
   * @memberof CampaignRecommendation
   */
  targetingGroupBidRecommendations?: Array<TargetingGroupBidRecommendation>;
  /**
   *
   * @type {Array<PlacementBiddingRecommendation>}
   * @memberof CampaignRecommendation
   */
  placementBiddingRecommendations?: Array<PlacementBiddingRecommendation>;
}
/**
 *
 * @export
 * @interface CategoryItem
 */
export interface CategoryItem {
  /**
   * The category id of the parent node
   * @type {string}
   * @memberof CategoryItem
   */
  parent?: string;
  /**
   * The path of the category, which contains the current category and all parent categories
   * @type {string}
   * @memberof CategoryItem
   */
  path?: string;
  /**
   * A flag which indicates if the current node may be targeted
   * @type {boolean}
   * @memberof CategoryItem
   */
  canBeTargeted?: boolean;
  /**
   * The name of the category
   * @type {string}
   * @memberof CategoryItem
   */
  name?: string;
  /**
   * The category id of the current node
   * @type {string}
   * @memberof CategoryItem
   */
  id?: string;
}
/**
 *
 * @export
 * @interface CategoryItemWithAsinCounts
 */
export interface CategoryItemWithAsinCounts {
  /**
   * The path of the category, which contains the current category and all parent categories
   * @type {string}
   * @memberof CategoryItemWithAsinCounts
   */
  categoryPath?: string;
  /**
   * The name of the category
   * @type {string}
   * @memberof CategoryItemWithAsinCounts
   */
  name?: string;
  /**
   *
   * @type {IntegerRange}
   * @memberof CategoryItemWithAsinCounts
   */
  asinCounts?: IntegerRange;
  /**
   * The category id of the parent node
   * @type {string}
   * @memberof CategoryItemWithAsinCounts
   */
  parentCategoryId?: string;
  /**
   * The category id of the current node
   * @type {string}
   * @memberof CategoryItemWithAsinCounts
   */
  id?: string;
}
/**
 *
 * @export
 * @interface CategoryItemWithAsinCountsLoP
 */
export interface CategoryItemWithAsinCountsLoP {
  /**
   * The path of the category, which contains the current category and all parent categories
   * @type {string}
   * @memberof CategoryItemWithAsinCountsLoP
   */
  categoryPath?: string;
  /**
   * The name of the category
   * @type {string}
   * @memberof CategoryItemWithAsinCountsLoP
   */
  name?: string;
  /**
   * The translated path of the category, which contains the current category and all parent categories.
   * @type {string}
   * @memberof CategoryItemWithAsinCountsLoP
   */
  translatedCategoryPath?: string;
  /**
   *
   * @type {IntegerRange}
   * @memberof CategoryItemWithAsinCountsLoP
   */
  asinCounts?: IntegerRange;
  /**
   * The category id of the parent node
   * @type {string}
   * @memberof CategoryItemWithAsinCountsLoP
   */
  parentCategoryId?: string;
  /**
   * The category id of the current node
   * @type {string}
   * @memberof CategoryItemWithAsinCountsLoP
   */
  id?: string;
  /**
   * The translated name of the category.
   * @type {string}
   * @memberof CategoryItemWithAsinCountsLoP
   */
  translatedName?: string;
}
/**
 * Response object for the GetCategoryRecommendationsForAsins API.
 * @export
 * @interface CategoryRecommendations
 */
export interface CategoryRecommendations {
  /**
   * List of category recommendations
   * @type {Array<CategoryItem>}
   * @memberof CategoryRecommendations
   */
  categories?: Array<CategoryItem>;
}
/**
 * Response object for the GetCategoryRecommendationsForAsins API.
 * @export
 * @interface CategoryRecommendationsWithAsinCounts
 */
export interface CategoryRecommendationsWithAsinCounts {
  /**
   * List of category recommendations
   * @type {Array<CategoryItemWithAsinCounts>}
   * @memberof CategoryRecommendationsWithAsinCounts
   */
  categories?: Array<CategoryItemWithAsinCounts>;
}
/**
 * Response object for the GetCategoryRecommendationsForAsins API.
 * @export
 * @interface CategoryRecommendationsWithAsinCountsLoP
 */
export interface CategoryRecommendationsWithAsinCountsLoP {
  /**
   * List of category recommendations
   * @type {Array<CategoryItemWithAsinCountsLoP>}
   * @memberof CategoryRecommendationsWithAsinCountsLoP
   */
  categories?: Array<CategoryItemWithAsinCountsLoP>;
}
/**
 * Clicks benchmark.
 * @export
 * @interface Clicks
 */
export interface Clicks {
  /**
   * lower bound.
   * @type {number}
   * @memberof Clicks
   */
  lower?: number;
  /**
   * upper bound.
   * @type {number}
   * @memberof Clicks
   */
  upper?: number;
}
/**
 * The comparison operator.
 * @export
 * @enum {string}
 */

export const ComparisonOperator = {
  GreaterThan: 'GREATER_THAN',
  LessThan: 'LESS_THAN',
  EqualTo: 'EQUAL_TO',
  LessThanOrEqualTo: 'LESS_THAN_OR_EQUAL_TO',
  GreaterThanOrEqualTo: 'GREATER_THAN_OR_EQUAL_TO',
} as const;

export type ComparisonOperator = (typeof ComparisonOperator)[keyof typeof ComparisonOperator];

/**
 * Conversions benchmark.
 * @export
 * @interface Conversions
 */
export interface Conversions {
  /**
   * lower bound.
   * @type {number}
   * @memberof Conversions
   */
  lower?: number;
  /**
   * upper bound.
   * @type {number}
   * @memberof Conversions
   */
  upper?: number;
}
/**
 *
 * @export
 * @interface CountryBudgetRecommendation
 */
export interface CountryBudgetRecommendation {
  /**
   * recommended budget for the country in country\'s local currency.
   * @type {number}
   * @memberof CountryBudgetRecommendation
   */
  suggestedBudget: number;
  /**
   *
   * @type {SevenDaysMissedOpportunities}
   * @memberof CountryBudgetRecommendation
   */
  sevenDaysMissedOpportunities: SevenDaysMissedOpportunities;
}
/**
 *
 * @export
 * @interface CountryKeyword
 */
export interface CountryKeyword {
  /**
   * The bid value for the keyword, in minor currency units (example: cents). The default value will be the suggested bid.
   * @type {number}
   * @memberof CountryKeyword
   */
  bid?: number;
  /**
   * The keyword value
   * @type {string}
   * @memberof CountryKeyword
   */
  value?: string;
  /**
   * Flag that tells if keyword was selected by the user or was recommended by KRS
   * @type {boolean}
   * @memberof CountryKeyword
   */
  userSelectedKeyword?: boolean;
}
/**
 *
 * @export
 * @interface CountryTarget
 */
export interface CountryTarget {
  /**
   * Map represents the same keyword in a different countries and locales. Key is a 2-letter country code, value is a keyword object with value and bid fields
   * @type {{ [key: string]: CountryKeyword; }}
   * @memberof CountryTarget
   */
  countryKeywords?: { [key: string]: CountryKeyword };
  /**
   * Keyword match type. The default value will be BROAD.
   * @type {string}
   * @memberof CountryTarget
   */
  matchType?: CountryTargetMatchTypeEnum;
}

export const CountryTargetMatchTypeEnum = {
  Broad: 'BROAD',
  Exact: 'EXACT',
  Phrase: 'PHRASE',
} as const;

export type CountryTargetMatchTypeEnum = (typeof CountryTargetMatchTypeEnum)[keyof typeof CountryTargetMatchTypeEnum];

/**
 *
 * @export
 * @interface CreateAssociatedBudgetRulesRequest
 */
export interface CreateAssociatedBudgetRulesRequest {
  /**
   * A list of budget rule identifiers.
   * @type {Array<string>}
   * @memberof CreateAssociatedBudgetRulesRequest
   */
  budgetRuleIds?: Array<string>;
}
/**
 *
 * @export
 * @interface CreateAssociatedBudgetRulesResponse
 */
export interface CreateAssociatedBudgetRulesResponse {
  /**
   *
   * @type {Array<AssociatedBudgetRuleResponse>}
   * @memberof CreateAssociatedBudgetRulesResponse
   */
  responses?: Array<AssociatedBudgetRuleResponse>;
}
/**
 *
 * @export
 * @interface CreateBudgetRulesResponse
 */
export interface CreateBudgetRulesResponse {
  /**
   *
   * @type {Array<BudgetRuleResponse>}
   * @memberof CreateBudgetRulesResponse
   */
  responses?: Array<BudgetRuleResponse>;
}
/**
 *
 * @export
 * @interface CreateRMSBudgetRulesRequest
 */
export interface CreateRMSBudgetRulesRequest {
  /**
   * A list of budget rule details.
   * @type {Array<RMSBudgetRuleDetails>}
   * @memberof CreateRMSBudgetRulesRequest
   */
  budgetRulesDetails?: Array<RMSBudgetRuleDetails>;
}
/**
 *
 * @export
 * @interface CreateSBBudgetRulesRequest
 */
export interface CreateSBBudgetRulesRequest {
  /**
   * A list of budget rule details.
   * @type {Array<SBBudgetRuleDetails>}
   * @memberof CreateSBBudgetRulesRequest
   */
  budgetRulesDetails?: Array<SBBudgetRuleDetails>;
}
/**
 *
 * @export
 * @interface CreateSDBudgetRulesRequest
 */
export interface CreateSDBudgetRulesRequest {
  /**
   * A list of budget rule details.
   * @type {Array<SDBudgetRuleDetails>}
   * @memberof CreateSDBudgetRulesRequest
   */
  budgetRulesDetails?: Array<SDBudgetRuleDetails>;
}
/**
 *
 * @export
 * @interface CreateSPBudgetRulesRequest
 */
export interface CreateSPBudgetRulesRequest {
  /**
   * A list of budget rule details.
   * @type {Array<SPBudgetRuleDetails>}
   * @memberof CreateSPBudgetRulesRequest
   */
  budgetRulesDetails?: Array<SPBudgetRuleDetails>;
}
/**
 *
 * @export
 * @interface CreateSPCampaignOptimizationRulesRequest
 */
export interface CreateSPCampaignOptimizationRulesRequest {
  /**
   *
   * @type {RecurrenceType}
   * @memberof CreateSPCampaignOptimizationRulesRequest
   */
  recurrence: RecurrenceType;
  /**
   *
   * @type {RuleAction}
   * @memberof CreateSPCampaignOptimizationRulesRequest
   */
  ruleAction: RuleAction;
  /**
   *
   * @type {Array<RuleCondition>}
   * @memberof CreateSPCampaignOptimizationRulesRequest
   */
  ruleCondition: Array<RuleCondition>;
  /**
   *
   * @type {RuleType}
   * @memberof CreateSPCampaignOptimizationRulesRequest
   */
  ruleType: RuleType;
  /**
   * The campaign optimization rule name.
   * @type {string}
   * @memberof CreateSPCampaignOptimizationRulesRequest
   */
  ruleName?: string;
  /**
   * A list of campaign ids
   * @type {Array<string>}
   * @memberof CreateSPCampaignOptimizationRulesRequest
   */
  campaignIds: Array<string>;
}

/**
 *
 * @export
 * @interface CreateSPCampaignOptimizationRulesResponse
 */
export interface CreateSPCampaignOptimizationRulesResponse {
  /**
   * The persistent rule identifier.
   * @type {string}
   * @memberof CreateSPCampaignOptimizationRulesResponse
   */
  campaignOptimizationId?: string;
  /**
   * An enumerated success or error code for machine use.
   * @type {string}
   * @memberof CreateSPCampaignOptimizationRulesResponse
   */
  code?: string;
  /**
   * A human-readable description of the error, if unsuccessful
   * @type {string}
   * @memberof CreateSPCampaignOptimizationRulesResponse
   */
  details?: string;
}
/**
 * Object representing date range type rule duration.
 * @export
 * @interface DateRangeTypeRuleDuration
 */
export interface DateRangeTypeRuleDuration {
  /**
   * The end date of the budget rule in YYYYMMDD format. The end date is inclusive. Required to be equal or greater than `startDate`.
   * @type {string}
   * @memberof DateRangeTypeRuleDuration
   */
  endDate?: string;
  /**
   * The start date of the budget rule in YYYYMMDD format. The start date is inclusive. Required to be greater than or equal to current date.
   * @type {string}
   * @memberof DateRangeTypeRuleDuration
   */
  startDate: string;
}
/**
 * The day of the week.
 * @export
 * @enum {string}
 */

export const DayOfWeek = {
  Monday: 'MONDAY',
  Tuesday: 'TUESDAY',
  Wednesday: 'WEDNESDAY',
  Thursday: 'THURSDAY',
  Friday: 'FRIDAY',
  Saturday: 'SATURDAY',
  Sunday: 'SUNDAY',
} as const;

export type DayOfWeek = (typeof DayOfWeek)[keyof typeof DayOfWeek];

/**
 *
 * @export
 * @interface DeleteSPCampaignOptimizationRuleResponse
 */
export interface DeleteSPCampaignOptimizationRuleResponse {
  /**
   * The persistent rule identifier.
   * @type {string}
   * @memberof DeleteSPCampaignOptimizationRuleResponse
   */
  campaignOptimizationId?: string;
  /**
   * An enumerated success or error code for machine use.
   * @type {string}
   * @memberof DeleteSPCampaignOptimizationRuleResponse
   */
  code?: string;
  /**
   * A human-readable description of the error, if unsuccessful
   * @type {string}
   * @memberof DeleteSPCampaignOptimizationRuleResponse
   */
  details?: string;
}
/**
 *
 * @export
 * @interface DuplicateValueError
 */
export interface DuplicateValueError {
  /**
   *
   * @type {SponsoredProductsDuplicateValueError}
   * @memberof DuplicateValueError
   */
  duplicateValueError: SponsoredProductsDuplicateValueError;
}
/**
 *
 * @export
 * @interface EntityNotFoundError
 */
export interface EntityNotFoundError {
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof EntityNotFoundError
   */
  entityNotFoundError: SponsoredProductsEntityNotFoundError;
}
/**
 *
 * @export
 * @interface EntityQuotaError
 */
export interface EntityQuotaError {
  /**
   *
   * @type {SponsoredProductsEntityQuotaError}
   * @memberof EntityQuotaError
   */
  entityQuotaError: SponsoredProductsEntityQuotaError;
}
/**
 *
 * @export
 * @interface EntityStateError
 */
export interface EntityStateError {
  /**
   *
   * @type {SponsoredProductsEntityStateError}
   * @memberof EntityStateError
   */
  entityStateError: SponsoredProductsEntityStateError;
}
/**
 * Object representing event type rule duration.
 * @export
 * @interface EventTypeRuleDuration
 */
export interface EventTypeRuleDuration {
  /**
   * The event identifier. This value is available from the budget rules recommendation API.
   * @type {string}
   * @memberof EventTypeRuleDuration
   */
  eventId: string;
  /**
   * The event end date in YYYYMMDD format. Read-only.
   * @type {string}
   * @memberof EventTypeRuleDuration
   */
  endDate?: string;
  /**
   * The event name. Read-only.
   * @type {string}
   * @memberof EventTypeRuleDuration
   */
  eventName?: string;
  /**
   * The event start date in YYYYMMDD format. Read-only. Note that this field is present only for announced events.
   * @type {string}
   * @memberof EventTypeRuleDuration
   */
  startDate?: string;
}
/**
 *
 * @export
 * @interface ExpressionTypeError
 */
export interface ExpressionTypeError {
  /**
   *
   * @type {SponsoredProductsExpressionTypeError}
   * @memberof ExpressionTypeError
   */
  expressionTypeError: SponsoredProductsExpressionTypeError;
}
/**
 *
 * @export
 * @interface Genre
 */
export interface Genre {
  /**
   * Name of Genre. This field is OPTIONAL if the Genre object is being used as an input.
   * @type {string}
   * @memberof Genre
   */
  name?: string;
  /**
   * Id of Genre. This field is REQUIRED if the Genre object is being used as an input. Use the GetRefinementsForCategory to retrieve Genre Node IDs.
   * @type {string}
   * @memberof Genre
   */
  id?: string;
}
/**
 *
 * @export
 * @interface GenreLoP
 */
export interface GenreLoP {
  /**
   * Name of Genre.
   * @type {string}
   * @memberof GenreLoP
   */
  name?: string;
  /**
   * Id of Genre. Use the POST /sp/targets/category/{categoryId}/refinements endpoint to retrieve Genre Node IDs.
   * @type {string}
   * @memberof GenreLoP
   */
  id?: string;
  /**
   * Translated name of the Genre based off locale send in the query parameter.
   * @type {string}
   * @memberof GenreLoP
   */
  translatedName?: string;
}
/**
 *
 * @export
 * @interface GetCampaignRecommendationsResponse
 */
export interface GetCampaignRecommendationsResponse {
  /**
   * An identifier to fetch next set of campaign recommendations records in the result set if available. This will be null when at the end of result set.
   * @type {string}
   * @memberof GetCampaignRecommendationsResponse
   */
  nextToken?: string;
  /**
   * List of campaign recommendations.
   * @type {Array<CampaignRecommendation>}
   * @memberof GetCampaignRecommendationsResponse
   */
  recommendations: Array<CampaignRecommendation>;
}
/**
 * Request object to retrieve Category Recommendations based on the input ASINs.
 * @export
 * @interface GetCategoryRecommendationsForAsinsRequest
 */
export interface GetCategoryRecommendationsForAsinsRequest {
  /**
   * List of input ASINs. This API does not check if the ASINs are valid ASINs.
   * @type {Array<string>}
   * @memberof GetCategoryRecommendationsForAsinsRequest
   */
  asins?: Array<string>;
  /**
   * Enable this if you would like to retrieve categories which are ancestor nodes of the original recommended categories. This may increase the number of categories returned, but decrease the relevancy of those categories.
   * @type {boolean}
   * @memberof GetCategoryRecommendationsForAsinsRequest
   */
  includeAncestor?: boolean;
}
/**
 * Request structure to get ASIN recommendations for a set of input ASINs in a given marketplace
 * @export
 * @interface GetGlobalProductRecommendationsRequest
 */
export interface GetGlobalProductRecommendationsRequest {
  /**
   * An optional token value that can be used to fetch previous set of records.
   * @type {string}
   * @memberof GetGlobalProductRecommendationsRequest
   */
  previousToken?: string;
  /**
   * The <b>maxResults</b> parameter in the request body determines the number of objects requested in the response. The count will be applied to the objects returned under the array belonging to each country under the `countryAdRecommendations` field in the response body. <ul> <li>When requesting the `application/vnd.spproductrecommendationresponse.asins.v3+json` media type, the count applies to the `GlobalProductRecommendation` objects in the response body. If no count value is provided, a default of `100` is assumed. The API will return a maximum of `1000` recommendations, regardless of how large the count is set.</li> </ul> Please refer to the response schemas for more information on the structure and fields of the response.
   * @type {number}
   * @memberof GetGlobalProductRecommendationsRequest
   */
  maxResults?: number;
  /**
   * An optional token value that can be used to fetch next set of records.
   * @type {string}
   * @memberof GetGlobalProductRecommendationsRequest
   */
  nextToken?: string;
  /**
   * Theme names and descriptions will be provided in the language for your supported locale. Available options are en_US (U.S. English), en_GB (UK English), zh_CN (Chinese), es_ES (Spanish), jp_JP (Japanese), de_DE (German), fr_FR (French), it_IT(Italian). If locale is not provided or unsupported, the theme names and descriptions will be returned in U.S. English (en_US).
   * @type {string}
   * @memberof GetGlobalProductRecommendationsRequest
   */
  locale?: string;
  /**
   * A map containing the country code as the key and a list of advertised ASINs for that country as the value. Currently, only one country entry is supported in the request.
   * @type {{ [key: string]: Array<string>; }}
   * @memberof GetGlobalProductRecommendationsRequest
   */
  countryAdAsins: { [key: string]: Array<string> };
}
/**
 * @type GetGlobalRankedKeywordRecommendationRequest
 * @export
 */
export type GetGlobalRankedKeywordRecommendationRequest =
  | ({ recommendationType: 'KEYWORDS_FOR_ADGROUP' } & GlobalRankedKeywordTargetsForAdGroupRequest)
  | ({ recommendationType: 'KEYWORDS_FOR_ASINS' } & GlobalRankedKeywordTargetsForAsinsRequest);

/**
 * @type GetMultiCountryThemeBasedBidRecommendationForAdGroupV1Request
 * @export
 */
export type GetMultiCountryThemeBasedBidRecommendationForAdGroupV1Request =
  | ({ recommendationType: 'BIDS_FOR_EXISTING_AD_GROUP' } & MultiCountryAdGroupThemeBasedBidRecommendationRequest)
  | ({ recommendationType: 'BIDS_FOR_NEW_AD_GROUP' } & MultiCountryAsinsThemeBasedBidRecommendationRequest);

/**
 * Request structure to get ASIN recommendations for a set of input ASINs.
 * @export
 * @interface GetProductRecommendationsRequest
 */
export interface GetProductRecommendationsRequest {
  /**
   * A optional cursor value that can be used to fetch next or previous set of records.
   * @type {string}
   * @memberof GetProductRecommendationsRequest
   */
  cursor?: string;
  /**
   * List of input ASINs.
   * @type {Array<string>}
   * @memberof GetProductRecommendationsRequest
   */
  adAsins: Array<string>;
  /**
   * Count of objects requested in the response. The count will be applied on the objects returned under `recommendations` array in response body.  <ul> <li>Requesting `application/vnd.spproductrecommendationresponse.themes.v3+json` mediatype applies the count on `ThemeRecommendation` objects.If no count value is passed a default of `5` is assumed. The API will return a maximum of `10` themes irrespective of how large the count is set. </li> <li>Requesting `application/vnd.spproductrecommendationresponse.asins.v3+json` mediatype applies count on the `ProductRecommendation` objects in response body.If no count value is passed a default of `100` is assumed. The API will return a maximum of `1000` recommendations irrespective of how large the count is set. </li> </ul> Please refer the response Schemas for more info.
   * @type {number}
   * @memberof GetProductRecommendationsRequest
   */
  count?: number;
  /**
   * Theme names and descriptions will be provided in the language for your supported locale. Available options are en_US (U.S. English), en_GB (UK English), zh_CN (Chinese), es_ES (Spanish), jp_JP (Japanese), de_DE (German), fr_FR (French), it_IT(Italian). If locale is not provided or unsupported, the theme names and descriptions will be returned in U.S. English (en_US).
   * @type {string}
   * @memberof GetProductRecommendationsRequest
   */
  locale?: string;
}
/**
 *
 * @export
 * @interface GetRMSBudgetRuleResponse
 */
export interface GetRMSBudgetRuleResponse {
  /**
   *
   * @type {RMSBudgetRule}
   * @memberof GetRMSBudgetRuleResponse
   */
  budgetRule?: RMSBudgetRule;
}
/**
 *
 * @export
 * @interface GetRMSBudgetRulesForAdvertiserResponse
 */
export interface GetRMSBudgetRulesForAdvertiserResponse {
  /**
   * A list of rules created by the advertiser.
   * @type {Array<RMSBudgetRule>}
   * @memberof GetRMSBudgetRulesForAdvertiserResponse
   */
  budgetRulesForAdvertiserResponse?: Array<RMSBudgetRule>;
  /**
   * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
   * @type {string}
   * @memberof GetRMSBudgetRulesForAdvertiserResponse
   */
  nextToken?: string;
}
/**
 * @type GetRankedKeywordRecommendationRequest
 * @export
 */
export type GetRankedKeywordRecommendationRequest =
  | ({ recommendationType: 'KEYWORDS_FOR_ADGROUP' } & AdGroupKeywordTargetRankRecommendationRequest)
  | ({ recommendationType: 'KEYWORDS_FOR_ASINS' } & AsinsKeywordTargetRankRecommendationRequest);

/**
 * @type GetRankedKeywordRecommendationRequest1
 * @export
 */
export type GetRankedKeywordRecommendationRequest1 =
  | ({ recommendationType: 'KEYWORDS_FOR_ADGROUP' } & RankedKeywordTargetsForAdGroupRequest)
  | ({ recommendationType: 'KEYWORDS_FOR_ASINS' } & RankedKeywordTargetsForAsinsRequest);

/**
 *
 * @export
 * @interface GetSBBudgetRuleResponse
 */
export interface GetSBBudgetRuleResponse {
  /**
   *
   * @type {SBBudgetRule}
   * @memberof GetSBBudgetRuleResponse
   */
  budgetRule?: SBBudgetRule;
}
/**
 *
 * @export
 * @interface GetSBBudgetRulesForAdvertiserResponse
 */
export interface GetSBBudgetRulesForAdvertiserResponse {
  /**
   * A list of rules created by the advertiser.
   * @type {Array<SBBudgetRule>}
   * @memberof GetSBBudgetRulesForAdvertiserResponse
   */
  budgetRulesForAdvertiserResponse?: Array<SBBudgetRule>;
  /**
   * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
   * @type {string}
   * @memberof GetSBBudgetRulesForAdvertiserResponse
   */
  nextToken?: string;
}
/**
 *
 * @export
 * @interface GetSDBudgetRuleResponse
 */
export interface GetSDBudgetRuleResponse {
  /**
   *
   * @type {SDBudgetRule}
   * @memberof GetSDBudgetRuleResponse
   */
  budgetRule?: SDBudgetRule;
}
/**
 *
 * @export
 * @interface GetSDBudgetRulesForAdvertiserResponse
 */
export interface GetSDBudgetRulesForAdvertiserResponse {
  /**
   * A list of rules created by the advertiser.
   * @type {Array<SDBudgetRule>}
   * @memberof GetSDBudgetRulesForAdvertiserResponse
   */
  budgetRulesForAdvertiserResponse?: Array<SDBudgetRule>;
  /**
   * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
   * @type {string}
   * @memberof GetSDBudgetRulesForAdvertiserResponse
   */
  nextToken?: string;
}
/**
 *
 * @export
 * @interface GetSPBudgetRuleResponse
 */
export interface GetSPBudgetRuleResponse {
  /**
   *
   * @type {SPBudgetRule}
   * @memberof GetSPBudgetRuleResponse
   */
  budgetRule?: SPBudgetRule;
}
/**
 *
 * @export
 * @interface GetSPBudgetRulesForAdvertiserResponse
 */
export interface GetSPBudgetRulesForAdvertiserResponse {
  /**
   * A list of rules created by the advertiser.
   * @type {Array<SPBudgetRule>}
   * @memberof GetSPBudgetRulesForAdvertiserResponse
   */
  budgetRulesForAdvertiserResponse?: Array<SPBudgetRule>;
  /**
   * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
   * @type {string}
   * @memberof GetSPBudgetRulesForAdvertiserResponse
   */
  nextToken?: string;
}
/**
 *
 * @export
 * @interface GetSPCampaignOptimizationRuleResponse
 */
export interface GetSPCampaignOptimizationRuleResponse {
  /**
   *
   * @type {CampaignOptimizationRule}
   * @memberof GetSPCampaignOptimizationRuleResponse
   */
  CampaignOptimizationRule?: CampaignOptimizationRule;
}
/**
 *
 * @export
 * @interface GetTargetableAsinCountsRequest
 */
export interface GetTargetableAsinCountsRequest {
  /**
   * List of Age Ranges. Use the GetRefinementsForCategory to retrieve Age Ranges. Age Ranges are only available for categories related to children\'s toys and games.
   * @type {Array<AgeRange>}
   * @memberof GetTargetableAsinCountsRequest
   */
  ageRanges?: Array<AgeRange>;
  /**
   * List of Brands.
   * @type {Array<Brand>}
   * @memberof GetTargetableAsinCountsRequest
   */
  brands?: Array<Brand>;
  /**
   * List of Genres. Use the GetRefinementsForCategory to retrieve Genre Node IDs. Genres are only available for categories related to books.
   * @type {Array<Genre>}
   * @memberof GetTargetableAsinCountsRequest
   */
  genres?: Array<Genre>;
  /**
   * Indicates if products have prime shipping
   * @type {boolean}
   * @memberof GetTargetableAsinCountsRequest
   */
  isPrimeShipping?: boolean;
  /**
   *
   * @type {RatingRange}
   * @memberof GetTargetableAsinCountsRequest
   */
  ratingRange?: RatingRange;
  /**
   * The category node id. Please use the GetTargetableCategories API or GetCategoryRecommendationsForASINs API to retrieve category IDs.
   * @type {string}
   * @memberof GetTargetableAsinCountsRequest
   */
  category: string;
  /**
   *
   * @type {PriceRange}
   * @memberof GetTargetableAsinCountsRequest
   */
  priceRange?: PriceRange;
}
/**
 * @type GetThemeBasedBidRecommendationForAdGroupV1Request
 * @export
 */
export type GetThemeBasedBidRecommendationForAdGroupV1Request =
  | ({ recommendationType: 'BIDS_FOR_EXISTING_AD_GROUP' } & AdGroupThemeBasedBidRecommendationRequestV4)
  | ({ recommendationType: 'BIDS_FOR_NEW_AD_GROUP' } & AsinsThemeBasedBidRecommendationRequestV4);

/**
 * @type GetThemeBasedBidRecommendationForAdGroupV1Request1
 * @export
 */
export type GetThemeBasedBidRecommendationForAdGroupV1Request1 =
  | ({ recommendationType: 'BIDS_FOR_EXISTING_AD_GROUP' } & AdGroupThemeBasedBidRecommendationRequest)
  | ({ recommendationType: 'BIDS_FOR_NEW_AD_GROUP' } & AsinsThemeBasedBidRecommendationRequest);

/**
 * @type GetThemeBasedBidRecommendationForAdGroupV1Request2
 * @export
 */
export type GetThemeBasedBidRecommendationForAdGroupV1Request2 =
  | ({ recommendationType: 'BIDS_FOR_EXISTING_AD_GROUP' } & AdGroupThemeBasedBidRecommendationRequestV5)
  | ({ recommendationType: 'BIDS_FOR_NEW_AD_GROUP' } & AsinsThemeBasedBidRecommendationRequestV5);

/**
 *
 * @export
 * @interface GlobalAdGroup
 */
export interface GlobalAdGroup {
  /**
   * The list of targeting expressions. Maximum of 100 per request.
   * @type {Array<GlobalTargetingExpression>}
   * @memberof GlobalAdGroup
   */
  targetingExpressions: Array<GlobalTargetingExpression>;
  /**
   * The list of ad ASINs in ad group.
   * @type {Array<{ [key: string]: string; }>}
   * @memberof GlobalAdGroup
   */
  asins: Array<{ [key: string]: string }>;
  /**
   * The ad group identifier.
   * @type {string}
   * @memberof GlobalAdGroup
   */
  adGroupId?: string;
}
/**
 * List of Brands for the countries provided in the request.
 * @export
 * @interface GlobalBrands
 */
export interface GlobalBrands {
  /**
   * Map containing Brands for countries passed in the request.
   * @type {{ [key: string]: Array<Brand>; }}
   * @memberof GlobalBrands
   */
  countryBrands?: { [key: string]: Array<Brand> };
  /**
   * List of errors encountered while processing the response.
   * @type {Array<GlobalProductAttributeTargetingErrorModel>}
   * @memberof GlobalBrands
   */
  errors?: Array<GlobalProductAttributeTargetingErrorModel>;
}
/**
 *
 * @export
 * @interface GlobalBudgetRecommendationError
 */
export interface GlobalBudgetRecommendationError {
  /**
   *
   * @type {Set<string>}
   * @memberof GlobalBudgetRecommendationError
   */
  countryCodes?: Set<string>;
  /**
   *
   * @type {string}
   * @memberof GlobalBudgetRecommendationError
   */
  code: string;
  /**
   *
   * @type {string}
   * @memberof GlobalBudgetRecommendationError
   */
  message?: string;
}
/**
 *
 * @export
 * @interface GlobalBudgetRecommendationException
 */
export interface GlobalBudgetRecommendationException {
  /**
   *
   * @type {Array<GlobalBudgetRecommendationError>}
   * @memberof GlobalBudgetRecommendationException
   */
  errors?: Array<GlobalBudgetRecommendationError>;
}
/**
 *
 * @export
 * @interface GlobalBudgetRecommendationNewCampaignsError
 */
export interface GlobalBudgetRecommendationNewCampaignsError {
  /**
   *
   * @type {Set<string>}
   * @memberof GlobalBudgetRecommendationNewCampaignsError
   */
  countryCodes?: Set<string>;
  /**
   *
   * @type {string}
   * @memberof GlobalBudgetRecommendationNewCampaignsError
   */
  code: string;
  /**
   *
   * @type {string}
   * @memberof GlobalBudgetRecommendationNewCampaignsError
   */
  message?: string;
}
/**
 *
 * @export
 * @interface GlobalBudgetRecommendationNewCampaignsException
 */
export interface GlobalBudgetRecommendationNewCampaignsException {
  /**
   *
   * @type {Array<GlobalBudgetRecommendationNewCampaignsError>}
   * @memberof GlobalBudgetRecommendationNewCampaignsException
   */
  errors?: Array<GlobalBudgetRecommendationNewCampaignsError>;
}
/**
 *
 * @export
 * @interface GlobalBudgetRecommendationRequest
 */
export interface GlobalBudgetRecommendationRequest {
  /**
   * List of campaign Ids
   * @type {Array<string>}
   * @memberof GlobalBudgetRecommendationRequest
   */
  campaignIds: Array<string>;
}
/**
 *
 * @export
 * @interface GlobalBudgetRecommendationResponse
 */
export interface GlobalBudgetRecommendationResponse {
  /**
   * List of global budget recommendation results for campaigns.
   * @type {Array<GlobalBudgetRecommendationResult>}
   * @memberof GlobalBudgetRecommendationResponse
   */
  budgetRecommendationsResults: Array<GlobalBudgetRecommendationResult>;
}
/**
 *
 * @export
 * @interface GlobalBudgetRecommendationResult
 */
export interface GlobalBudgetRecommendationResult {
  /**
   *
   * @type {ResultStatus}
   * @memberof GlobalBudgetRecommendationResult
   */
  resultStatus: ResultStatus;
  /**
   * The budget recommendation for each country.
   * @type {{ [key: string]: CountryBudgetRecommendation; }}
   * @memberof GlobalBudgetRecommendationResult
   */
  countryBudgetRecommendations: { [key: string]: CountryBudgetRecommendation };
  /**
   * The campaign Id.
   * @type {string}
   * @memberof GlobalBudgetRecommendationResult
   */
  campaignId: string;
  /**
   * Correlate the recommendations to the campaign index in the request. Zero-based.
   * @type {number}
   * @memberof GlobalBudgetRecommendationResult
   */
  index: number;
  /**
   *
   * @type {Array<GlobalBudgetRecommendationError>}
   * @memberof GlobalBudgetRecommendationResult
   */
  errors?: Array<GlobalBudgetRecommendationError>;
}

/**
 *
 * @export
 * @interface GlobalBudgetRulesRecommendationError
 */
export interface GlobalBudgetRulesRecommendationError {
  /**
   *
   * @type {Array<string>}
   * @memberof GlobalBudgetRulesRecommendationError
   */
  countryCodes?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof GlobalBudgetRulesRecommendationError
   */
  code: string;
  /**
   *
   * @type {string}
   * @memberof GlobalBudgetRulesRecommendationError
   */
  message?: string;
}
/**
 *
 * @export
 * @interface GlobalBudgetRulesRecommendationEventException
 */
export interface GlobalBudgetRulesRecommendationEventException {
  /**
   *
   * @type {Array<GlobalBudgetRulesRecommendationError>}
   * @memberof GlobalBudgetRulesRecommendationEventException
   */
  errors?: Array<GlobalBudgetRulesRecommendationError>;
}
/**
 *
 * @export
 * @interface GlobalBudgetRulesRecommendationEventRequest
 */
export interface GlobalBudgetRulesRecommendationEventRequest {
  /**
   * The campaign identifier.
   * @type {string}
   * @memberof GlobalBudgetRulesRecommendationEventRequest
   */
  campaignId: string;
}
/**
 * Globalised Special events with date range and suggested budget increase for existing campaigns.
 * @export
 * @interface GlobalBudgetRulesRecommendationEventResponse
 */
export interface GlobalBudgetRulesRecommendationEventResponse {
  /**
   * A list of recommended special events with date range and suggested budget increase for each country targeted by the campaign.
   * @type {{ [key: string]: Array<SPBudgetRulesRecommendationEvent>; }}
   * @memberof GlobalBudgetRulesRecommendationEventResponse
   */
  countryBudgetRuleEventsRecommendations: { [key: string]: Array<SPBudgetRulesRecommendationEvent> };
  /**
   *
   * @type {Array<GlobalBudgetRulesRecommendationError>}
   * @memberof GlobalBudgetRulesRecommendationEventResponse
   */
  errors?: Array<GlobalBudgetRulesRecommendationError>;
}
/**
 *
 * @export
 * @interface GlobalExpression
 */
export interface GlobalExpression {
  /**
   * The targeting expression value for each country.
   * @type {{ [key: string]: string; }}
   * @memberof GlobalExpression
   */
  countryValues?: { [key: string]: string };
  /**
   * The targeting expression. The type property specifies the targeting option. Use CLOSE_MATCH to match your auto targeting ads closely to the specified value. Use LOOSE_MATCH to match your auto targeting ads broadly to the specified value. Use SUBSTITUTES to display your auto targeting ads along with substitutable products. Use COMPLEMENTS to display your auto targeting ads along with affiliated products. Use KEYWORD_BROAD_MATCH to broadly match your keyword targeting ads with search queries. Use KEYWORD_EXACT_MATCH to exactly match your keyword targeting ads with search queries. Use KEYWORD_PHRASE_MATCH to match your keyword targeting ads with search phrases. Use PAT_ASIN to target an ASIN that is the same as the ASIN expressed. Use PAT_CATEGORY to target the same category as the category expressed. Use PAT_CATEGORY_REFINEMENT to target all of the category refinements. These refinements allows users to specify a brand, price, rating, age range, genre and prime shipping eligibility.
   * @type {string}
   * @memberof GlobalExpression
   */
  type: GlobalExpressionTypeEnum;
}

export const GlobalExpressionTypeEnum = {
  CloseMatch: 'CLOSE_MATCH',
  LooseMatch: 'LOOSE_MATCH',
  Substitutes: 'SUBSTITUTES',
  Complements: 'COMPLEMENTS',
  KeywordBroadMatch: 'KEYWORD_BROAD_MATCH',
  KeywordExactMatch: 'KEYWORD_EXACT_MATCH',
  KeywordPhraseMatch: 'KEYWORD_PHRASE_MATCH',
  PatAsin: 'PAT_ASIN',
  PatCategory: 'PAT_CATEGORY',
  PatCategoryRefinement: 'PAT_CATEGORY_REFINEMENT',
} as const;

export type GlobalExpressionTypeEnum = (typeof GlobalExpressionTypeEnum)[keyof typeof GlobalExpressionTypeEnum];

/**
 *
 * @export
 * @interface GlobalProductAttributeTargetingBadRequestException
 */
export interface GlobalProductAttributeTargetingBadRequestException {
  /**
   *
   * @type {Array<GlobalProductAttributeTargetingErrorModel>}
   * @memberof GlobalProductAttributeTargetingBadRequestException
   */
  errors?: Array<GlobalProductAttributeTargetingErrorModel>;
}
/**
 *
 * @export
 * @interface GlobalProductAttributeTargetingErrorModel
 */
export interface GlobalProductAttributeTargetingErrorModel {
  /**
   *
   * @type {Set<string>}
   * @memberof GlobalProductAttributeTargetingErrorModel
   */
  countryCodes?: Set<string>;
  /**
   *
   * @type {string}
   * @memberof GlobalProductAttributeTargetingErrorModel
   */
  code: string;
  /**
   *
   * @type {string}
   * @memberof GlobalProductAttributeTargetingErrorModel
   */
  message?: string;
}
/**
 *
 * @export
 * @interface GlobalProductAttributeTargetingInternalServerException
 */
export interface GlobalProductAttributeTargetingInternalServerException {
  /**
   *
   * @type {Array<GlobalProductAttributeTargetingErrorModel>}
   * @memberof GlobalProductAttributeTargetingInternalServerException
   */
  errors?: Array<GlobalProductAttributeTargetingErrorModel>;
}
/**
 *
 * @export
 * @interface GlobalProductAttributeTargetingTooManyRequestsException
 */
export interface GlobalProductAttributeTargetingTooManyRequestsException {
  /**
   *
   * @type {Array<GlobalProductAttributeTargetingErrorModel>}
   * @memberof GlobalProductAttributeTargetingTooManyRequestsException
   */
  errors?: Array<GlobalProductAttributeTargetingErrorModel>;
}
/**
 *
 * @export
 * @interface GlobalProductAttributeTargetingUnauthorizedException
 */
export interface GlobalProductAttributeTargetingUnauthorizedException {
  /**
   *
   * @type {Array<GlobalProductAttributeTargetingErrorModel>}
   * @memberof GlobalProductAttributeTargetingUnauthorizedException
   */
  errors?: Array<GlobalProductAttributeTargetingErrorModel>;
}
/**
 * Recommended asin and related information.
 * @export
 * @interface GlobalProductRecommendation
 */
export interface GlobalProductRecommendation {
  /**
   * List of themes associated with this recommended ASIN.
   * @type {Array<string>}
   * @memberof GlobalProductRecommendation
   */
  themes?: Array<string>;
  /**
   * Recommended ASIN
   * @type {string}
   * @memberof GlobalProductRecommendation
   */
  recommendedAsin?: string;
}
/**
 * Global Product recommendations supplemented with relevant information.
 * @export
 * @interface GlobalProductRecommendationsByASIN
 */
export interface GlobalProductRecommendationsByASIN {
  /**
   * A map containing recommended ASINs and their associated themes, grouped by country.
   * @type {{ [key: string]: Array<GlobalProductRecommendation>; }}
   * @memberof GlobalProductRecommendationsByASIN
   */
  countryAdRecommendations?: { [key: string]: Array<GlobalProductRecommendation> };
  /**
   * Optional parameter that links to the previous result set served. This parameter will be null on the first request.
   * @type {string}
   * @memberof GlobalProductRecommendationsByASIN
   */
  previousToken?: string;
  /**
   * An identifier to fetch next set of `GlobalProductRecommendation` records in the result set if available. This will be null when at the end of result set.
   * @type {string}
   * @memberof GlobalProductRecommendationsByASIN
   */
  nextToken?: string;
}
/**
 * This request type is used to retrieve recommended keyword targets for an existing ad group. Set the recommendationType to KEYWORDS_FOR_ADGROUP to use this request type.
 * @export
 * @interface GlobalRankedKeywordTargetsForAdGroupRequest
 */
export interface GlobalRankedKeywordTargetsForAdGroupRequest {
  /**
   * A list of targets that need to be ranked
   * @type {Array<CountryTarget>}
   * @memberof GlobalRankedKeywordTargetsForAdGroupRequest
   */
  targets?: Array<CountryTarget>;
  /**
   * The identifier of the campaign
   * @type {string}
   * @memberof GlobalRankedKeywordTargetsForAdGroupRequest
   */
  campaignId: string;
  /**
   * The recommendationType to retrieve recommended keyword targets for an existing ad group.
   * @type {string}
   * @memberof GlobalRankedKeywordTargetsForAdGroupRequest
   */
  recommendationType: GlobalRankedKeywordTargetsForAdGroupRequestRecommendationTypeEnum;
  /**
   * Set this parameter to false if you do not want to retrieve bid suggestions for your keyword targets. Defaults to true.
   * @type {boolean}
   * @memberof GlobalRankedKeywordTargetsForAdGroupRequest
   */
  bidsEnabled?: boolean;
  /**
   * The identifier of the ad group
   * @type {string}
   * @memberof GlobalRankedKeywordTargetsForAdGroupRequest
   */
  adGroupId: string;
  /**
   * The max size of recommended target. Set it to 0 if you only want to rank user-defined keywords.
   * @type {number}
   * @memberof GlobalRankedKeywordTargetsForAdGroupRequest
   */
  maxRecommendations?: number;
  /**
   * The ranking metric value. Supported values: CLICKS, CONVERSIONS, DEFAULT. DEFAULT will be applied if no value passed in.
   * @type {string}
   * @memberof GlobalRankedKeywordTargetsForAdGroupRequest
   */
  sortDimension?: GlobalRankedKeywordTargetsForAdGroupRequestSortDimensionEnum;
  /**
   * Translations are for readability and do not affect the targeting of ads. Supported marketplace to locale mappings can be found at the <a href=\'https://advertising.amazon.com/API/docs/en-us/localization/#/Keyword%20Localization\'>POST /keywords/localize</a> endpoint. Note: Translations will be null if locale is unsupported.
   * @type {string}
   * @memberof GlobalRankedKeywordTargetsForAdGroupRequest
   */
  locale?: GlobalRankedKeywordTargetsForAdGroupRequestLocaleEnum;
}

export const GlobalRankedKeywordTargetsForAdGroupRequestRecommendationTypeEnum = {
  KeywordsForAdgroup: 'KEYWORDS_FOR_ADGROUP',
} as const;

export type GlobalRankedKeywordTargetsForAdGroupRequestRecommendationTypeEnum =
  (typeof GlobalRankedKeywordTargetsForAdGroupRequestRecommendationTypeEnum)[keyof typeof GlobalRankedKeywordTargetsForAdGroupRequestRecommendationTypeEnum];
export const GlobalRankedKeywordTargetsForAdGroupRequestSortDimensionEnum = {
  Clicks: 'CLICKS',
  Conversions: 'CONVERSIONS',
  Default: 'DEFAULT',
} as const;

export type GlobalRankedKeywordTargetsForAdGroupRequestSortDimensionEnum =
  (typeof GlobalRankedKeywordTargetsForAdGroupRequestSortDimensionEnum)[keyof typeof GlobalRankedKeywordTargetsForAdGroupRequestSortDimensionEnum];
export const GlobalRankedKeywordTargetsForAdGroupRequestLocaleEnum = {
  ArEg: 'ar_EG',
  DeDe: 'de_DE',
  EnAe: 'en_AE',
  EnAu: 'en_AU',
  EnCa: 'en_CA',
  EnGb: 'en_GB',
  EnIn: 'en_IN',
  EnSa: 'en_SA',
  EnSg: 'en_SG',
  EnUs: 'en_US',
  EsEs: 'es_ES',
  EsMx: 'es_MX',
  FrFr: 'fr_FR',
  ItIt: 'it_IT',
  JaJp: 'ja_JP',
  NlNl: 'nl_NL',
  PlPl: 'pl_PL',
  PtBr: 'pt_BR',
  SvSe: 'sv_SE',
  TrTr: 'tr_TR',
  ZhCn: 'zh_CN',
} as const;

export type GlobalRankedKeywordTargetsForAdGroupRequestLocaleEnum =
  (typeof GlobalRankedKeywordTargetsForAdGroupRequestLocaleEnum)[keyof typeof GlobalRankedKeywordTargetsForAdGroupRequestLocaleEnum];

/**
 * This request type is used to retrieve recommended keyword targets for ASINs. Set the recommendationType to KEYWORDS_FOR_ASINS to use this request type.
 * @export
 * @interface GlobalRankedKeywordTargetsForAsinsRequest
 */
export interface GlobalRankedKeywordTargetsForAsinsRequest {
  /**
   * An array list of countryAsins. CountryAsin is a map representing same product in a different marketplaces. Key is a 2-letter country code, value is a product asin.
   * @type {Array<{ [key: string]: string; }>}
   * @memberof GlobalRankedKeywordTargetsForAsinsRequest
   */
  asins?: Array<{ [key: string]: string }>;
  /**
   * An array list of countryTargets. CountryTarget is an object with CountryKeywords map representing same keyword in a different locales. Key is a 2-letter country code, value is a keyword object.
   * @type {Array<CountryTarget>}
   * @memberof GlobalRankedKeywordTargetsForAsinsRequest
   */
  targets?: Array<CountryTarget>;
  /**
   * This field is upcoming and not ready for use. It represents an array list of countryProducts. CountryProducts is a map representing same product in a different marketplaces. Key is a 2-letter country code, value is a product.
   * @type {Array<{ [key: string]: ProductDetails; }>}
   * @memberof GlobalRankedKeywordTargetsForAsinsRequest
   */
  products?: Array<{ [key: string]: ProductDetails }>;
  /**
   * The bid recommendations returned will depend on the bidding strategy. <br> LEGACY_FOR_SALES - Dynamic Bids (Down only) <br> AUTO_FOR_SALES - Dynamic Bids (Up or down) <br> MANUAL - Fixed Bids
   * @type {string}
   * @memberof GlobalRankedKeywordTargetsForAsinsRequest
   */
  biddingStrategy?: GlobalRankedKeywordTargetsForAsinsRequestBiddingStrategyEnum;
  /**
   * The recommendationType to retrieve recommended keyword targets for a list of ASINs.
   * @type {string}
   * @memberof GlobalRankedKeywordTargetsForAsinsRequest
   */
  recommendationType: GlobalRankedKeywordTargetsForAsinsRequestRecommendationTypeEnum;
  /**
   * Set this parameter to false if you do not want to retrieve bid suggestions for your keyword targets. Defaults to true.
   * @type {boolean}
   * @memberof GlobalRankedKeywordTargetsForAsinsRequest
   */
  bidsEnabled?: boolean;
  /**
   * The max size of recommended target. Set it to 0 if you only want to rank user-defined keywords.
   * @type {number}
   * @memberof GlobalRankedKeywordTargetsForAsinsRequest
   */
  maxRecommendations?: number;
  /**
   * The ranking metric value. Supported values: CLICKS, CONVERSIONS, DEFAULT. DEFAULT will be applied if no value passed in.
   * @type {string}
   * @memberof GlobalRankedKeywordTargetsForAsinsRequest
   */
  sortDimension?: GlobalRankedKeywordTargetsForAsinsRequestSortDimensionEnum;
  /**
   * Translations are for readability and do not affect the targeting of ads. Supported marketplace to locale mappings can be found at the <a href=\'https://advertising.amazon.com/API/docs/en-us/localization/#/Keyword%20Localization\'>POST /keywords/localize</a> endpoint. Note: Translations will be null if locale is unsupported.
   * @type {string}
   * @memberof GlobalRankedKeywordTargetsForAsinsRequest
   */
  locale?: GlobalRankedKeywordTargetsForAsinsRequestLocaleEnum;
}

export const GlobalRankedKeywordTargetsForAsinsRequestBiddingStrategyEnum = {
  LegacyForSales: 'LEGACY_FOR_SALES',
  AutoForSales: 'AUTO_FOR_SALES',
  Manual: 'MANUAL',
  RuleBased: 'RULE_BASED',
} as const;

export type GlobalRankedKeywordTargetsForAsinsRequestBiddingStrategyEnum =
  (typeof GlobalRankedKeywordTargetsForAsinsRequestBiddingStrategyEnum)[keyof typeof GlobalRankedKeywordTargetsForAsinsRequestBiddingStrategyEnum];
export const GlobalRankedKeywordTargetsForAsinsRequestRecommendationTypeEnum = {
  KeywordsForAsins: 'KEYWORDS_FOR_ASINS',
} as const;

export type GlobalRankedKeywordTargetsForAsinsRequestRecommendationTypeEnum =
  (typeof GlobalRankedKeywordTargetsForAsinsRequestRecommendationTypeEnum)[keyof typeof GlobalRankedKeywordTargetsForAsinsRequestRecommendationTypeEnum];
export const GlobalRankedKeywordTargetsForAsinsRequestSortDimensionEnum = {
  Clicks: 'CLICKS',
  Conversions: 'CONVERSIONS',
  Default: 'DEFAULT',
} as const;

export type GlobalRankedKeywordTargetsForAsinsRequestSortDimensionEnum =
  (typeof GlobalRankedKeywordTargetsForAsinsRequestSortDimensionEnum)[keyof typeof GlobalRankedKeywordTargetsForAsinsRequestSortDimensionEnum];
export const GlobalRankedKeywordTargetsForAsinsRequestLocaleEnum = {
  ArEg: 'ar_EG',
  DeDe: 'de_DE',
  EnAe: 'en_AE',
  EnAu: 'en_AU',
  EnCa: 'en_CA',
  EnGb: 'en_GB',
  EnIn: 'en_IN',
  EnSa: 'en_SA',
  EnSg: 'en_SG',
  EnUs: 'en_US',
  EsEs: 'es_ES',
  EsMx: 'es_MX',
  FrFr: 'fr_FR',
  ItIt: 'it_IT',
  JaJp: 'ja_JP',
  NlNl: 'nl_NL',
  PlPl: 'pl_PL',
  PtBr: 'pt_BR',
  SvSe: 'sv_SE',
  TrTr: 'tr_TR',
  ZhCn: 'zh_CN',
} as const;

export type GlobalRankedKeywordTargetsForAsinsRequestLocaleEnum =
  (typeof GlobalRankedKeywordTargetsForAsinsRequestLocaleEnum)[keyof typeof GlobalRankedKeywordTargetsForAsinsRequestLocaleEnum];

/**
 *
 * @export
 * @interface GlobalRankedTargetWithThemedBidsResponse
 */
export interface GlobalRankedTargetWithThemedBidsResponse {
  /**
   *
   * @type {{ [key: string]: RankedTargetWithThemedBidsResponse; }}
   * @memberof GlobalRankedTargetWithThemedBidsResponse
   */
  countryCodes?: { [key: string]: RankedTargetWithThemedBidsResponse };
}
/**
 *
 * @export
 * @interface GlobalTargetingExpression
 */
export interface GlobalTargetingExpression {
  /**
   *
   * @type {GlobalExpression}
   * @memberof GlobalTargetingExpression
   */
  expression?: GlobalExpression;
  /**
   * The bid value for each country.
   * @type {{ [key: string]: number; }}
   * @memberof GlobalTargetingExpression
   */
  countryBids: { [key: string]: number };
}
/**
 * The impact metrics are given in the same order of suggested bids. <br> Note: This object is nullable
 * @export
 * @interface ImpactMetric
 */
export interface ImpactMetric {
  /**
   *
   * @type {Array<RangeMetricValue>}
   * @memberof ImpactMetric
   */
  values?: Array<RangeMetricValue>;
}
/**
 * For the CONVERSION_OPPORTUNITIES theme, the impact metrics are weekly clicks and orders received for similar products. For other event-based themes, the impact metrics are clicks and orders received for similar products during the event days. <br> Note: This object is nullable
 * @export
 * @interface ImpactMetrics
 */
export interface ImpactMetrics {
  /**
   *
   * @type {ImpactMetric}
   * @memberof ImpactMetrics
   */
  clicks?: ImpactMetric | null;
  /**
   *
   * @type {ImpactMetric}
   * @memberof ImpactMetrics
   */
  orders?: ImpactMetric | null;
}
/**
 * Impressions benchmark.
 * @export
 * @interface Impressions
 */
export interface Impressions {
  /**
   * lower bound.
   * @type {number}
   * @memberof Impressions
   */
  lower?: number;
  /**
   * upper bound.
   * @type {number}
   * @memberof Impressions
   */
  upper?: number;
}
/**
 *
 * @export
 * @interface InitialBudgetRecommendationRequest
 */
export interface InitialBudgetRecommendationRequest {
  /**
   *
   * @type {Bidding}
   * @memberof InitialBudgetRecommendationRequest
   */
  bidding: Bidding;
  /**
   * The ad group information for this new campaign.
   * @type {Array<AdGroup>}
   * @memberof InitialBudgetRecommendationRequest
   */
  adGroups: Array<AdGroup>;
  /**
   * The end date of the campaign in YYYYMMDD format.
   * @type {string}
   * @memberof InitialBudgetRecommendationRequest
   */
  endDate?: string;
  /**
   * Specifies the targeting type.
   * @type {string}
   * @memberof InitialBudgetRecommendationRequest
   */
  targetingType: InitialBudgetRecommendationRequestTargetingTypeEnum;
  /**
   * The start date of the campaign in YYYYMMDD format.
   * @type {string}
   * @memberof InitialBudgetRecommendationRequest
   */
  startDate?: string;
}

export const InitialBudgetRecommendationRequestTargetingTypeEnum = {
  Manual: 'manual',
  Auto: 'auto',
} as const;

export type InitialBudgetRecommendationRequestTargetingTypeEnum =
  (typeof InitialBudgetRecommendationRequestTargetingTypeEnum)[keyof typeof InitialBudgetRecommendationRequestTargetingTypeEnum];

/**
 *
 * @export
 * @interface InitialBudgetRecommendationResponse
 */
export interface InitialBudgetRecommendationResponse {
  /**
   * A list of special events around the start and end date of the campaign.
   * @type {Array<SpecialEvent>}
   * @memberof InitialBudgetRecommendationResponse
   */
  specialEvents: Array<SpecialEvent>;
  /**
   * Recommended daily budget for the new campaign. Note: value -1 means we don’t have enough information to provide a recommendation.
   * @type {number}
   * @memberof InitialBudgetRecommendationResponse
   */
  dailyBudget: number;
  /**
   * Unique identifier for each recommendation.
   * @type {string}
   * @memberof InitialBudgetRecommendationResponse
   */
  recommendationId?: string;
  /**
   *
   * @type {Benchmark}
   * @memberof InitialBudgetRecommendationResponse
   */
  benchmark: Benchmark;
}
/**
 *
 * @export
 * @interface InitialGlobalBudgetRecommendationRequest
 */
export interface InitialGlobalBudgetRecommendationRequest {
  /**
   * The budget value for each country of new campaign.
   * @type {{ [key: string]: number; }}
   * @memberof InitialGlobalBudgetRecommendationRequest
   */
  countryDailyBudgets?: { [key: string]: number };
  /**
   *
   * @type {Bidding}
   * @memberof InitialGlobalBudgetRecommendationRequest
   */
  bidding: Bidding;
  /**
   * The ad group information for this new campaign.
   * @type {Array<GlobalAdGroup>}
   * @memberof InitialGlobalBudgetRecommendationRequest
   */
  adGroups: Array<GlobalAdGroup>;
  /**
   * The end date of the campaign in YYYYMMDD format.
   * @type {string}
   * @memberof InitialGlobalBudgetRecommendationRequest
   */
  endDate?: string;
  /**
   * Specifies the targeting type.
   * @type {string}
   * @memberof InitialGlobalBudgetRecommendationRequest
   */
  targetingType: InitialGlobalBudgetRecommendationRequestTargetingTypeEnum;
  /**
   * The start date of the campaign in YYYYMMDD format.
   * @type {string}
   * @memberof InitialGlobalBudgetRecommendationRequest
   */
  startDate?: string;
}

export const InitialGlobalBudgetRecommendationRequestTargetingTypeEnum = {
  Manual: 'MANUAL',
  Auto: 'AUTO',
} as const;

export type InitialGlobalBudgetRecommendationRequestTargetingTypeEnum =
  (typeof InitialGlobalBudgetRecommendationRequestTargetingTypeEnum)[keyof typeof InitialGlobalBudgetRecommendationRequestTargetingTypeEnum];

/**
 *
 * @export
 * @interface InitialGlobalBudgetRecommendationResponse
 */
export interface InitialGlobalBudgetRecommendationResponse {
  /**
   * The budget recommendation for each country.
   * @type {{ [key: string]: CountryBudgetRecommendation; }}
   * @memberof InitialGlobalBudgetRecommendationResponse
   */
  countryBudgetRecommendations: { [key: string]: CountryBudgetRecommendation };
  /**
   * Unique identifier for each recommendation.
   * @type {string}
   * @memberof InitialGlobalBudgetRecommendationResponse
   */
  recommendationId?: string;
  /**
   *
   * @type {Array<GlobalBudgetRecommendationNewCampaignsError>}
   * @memberof InitialGlobalBudgetRecommendationResponse
   */
  errors?: Array<GlobalBudgetRecommendationNewCampaignsError>;
}
/**
 *
 * @export
 * @interface IntegerRange
 */
export interface IntegerRange {
  /**
   *
   * @type {number}
   * @memberof IntegerRange
   */
  min?: number;
  /**
   *
   * @type {number}
   * @memberof IntegerRange
   */
  max?: number;
}
/**
 *
 * @export
 * @interface InternalServerError
 */
export interface InternalServerError {
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof InternalServerError
   */
  internalServerError: SponsoredProductsInternalServerError;
}
/**
 * Returns information about an InternalServerException.
 * @export
 * @interface InternalServerException
 */
export interface InternalServerException {
  /**
   * The HTTP status code of the response.
   * @type {string}
   * @memberof InternalServerException
   */
  code?: string;
  /**
   * A human-readable description of the response.
   * @type {string}
   * @memberof InternalServerException
   */
  details?: string;
}
/**
 *
 * @export
 * @interface InvalidInputError
 */
export interface InvalidInputError {
  /**
   *
   * @type {SponsoredProductsInvalidInputError}
   * @memberof InvalidInputError
   */
  invalidInputError: SponsoredProductsInvalidInputError;
}
/**
 *
 * @export
 * @interface KeywordBidInfo
 */
export interface KeywordBidInfo {
  /**
   *
   * @type {BidSuggestion}
   * @memberof KeywordBidInfo
   */
  suggestedBid?: BidSuggestion;
  /**
   * Keyword match type. The default value will be BROAD.
   * @type {string}
   * @memberof KeywordBidInfo
   */
  matchType?: KeywordBidInfoMatchTypeEnum;
  /**
   * The keyword target rank
   * @type {number}
   * @memberof KeywordBidInfo
   */
  rank?: number;
  /**
   * The bid value for the keyword, in minor currency units (example: cents). The default value will be the suggested bid.
   * @type {number}
   * @memberof KeywordBidInfo
   */
  bid?: number;
}

export const KeywordBidInfoMatchTypeEnum = {
  Broad: 'BROAD',
  Exact: 'EXACT',
  Phrase: 'PHRASE',
} as const;

export type KeywordBidInfoMatchTypeEnum = (typeof KeywordBidInfoMatchTypeEnum)[keyof typeof KeywordBidInfoMatchTypeEnum];

/**
 * Keyword group. Represents a high level keyword targeting intent. e.g. the keyword group \"gift\" can target relevant search queries containing the word gift
 * @export
 * @interface KeywordGroup
 */
export interface KeywordGroup {
  /**
   * Summary of impacts.
   * @type {string}
   * @memberof KeywordGroup
   */
  impactSummary?: string;
  /**
   * Detailed Keyword group description.
   * @type {string}
   * @memberof KeywordGroup
   */
  description?: string;
  /**
   * Sample keywords that match the group.
   * @type {Array<string>}
   * @memberof KeywordGroup
   */
  sampleKeywords?: Array<string>;
  /**
   * Unique Identifier for the keyword group. To be passed during targeting clause creation.
   * @type {string}
   * @memberof KeywordGroup
   */
  id: string;
  /**
   * Keyword group text. Can be used for display purposes.
   * @type {string}
   * @memberof KeywordGroup
   */
  text: string;
}
/**
 * Keyword groups request.
 * @export
 * @interface KeywordGroupsRecommendationsRequest
 */
export interface KeywordGroupsRecommendationsRequest {
  /**
   * List of ASINs.
   * @type {Array<string>}
   * @memberof KeywordGroupsRecommendationsRequest
   */
  asins: Array<string>;
  /**
   * If the last response included this field then there are more items to retrieve.
   * @type {string}
   * @memberof KeywordGroupsRecommendationsRequest
   */
  nextToken?: string;
}
/**
 * Keyword group recommendations response.
 * @export
 * @interface KeywordGroupsRecommendationsResponse
 */
export interface KeywordGroupsRecommendationsResponse {
  /**
   * If present then there is more data to retrieve. To retrieve, resend request with token.
   * @type {string}
   * @memberof KeywordGroupsRecommendationsResponse
   */
  nextToken?: string;
  /**
   * Keyword group recommendations for input list of ASINs.
   * @type {Array<KeywordGroup>}
   * @memberof KeywordGroupsRecommendationsResponse
   */
  keywordGroups: Array<KeywordGroup>;
}
/**
 *
 * @export
 * @interface KeywordRankedTargetsResponse
 */
export interface KeywordRankedTargetsResponse {
  /**
   * A list of ranked keyword targets
   * @type {Array<KeywordTargetResponse>}
   * @memberof KeywordRankedTargetsResponse
   */
  targets?: Array<KeywordTargetResponse>;
}
/**
 *
 * @export
 * @interface KeywordTarget
 */
export interface KeywordTarget {
  /**
   *
   * @type {SponsoredProductsCreateKeywordTarget}
   * @memberof KeywordTarget
   */
  keywordTarget: SponsoredProductsCreateKeywordTarget;
}
/**
 *
 * @export
 * @interface KeywordTargetDetailsV2
 */
export interface KeywordTargetDetailsV2 {
  /**
   *
   * @type {SponsoredProductsKeywordTargetV2}
   * @memberof KeywordTargetDetailsV2
   */
  keywordTargetDetailsV2: SponsoredProductsKeywordTargetV2;
}
/**
 *
 * @export
 * @interface KeywordTargetRankRecommendationRequest
 */
export interface KeywordTargetRankRecommendationRequest {
  /**
   * A list of targets that need to be ranked
   * @type {Array<KeywordTarget>}
   * @memberof KeywordTargetRankRecommendationRequest
   */
  targets?: Array<KeywordTarget>;
  /**
   * The max size of recommended target. Set it to 0 if you only want to rank user-defined keywords.
   * @type {number}
   * @memberof KeywordTargetRankRecommendationRequest
   */
  maxRecommendations?: number;
  /**
   * The ranking metric value. Supported values: CLICKS, CONVERSIONS, DEFAULT. DEFAULT will be applied if no value passed in.
   * @type {string}
   * @memberof KeywordTargetRankRecommendationRequest
   */
  sortDimension?: KeywordTargetRankRecommendationRequestSortDimensionEnum;
  /**
   * Translations are for readability and do not affect the targeting of ads. Supported marketplace to locale mappings can be found at the <a href=\'https://advertising.amazon.com/API/docs/en-us/localization/#/Keyword%20Localization\'>POST /keywords/localize</a> endpoint. Note: Translations will be null if locale is unsupported.
   * @type {string}
   * @memberof KeywordTargetRankRecommendationRequest
   */
  locale?: KeywordTargetRankRecommendationRequestLocaleEnum;
}

export const KeywordTargetRankRecommendationRequestSortDimensionEnum = {
  Clicks: 'CLICKS',
  Conversions: 'CONVERSIONS',
  Default: 'DEFAULT',
} as const;

export type KeywordTargetRankRecommendationRequestSortDimensionEnum =
  (typeof KeywordTargetRankRecommendationRequestSortDimensionEnum)[keyof typeof KeywordTargetRankRecommendationRequestSortDimensionEnum];
export const KeywordTargetRankRecommendationRequestLocaleEnum = {
  ArEg: 'ar_EG',
  DeDe: 'de_DE',
  EnAe: 'en_AE',
  EnAu: 'en_AU',
  EnCa: 'en_CA',
  EnGb: 'en_GB',
  EnIn: 'en_IN',
  EnSa: 'en_SA',
  EnSg: 'en_SG',
  EnUs: 'en_US',
  EsEs: 'es_ES',
  EsMx: 'es_MX',
  FrFr: 'fr_FR',
  ItIt: 'it_IT',
  JaJp: 'ja_JP',
  NlNl: 'nl_NL',
  PlPl: 'pl_PL',
  PtBr: 'pt_BR',
  SvSe: 'sv_SE',
  TrTr: 'tr_TR',
  ZhCn: 'zh_CN',
} as const;

export type KeywordTargetRankRecommendationRequestLocaleEnum =
  (typeof KeywordTargetRankRecommendationRequestLocaleEnum)[keyof typeof KeywordTargetRankRecommendationRequestLocaleEnum];

/**
 *
 * @export
 * @interface KeywordTargetResponse
 */
export interface KeywordTargetResponse {
  /**
   *
   * @type {BidSuggestion}
   * @memberof KeywordTargetResponse
   */
  suggestedBid?: BidSuggestion;
  /**
   * The translation of keyword if a locale is passed in
   * @type {string}
   * @memberof KeywordTargetResponse
   */
  translation?: string;
  /**
   * The keyword target rank
   * @type {number}
   * @memberof KeywordTargetResponse
   */
  rank?: number;
  /**
   * Keyword match type. The default value will be BROAD.
   * @type {string}
   * @memberof KeywordTargetResponse
   */
  matchType?: KeywordTargetResponseMatchTypeEnum;
  /**
   * The keyword value
   * @type {string}
   * @memberof KeywordTargetResponse
   */
  keyword?: string;
  /**
   * The bid value for the keyword, in minor currency units (example: cents). The default value will be the suggested bid.
   * @type {number}
   * @memberof KeywordTargetResponse
   */
  bid?: number;
  /**
   * Flag that tells if keyword was selected by the user or was recommended by KRS
   * @type {boolean}
   * @memberof KeywordTargetResponse
   */
  userSelectedKeyword?: boolean;
}

export const KeywordTargetResponseMatchTypeEnum = {
  Broad: 'BROAD',
  Exact: 'EXACT',
  Phrase: 'PHRASE',
} as const;

export type KeywordTargetResponseMatchTypeEnum = (typeof KeywordTargetResponseMatchTypeEnum)[keyof typeof KeywordTargetResponseMatchTypeEnum];

/**
 * Contains suggested recommendation for the keyword targeting.
 * @export
 * @interface KeywordTargetingRecommendation
 */
export interface KeywordTargetingRecommendation {
  /**
   * The identifier of the keyword targeting.
   * @type {string}
   * @memberof KeywordTargetingRecommendation
   */
  keywordId?: string;
  /**
   * The suggested bid value associated with this keyword targeting clause.
   * @type {number}
   * @memberof KeywordTargetingRecommendation
   */
  suggestedBid?: number;
  /**
   * Keyword match type. | Value | Description | | --- | --- | | `BROAD` | Use BROAD to broadly match your keyword targeting ads with search queries.| | `EXACT` | Use EXACT to exactly match your keyword targeting ads with search queries.| | `PHRASE` | Use PHRASE to match your keyword targeting ads with search phrases.|
   * @type {string}
   * @memberof KeywordTargetingRecommendation
   */
  matchType?: KeywordTargetingRecommendationMatchTypeEnum;
  /**
   * Type of action for the keyword targeting.
   * @type {string}
   * @memberof KeywordTargetingRecommendation
   */
  action?: KeywordTargetingRecommendationActionEnum;
  /**
   * The ad group identifier.
   * @type {string}
   * @memberof KeywordTargetingRecommendation
   */
  adGroupId?: string;
  /**
   * The keyword text.
   * @type {string}
   * @memberof KeywordTargetingRecommendation
   */
  keywordText?: string;
}

export const KeywordTargetingRecommendationMatchTypeEnum = {
  Exact: 'EXACT',
  Phrase: 'PHRASE',
  Broad: 'BROAD',
} as const;

export type KeywordTargetingRecommendationMatchTypeEnum =
  (typeof KeywordTargetingRecommendationMatchTypeEnum)[keyof typeof KeywordTargetingRecommendationMatchTypeEnum];
export const KeywordTargetingRecommendationActionEnum = {
  Add: 'ADD',
  Remove: 'REMOVE',
  Increase: 'INCREASE',
  Decrease: 'DECREASE',
  Update: 'UPDATE',
} as const;

export type KeywordTargetingRecommendationActionEnum =
  (typeof KeywordTargetingRecommendationActionEnum)[keyof typeof KeywordTargetingRecommendationActionEnum];

/**
 *
 * @export
 * @interface ListGlobalTargetableCategoriesRequest
 */
export interface ListGlobalTargetableCategoriesRequest {
  /**
   * A list of country codes to fetch category tree <br> <table><thead><tr><th>Country Code</th><th>Country</th></tr></thead><tbody><tr><td>US</td><td>United States</td></tr><tr><td>CA</td><td>Canada</td></tr><tr><td>MX</td><td>Mexico</td></tr><tr><td>BR</td><td>Brazil</td></tr><tr><td>UK</td><td>United Kingdom</td></tr><tr><td>DE</td><td>Germany</td></tr><tr><td>FR</td><td>France</td></tr><tr><td>ES</td><td>Spain</td></tr><tr><td>IT</td><td>Italy</td></tr><tr><td>IN</td><td>India</td></tr><tr><td>AE</td><td>United Arab Emirates</td></tr><tr><td>SA</td><td>Saudi Arabia</td></tr><tr><td>NL</td><td>Netherlands</td></tr><tr><td>PL</td><td>Poland</td></tr><tr><td>BE</td><td>Belgium</td></tr><tr><td>SE</td><td>Sweden</td></tr><tr><td>TR</td><td>Turkey</td></tr><tr><td>EG</td><td>Egypt</td></tr><tr><td>JP</td><td>Japan</td></tr><tr><td>AU</td><td>Australia</td></tr><tr><td>SG</td><td>Singapore</td></tr></tbody></table>
   * @type {Set<string>}
   * @memberof ListGlobalTargetableCategoriesRequest
   */
  countryCodes: Set<string>;
  /**
   * The locale to which the caller wishes to translate the targetable categories to. For example, if the caller wishes to receive the targetable categories in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned targetable categories will be in the default language of the marketplace. <br><br> <b>Supported locale\'s</b> : \"ar_AE\",\"de_DE\",\"en_AE\",\"en_AU\",\"en_CA\",\"en_GB\",\"en_IN\",\"en_SG\",\"en_US\",\"es_ES\",\"es_MX\",\"fr_CA\",\"fr_FR\",\"hi_IN\",\"it_IT\",\"ja_JP\",\"ko_KR\",\"nl_NL\",\"pl_PL\",\"pt_BR\",\"sv_SE\",\"ta_IN\",\"th_TH\",\"tr_TR\",\"vi_VN\",\"zh_CN\"
   * @type {string}
   * @memberof ListGlobalTargetableCategoriesRequest
   */
  locale?: string;
}
/**
 *
 * @export
 * @interface ListGlobalTargetableCategoriesResponse
 */
export interface ListGlobalTargetableCategoriesResponse {
  /**
   * Map containing category tree for countries passed in the request Ex: { \"US\" : \"jsonString\"}.
   * @type {{ [key: string]: string; }}
   * @memberof ListGlobalTargetableCategoriesResponse
   */
  countryCategoryTree?: { [key: string]: string };
}
/**
 *
 * @export
 * @interface LocaleError
 */
export interface LocaleError {
  /**
   *
   * @type {SponsoredProductsLocaleError}
   * @memberof LocaleError
   */
  localeError: SponsoredProductsLocaleError;
}
/**
 *
 * @export
 * @interface MalformedValueError
 */
export interface MalformedValueError {
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof MalformedValueError
   */
  malformedValueError: SponsoredProductsMalformedValueError;
}
/**
 *
 * @export
 * @interface MissingValueError
 */
export interface MissingValueError {
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof MissingValueError
   */
  missingValueError: SponsoredProductsMissingValueError;
}
/**
 *
 * @export
 * @interface MultiCountryAdGroupThemeBasedBidRecommendationRequest
 */
export interface MultiCountryAdGroupThemeBasedBidRecommendationRequest {
  /**
   * The list of targeting expressions. Maximum of 100 per request per country, use pagination for more if needed.
   * @type {Array<MultiCountryTargetingExpression>}
   * @memberof MultiCountryAdGroupThemeBasedBidRecommendationRequest
   */
  targetingExpressions: Array<MultiCountryTargetingExpression>;
  /**
   * A list of country codes. Supported country codes: | Country Code |  Country            | |-------------|----------------------| | US          | United States        | | CA          | Canada               | | MX          | Mexico               | | BR          | Brazil               | | UK          | United Kingdom       | | DE          | Germany              | | FR          | France               | | ES          | Spain                | | IT          | Italy                | | IN          | India                | | AE          | United Arab Emirates | | SA          | Saudi Arabia         | | NL          | Netherlands          | | PL          | Poland               | | BE          | Belgium              | | SE          | Sweden               | | TR          | Turkey               | | EG          | Egypt                | | JP          | Japan                | | AU          | Australia            | | SG          | Singapore            |
   * @type {Set<string>}
   * @memberof MultiCountryAdGroupThemeBasedBidRecommendationRequest
   */
  countryCodes?: Set<string>;
  /**
   * The campaign identifier.
   * @type {string}
   * @memberof MultiCountryAdGroupThemeBasedBidRecommendationRequest
   */
  campaignId: string;
  /**
   * The bid recommendation type.
   * @type {string}
   * @memberof MultiCountryAdGroupThemeBasedBidRecommendationRequest
   */
  recommendationType: MultiCountryAdGroupThemeBasedBidRecommendationRequestRecommendationTypeEnum;
  /**
   * The ad group identifier.
   * @type {string}
   * @memberof MultiCountryAdGroupThemeBasedBidRecommendationRequest
   */
  adGroupId: string;
}

export const MultiCountryAdGroupThemeBasedBidRecommendationRequestRecommendationTypeEnum = {
  BidsForExistingAdGroup: 'BIDS_FOR_EXISTING_AD_GROUP',
} as const;

export type MultiCountryAdGroupThemeBasedBidRecommendationRequestRecommendationTypeEnum =
  (typeof MultiCountryAdGroupThemeBasedBidRecommendationRequestRecommendationTypeEnum)[keyof typeof MultiCountryAdGroupThemeBasedBidRecommendationRequestRecommendationTypeEnum];

/**
 *
 * @export
 * @interface MultiCountryAsinsThemeBasedBidRecommendationRequest
 */
export interface MultiCountryAsinsThemeBasedBidRecommendationRequest {
  /**
   * The list of multi country asins
   * @type {Array<{ [key: string]: string; }>}
   * @memberof MultiCountryAsinsThemeBasedBidRecommendationRequest
   */
  asins?: Array<{ [key: string]: string }>;
  /**
   * The list of targeting expressions. Maximum of 100 per request per country, use pagination for more if needed.
   * @type {Array<MultiCountryTargetingExpression>}
   * @memberof MultiCountryAsinsThemeBasedBidRecommendationRequest
   */
  targetingExpressions: Array<MultiCountryTargetingExpression>;
  /**
   * A list of country codes. Supported country codes: | Country Code |  Country            | |-------------|----------------------| | US          | United States        | | CA          | Canada               | | MX          | Mexico               | | BR          | Brazil               | | UK          | United Kingdom       | | DE          | Germany              | | FR          | France               | | ES          | Spain                | | IT          | Italy                | | IN          | India                | | AE          | United Arab Emirates | | SA          | Saudi Arabia         | | NL          | Netherlands          | | PL          | Poland               | | BE          | Belgium              | | SE          | Sweden               | | TR          | Turkey               | | EG          | Egypt                | | JP          | Japan                | | AU          | Australia            | | SG          | Singapore            |
   * @type {Set<string>}
   * @memberof MultiCountryAsinsThemeBasedBidRecommendationRequest
   */
  countryCodes: Set<string>;
  /**
   *
   * @type {MultiCountryAsinsThemeBasedBidRecommendationRequestBidding}
   * @memberof MultiCountryAsinsThemeBasedBidRecommendationRequest
   */
  bidding: MultiCountryAsinsThemeBasedBidRecommendationRequestBidding;
  /**
   * The bid recommendation type.
   * @type {string}
   * @memberof MultiCountryAsinsThemeBasedBidRecommendationRequest
   */
  recommendationType: MultiCountryAsinsThemeBasedBidRecommendationRequestRecommendationTypeEnum;
  /**
   * This field is upcoming and not ready for use. It represents the list of products in the request.
   * @type {Array<{ [key: string]: ProductDetails; }>}
   * @memberof MultiCountryAsinsThemeBasedBidRecommendationRequest
   */
  products?: Array<{ [key: string]: ProductDetails }>;
}

export const MultiCountryAsinsThemeBasedBidRecommendationRequestRecommendationTypeEnum = {
  BidsForNewAdGroup: 'BIDS_FOR_NEW_AD_GROUP',
} as const;

export type MultiCountryAsinsThemeBasedBidRecommendationRequestRecommendationTypeEnum =
  (typeof MultiCountryAsinsThemeBasedBidRecommendationRequestRecommendationTypeEnum)[keyof typeof MultiCountryAsinsThemeBasedBidRecommendationRequestRecommendationTypeEnum];

/**
 * Bidding control configuration for the campaign.
 * @export
 * @interface MultiCountryAsinsThemeBasedBidRecommendationRequestBidding
 */
export interface MultiCountryAsinsThemeBasedBidRecommendationRequestBidding {
  /**
   * Placement adjustment configuration for the campaign.
   * @type {Array<BidPlacementAdjustment>}
   * @memberof MultiCountryAsinsThemeBasedBidRecommendationRequestBidding
   */
  adjustments?: Array<BidPlacementAdjustment>;
  /**
   *
   * @type {BiddingStrategy}
   * @memberof MultiCountryAsinsThemeBasedBidRecommendationRequestBidding
   */
  strategy: BiddingStrategy;
}

/**
 *
 * @export
 * @interface MultiCountryBidRecommendationError
 */
export interface MultiCountryBidRecommendationError {
  /**
   * Countries where error have occurred
   * @type {Array<string>}
   * @memberof MultiCountryBidRecommendationError
   */
  countryCodes?: Array<string>;
  /**
   * Machine readable error code.
   * @type {string}
   * @memberof MultiCountryBidRecommendationError
   */
  code?: string;
  /**
   * Human readable 1 liner error message
   * @type {string}
   * @memberof MultiCountryBidRecommendationError
   */
  message?: string;
}
/**
 *
 * @export
 * @interface MultiCountryBidRecommendationPerTargetingExpression
 */
export interface MultiCountryBidRecommendationPerTargetingExpression {
  /**
   *
   * @type {{ [key: string]: Array<number>; }}
   * @memberof MultiCountryBidRecommendationPerTargetingExpression
   */
  countrySuggestedBids: { [key: string]: Array<number> };
  /**
   *
   * @type {MultiCountryTargetingExpression}
   * @memberof MultiCountryBidRecommendationPerTargetingExpression
   */
  expression: MultiCountryTargetingExpression;
}
/**
 * The targeting expression. The `type` property specifies the targeting option. Use `CLOSE_MATCH` to match your auto targeting ads closely to the specified value. Use `LOOSE_MATCH` to match your auto targeting ads broadly to the specified value. Use `SUBSTITUTES` to display your auto targeting ads along with substitutable products. Use `COMPLEMENTS` to display your auto targeting ads along with affiliated products. Use `KEYWORD_BROAD_MATCH` to broadly match your keyword targeting ads with search queries. Use `KEYWORD_EXACT_MATCH` to exactly match your keyword targeting ads with search queries. Use `KEYWORD_PHRASE_MATCH` to match your keyword targeting ads with search phrases. your keyword targeting ads with search phrases. Use `PAT_ASIN` to match your product attribute targeting ads with product ASIN. Use `PAT_CATEGORY` to match your product attribute targeting ads with product category. Use `PAT_CATEGORY_REFINEMENT` to match your product attribute targeting ads with product attribute, including brand, price, rating, prime shipping eligible, age range and genre. Use `KEYWORD_GROUP` to match your keyword targeting ads with keyword group.
 * @export
 * @interface MultiCountryTargetingExpression
 */
export interface MultiCountryTargetingExpression {
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof MultiCountryTargetingExpression
   */
  countryValues?: { [key: string]: string };
  /**
   *
   * @type {MultiCountryTargetingExpressionType}
   * @memberof MultiCountryTargetingExpression
   */
  type: MultiCountryTargetingExpressionType;
}

/**
 *
 * @export
 * @enum {string}
 */

export const MultiCountryTargetingExpressionType = {
  CloseMatch: 'CLOSE_MATCH',
  LooseMatch: 'LOOSE_MATCH',
  Substitutes: 'SUBSTITUTES',
  Complements: 'COMPLEMENTS',
  KeywordBroadMatch: 'KEYWORD_BROAD_MATCH',
  KeywordExactMatch: 'KEYWORD_EXACT_MATCH',
  KeywordPhraseMatch: 'KEYWORD_PHRASE_MATCH',
  PatAsin: 'PAT_ASIN',
  PatCategory: 'PAT_CATEGORY',
  PatCategoryRefinement: 'PAT_CATEGORY_REFINEMENT',
  KeywordGroup: 'KEYWORD_GROUP',
} as const;

export type MultiCountryTargetingExpressionType = (typeof MultiCountryTargetingExpressionType)[keyof typeof MultiCountryTargetingExpressionType];

/**
 *
 * @export
 * @interface MultiCountryThemeBasedBidRecommendation
 */
export interface MultiCountryThemeBasedBidRecommendation {
  /**
   *
   * @type {Theme}
   * @memberof MultiCountryThemeBasedBidRecommendation
   */
  theme: Theme;
  /**
   * The bid recommendations for targeting expressions listed in the request.
   * @type {Array<MultiCountryBidRecommendationPerTargetingExpression>}
   * @memberof MultiCountryThemeBasedBidRecommendation
   */
  bidRecommendationsForTargetingExpressions: Array<MultiCountryBidRecommendationPerTargetingExpression>;
}

/**
 *
 * @export
 * @interface MultiCountryThemeBasedBidRecommendationCompleteFailureResponse
 */
export interface MultiCountryThemeBasedBidRecommendationCompleteFailureResponse {
  /**
   * List of errors occurred while processing multi country request.
   * @type {Array<MultiCountryBidRecommendationError>}
   * @memberof MultiCountryThemeBasedBidRecommendationCompleteFailureResponse
   */
  errors: Array<MultiCountryBidRecommendationError>;
}
/**
 * A list of multi country bid recommendation themes and associated bid recommendations.
 * @export
 * @interface MultiCountryThemeBasedBidRecommendationResponse
 */
export interface MultiCountryThemeBasedBidRecommendationResponse {
  /**
   *
   * @type {Array<MultiCountryThemeBasedBidRecommendation>}
   * @memberof MultiCountryThemeBasedBidRecommendationResponse
   */
  bidRecommendations: Array<MultiCountryThemeBasedBidRecommendation>;
  /**
   * List of errors occurred while processing multi country request.
   * @type {Array<MultiCountryBidRecommendationError>}
   * @memberof MultiCountryThemeBasedBidRecommendationResponse
   */
  errors?: Array<MultiCountryBidRecommendationError>;
}
/**
 * Details of a rule action.
 * @export
 * @interface OptimizationRulesAPISwaggerActionDetails
 */
export interface OptimizationRulesAPISwaggerActionDetails {
  /**
   *
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerActionDetails
   */
  actionUnit: OptimizationRulesAPISwaggerActionDetailsActionUnitEnum;
  /**
   *
   * @type {number}
   * @memberof OptimizationRulesAPISwaggerActionDetails
   */
  value: number;
  /**
   *
   * @type {OptimizationRulesAPISwaggerRuleActionOperator}
   * @memberof OptimizationRulesAPISwaggerActionDetails
   */
  actionOperator: OptimizationRulesAPISwaggerRuleActionOperator;
}

export const OptimizationRulesAPISwaggerActionDetailsActionUnitEnum = {
  Percent: 'PERCENT',
} as const;

export type OptimizationRulesAPISwaggerActionDetailsActionUnitEnum =
  (typeof OptimizationRulesAPISwaggerActionDetailsActionUnitEnum)[keyof typeof OptimizationRulesAPISwaggerActionDetailsActionUnitEnum];

/**
 * The action taken when the optimization rule is enabled. Defaults to ADOPT.
 * @export
 * @enum {string}
 */

export const OptimizationRulesAPISwaggerActionType = {
  Adopt: 'ADOPT',
} as const;

export type OptimizationRulesAPISwaggerActionType =
  (typeof OptimizationRulesAPISwaggerActionType)[keyof typeof OptimizationRulesAPISwaggerActionType];

/**
 *
 * @export
 * @interface OptimizationRulesAPISwaggerAsinCombination
 */
export interface OptimizationRulesAPISwaggerAsinCombination {
  /**
   *
   * @type {Array<string>}
   * @memberof OptimizationRulesAPISwaggerAsinCombination
   */
  asinCombination: Array<string>;
}
/**
 * Request body for creating optimization rules associations, in bulk.
 * @export
 * @interface OptimizationRulesAPISwaggerAssociateOptimizationRulesRequest
 */
export interface OptimizationRulesAPISwaggerAssociateOptimizationRulesRequest {
  /**
   * Pairs of a rule with an advertising entity to associate together.
   * @type {Array<OptimizationRulesAPISwaggerRuleAssociationDefinition>}
   * @memberof OptimizationRulesAPISwaggerAssociateOptimizationRulesRequest
   */
  associations: Array<OptimizationRulesAPISwaggerRuleAssociationDefinition>;
}
/**
 * Response object for creating rules associations.
 * @export
 * @interface OptimizationRulesAPISwaggerAssociateOptimizationRulesResponse
 */
export interface OptimizationRulesAPISwaggerAssociateOptimizationRulesResponse {
  /**
   *
   * @type {OptimizationRulesAPISwaggerAssociateOptimizationRulesResponseAssociations}
   * @memberof OptimizationRulesAPISwaggerAssociateOptimizationRulesResponse
   */
  associations?: OptimizationRulesAPISwaggerAssociateOptimizationRulesResponseAssociations;
}
/**
 *
 * @export
 * @interface OptimizationRulesAPISwaggerAssociateOptimizationRulesResponseAssociations
 */
export interface OptimizationRulesAPISwaggerAssociateOptimizationRulesResponseAssociations {
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerAssociateOptimizationRulesResponseSuccessItem>}
   * @memberof OptimizationRulesAPISwaggerAssociateOptimizationRulesResponseAssociations
   */
  success?: Array<OptimizationRulesAPISwaggerAssociateOptimizationRulesResponseSuccessItem>;
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerAssociateOptimizationRulesResponseErrorItem>}
   * @memberof OptimizationRulesAPISwaggerAssociateOptimizationRulesResponseAssociations
   */
  error?: Array<OptimizationRulesAPISwaggerAssociateOptimizationRulesResponseErrorItem>;
}
/**
 *
 * @export
 * @interface OptimizationRulesAPISwaggerAssociateOptimizationRulesResponseErrorItem
 */
export interface OptimizationRulesAPISwaggerAssociateOptimizationRulesResponseErrorItem {
  /**
   * Index of the failed association pair in the request.
   * @type {number}
   * @memberof OptimizationRulesAPISwaggerAssociateOptimizationRulesResponseErrorItem
   */
  index: number;
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerOptimizationRuleError>}
   * @memberof OptimizationRulesAPISwaggerAssociateOptimizationRulesResponseErrorItem
   */
  errors: Array<OptimizationRulesAPISwaggerOptimizationRuleError>;
}
/**
 *
 * @export
 * @interface OptimizationRulesAPISwaggerAssociateOptimizationRulesResponseSuccessItem
 */
export interface OptimizationRulesAPISwaggerAssociateOptimizationRulesResponseSuccessItem {
  /**
   *
   * @type {OptimizationRulesAPISwaggerEntityType}
   * @memberof OptimizationRulesAPISwaggerAssociateOptimizationRulesResponseSuccessItem
   */
  entityType: OptimizationRulesAPISwaggerEntityType;
  /**
   * Index of the successful association pair in the request.
   * @type {number}
   * @memberof OptimizationRulesAPISwaggerAssociateOptimizationRulesResponseSuccessItem
   */
  index: number;
  /**
   * The id that uniquely identifies the advertising entity that was associated to.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerAssociateOptimizationRulesResponseSuccessItem
   */
  entityId: string;
  /**
   * The id that uniquely identifies the optimization rule that was associated.
   * @type {number}
   * @memberof OptimizationRulesAPISwaggerAssociateOptimizationRulesResponseSuccessItem
   */
  optimizationRuleId: number;
}

/**
 * Request body for create campaign to optimization rules association.
 * @export
 * @interface OptimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignRequest
 */
export interface OptimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignRequest {
  /**
   * An array of rule identifiers.
   * @type {Array<string>}
   * @memberof OptimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignRequest
   */
  optimizationRuleIds: Array<string>;
}
/**
 * Response object for create campaign to optimization rules association.
 * @export
 * @interface OptimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignResponse
 */
export interface OptimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignResponse {
  /**
   * An enumerated error code for machine use.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignResponse
   */
  code?: string;
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerSingleOptimizationRuleAssociationResponse>}
   * @memberof OptimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignResponse
   */
  responses?: Array<OptimizationRulesAPISwaggerSingleOptimizationRuleAssociationResponse>;
}
/**
 * The entity type used to generate the bidding rule recommendation.
 * @export
 * @enum {string}
 */

export const OptimizationRulesAPISwaggerBiddingRuleEntityType = {
  Campaign: 'CAMPAIGN',
  ProductAd: 'PRODUCT_AD',
} as const;

export type OptimizationRulesAPISwaggerBiddingRuleEntityType =
  (typeof OptimizationRulesAPISwaggerBiddingRuleEntityType)[keyof typeof OptimizationRulesAPISwaggerBiddingRuleEntityType];

/**
 * Returns bidding rule recommendation for the provided entities.
 * @export
 * @interface OptimizationRulesAPISwaggerBiddingRuleRecommendations
 */
export interface OptimizationRulesAPISwaggerBiddingRuleRecommendations {
  /**
   *
   * @type {OptimizationRulesAPISwaggerProductAdContext}
   * @memberof OptimizationRulesAPISwaggerBiddingRuleRecommendations
   */
  productAdContext: OptimizationRulesAPISwaggerProductAdContext;
  /**
   *
   * @type {OptimizationRulesAPISwaggerBiddingRuleEntityType}
   * @memberof OptimizationRulesAPISwaggerBiddingRuleRecommendations
   */
  entityType: OptimizationRulesAPISwaggerBiddingRuleEntityType;
  /**
   *
   * @type {Array<string>}
   * @memberof OptimizationRulesAPISwaggerBiddingRuleRecommendations
   */
  eventIds?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof OptimizationRulesAPISwaggerBiddingRuleRecommendations
   */
  entityIds: Array<string>;
}

/**
 * Filter on campaigns.
 * @export
 * @interface OptimizationRulesAPISwaggerCampaignFilter
 */
export interface OptimizationRulesAPISwaggerCampaignFilter {
  /**
   *
   * @type {OptimizationRulesAPISwaggerEntityFieldFilter}
   * @memberof OptimizationRulesAPISwaggerCampaignFilter
   */
  campaignId?: OptimizationRulesAPISwaggerEntityFieldFilter;
}
/**
 * The comparison operator.
 * @export
 * @enum {string}
 */

export const OptimizationRulesAPISwaggerComparisonOperator = {
  GreaterThan: 'GREATER_THAN',
  LessThan: 'LESS_THAN',
  EqualTo: 'EQUAL_TO',
  LessThanOrEqualTo: 'LESS_THAN_OR_EQUAL_TO',
  GreaterThanOrEqualTo: 'GREATER_THAN_OR_EQUAL_TO',
} as const;

export type OptimizationRulesAPISwaggerComparisonOperator =
  (typeof OptimizationRulesAPISwaggerComparisonOperator)[keyof typeof OptimizationRulesAPISwaggerComparisonOperator];

/**
 * Request object for creating one or multiple optimization rules.
 * @export
 * @interface OptimizationRulesAPISwaggerCreateOptimizationRulesRequest
 */
export interface OptimizationRulesAPISwaggerCreateOptimizationRulesRequest {
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleId>}
   * @memberof OptimizationRulesAPISwaggerCreateOptimizationRulesRequest
   */
  optimizationRules: Array<OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleId>;
}
/**
 * Request object for creating one or multiple optimization rules.
 * @export
 * @interface OptimizationRulesAPISwaggerCreateOptimizationRulesRequestV2
 */
export interface OptimizationRulesAPISwaggerCreateOptimizationRulesRequestV2 {
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleIdV2>}
   * @memberof OptimizationRulesAPISwaggerCreateOptimizationRulesRequestV2
   */
  optimizationRules: Array<OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleIdV2>;
}
/**
 * Response object for CreateOptimizationRules API.
 * @export
 * @interface OptimizationRulesAPISwaggerCreateOptimizationRulesResponse
 */
export interface OptimizationRulesAPISwaggerCreateOptimizationRulesResponse {
  /**
   * An enumerated error code for machine use.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerCreateOptimizationRulesResponse
   */
  code?: string;
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerSingleOptimizationRuleResponse>}
   * @memberof OptimizationRulesAPISwaggerCreateOptimizationRulesResponse
   */
  responses?: Array<OptimizationRulesAPISwaggerSingleOptimizationRuleResponse>;
}
/**
 * Day of the week.
 * @export
 * @enum {string}
 */

export const OptimizationRulesAPISwaggerDayOfTheWeek = {
  Monday: 'MONDAY',
  Tuesday: 'TUESDAY',
  Wednesday: 'WEDNESDAY',
  Thursday: 'THURSDAY',
  Friday: 'FRIDAY',
  Saturday: 'SATURDAY',
  Sunday: 'SUNDAY',
} as const;

export type OptimizationRulesAPISwaggerDayOfTheWeek =
  (typeof OptimizationRulesAPISwaggerDayOfTheWeek)[keyof typeof OptimizationRulesAPISwaggerDayOfTheWeek];

/**
 * Request body for deleting optimization rules.
 * @export
 * @interface OptimizationRulesAPISwaggerDeleteOptimizationRulesRequest
 */
export interface OptimizationRulesAPISwaggerDeleteOptimizationRulesRequest {
  /**
   * An array of rule identifiers.
   * @type {Array<string>}
   * @memberof OptimizationRulesAPISwaggerDeleteOptimizationRulesRequest
   */
  optimizationRuleIds: Array<string>;
}
/**
 * Response object from deleting optimization rules.
 * @export
 * @interface OptimizationRulesAPISwaggerDeleteOptimizationRulesResponse
 */
export interface OptimizationRulesAPISwaggerDeleteOptimizationRulesResponse {
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerDeleteOptimizationRulesResponseSuccessItem>}
   * @memberof OptimizationRulesAPISwaggerDeleteOptimizationRulesResponse
   */
  success?: Array<OptimizationRulesAPISwaggerDeleteOptimizationRulesResponseSuccessItem>;
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerDeleteOptimizationRulesResponseErrorItem>}
   * @memberof OptimizationRulesAPISwaggerDeleteOptimizationRulesResponse
   */
  error?: Array<OptimizationRulesAPISwaggerDeleteOptimizationRulesResponseErrorItem>;
}
/**
 *
 * @export
 * @interface OptimizationRulesAPISwaggerDeleteOptimizationRulesResponseErrorItem
 */
export interface OptimizationRulesAPISwaggerDeleteOptimizationRulesResponseErrorItem {
  /**
   * Index of the optimization rule in the request.
   * @type {number}
   * @memberof OptimizationRulesAPISwaggerDeleteOptimizationRulesResponseErrorItem
   */
  index: number;
  /**
   * The id that uniquely identifies the optimization rule that failed deletion.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerDeleteOptimizationRulesResponseErrorItem
   */
  optimizationRuleId: string;
  /**
   * The http status error code for machine use.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerDeleteOptimizationRulesResponseErrorItem
   */
  httpStatusCode: string;
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerOptimizationRuleBatchSubError>}
   * @memberof OptimizationRulesAPISwaggerDeleteOptimizationRulesResponseErrorItem
   */
  subErrors: Array<OptimizationRulesAPISwaggerOptimizationRuleBatchSubError>;
}
/**
 *
 * @export
 * @interface OptimizationRulesAPISwaggerDeleteOptimizationRulesResponseSuccessItem
 */
export interface OptimizationRulesAPISwaggerDeleteOptimizationRulesResponseSuccessItem {
  /**
   * Index of the optimization rule in the request.
   * @type {number}
   * @memberof OptimizationRulesAPISwaggerDeleteOptimizationRulesResponseSuccessItem
   */
  index: number;
  /**
   * The id that uniquely identified the optimization rule that succeeded in deletion.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerDeleteOptimizationRulesResponseSuccessItem
   */
  optimizationRuleId: string;
}
/**
 * Request body object for deleting campaign to optimization rules association.
 * @export
 * @interface OptimizationRulesAPISwaggerDisassociateOptimizationRulesFromCampaignRequest
 */
export interface OptimizationRulesAPISwaggerDisassociateOptimizationRulesFromCampaignRequest {
  /**
   * An array of rule identifiers, all of which to disassociate from the campaign.
   * @type {Array<string>}
   * @memberof OptimizationRulesAPISwaggerDisassociateOptimizationRulesFromCampaignRequest
   */
  optimizationRuleIds: Array<string>;
}
/**
 * Response object for deleting campaign to optimization rules association.
 * @export
 * @interface OptimizationRulesAPISwaggerDisassociateOptimizationRulesFromCampaignResponse
 */
export interface OptimizationRulesAPISwaggerDisassociateOptimizationRulesFromCampaignResponse {
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerDisassociateOptimizationRulesFromCampaignResponseSuccessItem>}
   * @memberof OptimizationRulesAPISwaggerDisassociateOptimizationRulesFromCampaignResponse
   */
  success?: Array<OptimizationRulesAPISwaggerDisassociateOptimizationRulesFromCampaignResponseSuccessItem>;
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerDisassociateOptimizationRulesFromCampaignResponseErrorItem>}
   * @memberof OptimizationRulesAPISwaggerDisassociateOptimizationRulesFromCampaignResponse
   */
  error?: Array<OptimizationRulesAPISwaggerDisassociateOptimizationRulesFromCampaignResponseErrorItem>;
}
/**
 *
 * @export
 * @interface OptimizationRulesAPISwaggerDisassociateOptimizationRulesFromCampaignResponseErrorItem
 */
export interface OptimizationRulesAPISwaggerDisassociateOptimizationRulesFromCampaignResponseErrorItem {
  /**
   * Index of the optimization rule in the request.
   * @type {number}
   * @memberof OptimizationRulesAPISwaggerDisassociateOptimizationRulesFromCampaignResponseErrorItem
   */
  index: number;
  /**
   * The id that uniquely identifies the optimization rule that was failed to be disassociated.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerDisassociateOptimizationRulesFromCampaignResponseErrorItem
   */
  optimizationRuleId: string;
  /**
   * The http status error code for machine use.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerDisassociateOptimizationRulesFromCampaignResponseErrorItem
   */
  httpStatusCode: string;
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerOptimizationRuleBatchSubError>}
   * @memberof OptimizationRulesAPISwaggerDisassociateOptimizationRulesFromCampaignResponseErrorItem
   */
  subErrors: Array<OptimizationRulesAPISwaggerOptimizationRuleBatchSubError>;
}
/**
 *
 * @export
 * @interface OptimizationRulesAPISwaggerDisassociateOptimizationRulesFromCampaignResponseSuccessItem
 */
export interface OptimizationRulesAPISwaggerDisassociateOptimizationRulesFromCampaignResponseSuccessItem {
  /**
   * Index of the optimization rule in the request.
   * @type {number}
   * @memberof OptimizationRulesAPISwaggerDisassociateOptimizationRulesFromCampaignResponseSuccessItem
   */
  index: number;
  /**
   * The id that uniquely identifies the optimization rule that was disassociated.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerDisassociateOptimizationRulesFromCampaignResponseSuccessItem
   */
  optimizationRuleId: string;
}
/**
 * Request body for disassociating optimization rules from advertising entities, in bulk.
 * @export
 * @interface OptimizationRulesAPISwaggerDisassociateOptimizationRulesRequest
 */
export interface OptimizationRulesAPISwaggerDisassociateOptimizationRulesRequest {
  /**
   * Pairs of a rule with an advertising entity to disassociate from each other.
   * @type {Array<OptimizationRulesAPISwaggerRuleAssociationDefinition>}
   * @memberof OptimizationRulesAPISwaggerDisassociateOptimizationRulesRequest
   */
  associations: Array<OptimizationRulesAPISwaggerRuleAssociationDefinition>;
}
/**
 * Response object for deleting optimization rules associations.
 * @export
 * @interface OptimizationRulesAPISwaggerDisassociateOptimizationRulesResponse
 */
export interface OptimizationRulesAPISwaggerDisassociateOptimizationRulesResponse {
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerDisassociateOptimizationRulesResponseSuccessItem>}
   * @memberof OptimizationRulesAPISwaggerDisassociateOptimizationRulesResponse
   */
  success: Array<OptimizationRulesAPISwaggerDisassociateOptimizationRulesResponseSuccessItem>;
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerDisassociateOptimizationRulesResponseErrorItem>}
   * @memberof OptimizationRulesAPISwaggerDisassociateOptimizationRulesResponse
   */
  error: Array<OptimizationRulesAPISwaggerDisassociateOptimizationRulesResponseErrorItem>;
}
/**
 *
 * @export
 * @interface OptimizationRulesAPISwaggerDisassociateOptimizationRulesResponseErrorItem
 */
export interface OptimizationRulesAPISwaggerDisassociateOptimizationRulesResponseErrorItem {
  /**
   * Index of the failed disassociation pair in the request.
   * @type {number}
   * @memberof OptimizationRulesAPISwaggerDisassociateOptimizationRulesResponseErrorItem
   */
  index: number;
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerOptimizationRuleError>}
   * @memberof OptimizationRulesAPISwaggerDisassociateOptimizationRulesResponseErrorItem
   */
  errors: Array<OptimizationRulesAPISwaggerOptimizationRuleError>;
}
/**
 *
 * @export
 * @interface OptimizationRulesAPISwaggerDisassociateOptimizationRulesResponseSuccessItem
 */
export interface OptimizationRulesAPISwaggerDisassociateOptimizationRulesResponseSuccessItem {
  /**
   *
   * @type {OptimizationRulesAPISwaggerEntityType}
   * @memberof OptimizationRulesAPISwaggerDisassociateOptimizationRulesResponseSuccessItem
   */
  entityType: OptimizationRulesAPISwaggerEntityType;
  /**
   * Index of the successful disassociation pair in the request.
   * @type {number}
   * @memberof OptimizationRulesAPISwaggerDisassociateOptimizationRulesResponseSuccessItem
   */
  index: number;
  /**
   * The id that uniquely identifies the advertising entity that was disassociated from.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerDisassociateOptimizationRulesResponseSuccessItem
   */
  entityId: string;
  /**
   * The id that uniquely identifies the optimization rule that was disassociated.
   * @type {number}
   * @memberof OptimizationRulesAPISwaggerDisassociateOptimizationRulesResponseSuccessItem
   */
  optimizationRuleId: number;
}

/**
 * The duration of an optimization rule based on special events (example: Prime Day) or custom date ranges.
 * @export
 * @interface OptimizationRulesAPISwaggerDuration
 */
export interface OptimizationRulesAPISwaggerDuration {
  /**
   * Identifier for the event during which the rule is applied.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerDuration
   */
  eventId?: string;
  /**
   * Name of the event during which the rule is applied.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerDuration
   */
  eventName?: string;
  /**
   * Time of optimization rule creation in ISO 8061.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerDuration
   */
  startTime: string;
  /**
   * Time of optimization rule completion in ISO 8061.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerDuration
   */
  endTime?: string;
}
/**
 * Filter type and value pair.
 * @export
 * @interface OptimizationRulesAPISwaggerEntityFieldFilter
 */
export interface OptimizationRulesAPISwaggerEntityFieldFilter {
  /**
   *
   * @type {Array<string>}
   * @memberof OptimizationRulesAPISwaggerEntityFieldFilter
   */
  values?: Array<string>;
  /**
   *
   * @type {OptimizationRulesAPISwaggerFilterType}
   * @memberof OptimizationRulesAPISwaggerEntityFieldFilter
   */
  filterType?: OptimizationRulesAPISwaggerFilterType;
}

/**
 *
 * @export
 * @interface OptimizationRulesAPISwaggerEntityInformation
 */
export interface OptimizationRulesAPISwaggerEntityInformation {
  /**
   * Name of the entity for which the rule is recommended.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerEntityInformation
   */
  entityName?: string;
  /**
   *
   * @type {OptimizationRulesAPISwaggerRecommendationEntityType}
   * @memberof OptimizationRulesAPISwaggerEntityInformation
   */
  entityType: OptimizationRulesAPISwaggerRecommendationEntityType;
  /**
   * Id of the entity for which the rule is recommended.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerEntityInformation
   */
  entityId: string;
}

/**
 * Types of advertising entities that may be associated to an optimization rule.
 * @export
 * @enum {string}
 */

export const OptimizationRulesAPISwaggerEntityType = {
  Campaign: 'CAMPAIGN',
  AdGroup: 'AD_GROUP',
  TargetPromotionGroup: 'TARGET_PROMOTION_GROUP',
} as const;

export type OptimizationRulesAPISwaggerEntityType =
  (typeof OptimizationRulesAPISwaggerEntityType)[keyof typeof OptimizationRulesAPISwaggerEntityType];

/**
 * The expression types of targets for the rule.
 * @export
 * @enum {string}
 */

export const OptimizationRulesAPISwaggerExpressionType = {
  Exact: 'EXACT',
  Extended: 'EXTENDED',
  Broad: 'BROAD',
  Phrase: 'PHRASE',
} as const;

export type OptimizationRulesAPISwaggerExpressionType =
  (typeof OptimizationRulesAPISwaggerExpressionType)[keyof typeof OptimizationRulesAPISwaggerExpressionType];

/**
 * Types of filter used for search.
 * @export
 * @enum {string}
 */

export const OptimizationRulesAPISwaggerFilterType = {
  ExactMatch: 'EXACT_MATCH',
} as const;

export type OptimizationRulesAPISwaggerFilterType =
  (typeof OptimizationRulesAPISwaggerFilterType)[keyof typeof OptimizationRulesAPISwaggerFilterType];

/**
 * Response object for getting campaigns associated with a rule.
 * @export
 * @interface OptimizationRulesAPISwaggerGetAssociatedCampaignsResponse
 */
export interface OptimizationRulesAPISwaggerGetAssociatedCampaignsResponse {
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerSingleCampaignRuleAssociationStatus>}
   * @memberof OptimizationRulesAPISwaggerGetAssociatedCampaignsResponse
   */
  associatedCampaigns?: Array<OptimizationRulesAPISwaggerSingleCampaignRuleAssociationStatus>;
  /**
   * An enumerated error code for machine use.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerGetAssociatedCampaignsResponse
   */
  code?: string;
  /**
   * To retrieve the next page of results, call the same operation and specify this token in the request. If the nextToken field is empty, there are no further results.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerGetAssociatedCampaignsResponse
   */
  nextToken?: string;
}
/**
 * Request object for getting rule recommendation. All the filters in the request are used in conjunction with one another.
 * @export
 * @interface OptimizationRulesAPISwaggerGetRuleRecommendationsRequest
 */
export interface OptimizationRulesAPISwaggerGetRuleRecommendationsRequest {
  /**
   *
   * @type {OptimizationRulesAPISwaggerRuleSubCategory}
   * @memberof OptimizationRulesAPISwaggerGetRuleRecommendationsRequest
   */
  ruleSubCategoryFilter: OptimizationRulesAPISwaggerRuleSubCategory;
  /**
   *
   * @type {Array<string>}
   * @memberof OptimizationRulesAPISwaggerGetRuleRecommendationsRequest
   */
  recommendationIdListFilter?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof OptimizationRulesAPISwaggerGetRuleRecommendationsRequest
   */
  campaignIdListFilter?: Array<string>;
  /**
   * The maximum number of recommendations to fetch.
   * @type {number}
   * @memberof OptimizationRulesAPISwaggerGetRuleRecommendationsRequest
   */
  maxResults?: number;
  /**
   * To retrieve the next page of results, call the same operation and specify this token in the request. If the nextToken field is empty, there are no further results.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerGetRuleRecommendationsRequest
   */
  nextToken?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof OptimizationRulesAPISwaggerGetRuleRecommendationsRequest
   */
  eventIdListFilter?: Array<string>;
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerAsinCombination>}
   * @memberof OptimizationRulesAPISwaggerGetRuleRecommendationsRequest
   */
  asinCombinationListFilter?: Array<OptimizationRulesAPISwaggerAsinCombination>;
  /**
   *
   * @type {OptimizationRulesAPISwaggerRuleCategory}
   * @memberof OptimizationRulesAPISwaggerGetRuleRecommendationsRequest
   */
  ruleCategoryFilter: OptimizationRulesAPISwaggerRuleCategory;
}

/**
 * Request object for getting rule recommendation.
 * @export
 * @interface OptimizationRulesAPISwaggerGetRuleRecommendationsRequestV2
 */
export interface OptimizationRulesAPISwaggerGetRuleRecommendationsRequestV2 {
  /**
   *
   * @type {OptimizationRulesAPISwaggerGetRuleRecommendationsRequestV2RuleRecommendations}
   * @memberof OptimizationRulesAPISwaggerGetRuleRecommendationsRequestV2
   */
  ruleRecommendations: OptimizationRulesAPISwaggerGetRuleRecommendationsRequestV2RuleRecommendations;
  /**
   * To retrieve the next page of results, call the same operation and specify this token in the request. If the nextToken field is empty, there are no further results.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerGetRuleRecommendationsRequestV2
   */
  nextToken?: string;
  /**
   * The maximum number of recommendations to fetch.
   * @type {number}
   * @memberof OptimizationRulesAPISwaggerGetRuleRecommendationsRequestV2
   */
  maxPageSize?: number;
}
/**
 * @type OptimizationRulesAPISwaggerGetRuleRecommendationsRequestV2RuleRecommendations
 * @export
 */
export type OptimizationRulesAPISwaggerGetRuleRecommendationsRequestV2RuleRecommendations =
  | OptimizationRulesAPISwaggerBiddingRuleRecommendations
  | OptimizationRulesAPISwaggerRecommendationEntities
  | OptimizationRulesAPISwaggerTargetingRuleRecommendations;

/**
 * Response object for GetRuleRecommendations API
 * @export
 * @interface OptimizationRulesAPISwaggerGetRuleRecommendationsResponse
 */
export interface OptimizationRulesAPISwaggerGetRuleRecommendationsResponse {
  /**
   * An enumerated success or error code for machine use.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerGetRuleRecommendationsResponse
   */
  code?: string;
  /**
   * To retrieve the next page of results, call the same operation and specify this token in the request. If the field is empty, the first page of results will be returned.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerGetRuleRecommendationsResponse
   */
  nextToken?: string;
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerRuleRecommendation>}
   * @memberof OptimizationRulesAPISwaggerGetRuleRecommendationsResponse
   */
  responses?: Array<OptimizationRulesAPISwaggerRuleRecommendation>;
}
/**
 * Response object for GetRuleRecommendations v2 API
 * @export
 * @interface OptimizationRulesAPISwaggerGetRuleRecommendationsResponseV2
 */
export interface OptimizationRulesAPISwaggerGetRuleRecommendationsResponseV2 {
  /**
   * To retrieve the next page of results, call the same operation and specify this token in the request. If the field is empty, the first page of results will be returned.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerGetRuleRecommendationsResponseV2
   */
  nextToken?: string;
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerRuleRecommendationV2>}
   * @memberof OptimizationRulesAPISwaggerGetRuleRecommendationsResponseV2
   */
  responses?: Array<OptimizationRulesAPISwaggerRuleRecommendationV2>;
}
/**
 *
 * @export
 * @interface OptimizationRulesAPISwaggerOptimizationRule
 */
export interface OptimizationRulesAPISwaggerOptimizationRule {
  /**
   *
   * @type {OptimizationRulesAPISwaggerRuleRecurrence}
   * @memberof OptimizationRulesAPISwaggerOptimizationRule
   */
  recurrence: OptimizationRulesAPISwaggerRuleRecurrence;
  /**
   *
   * @type {OptimizationRulesAPISwaggerRuleCategory}
   * @memberof OptimizationRulesAPISwaggerOptimizationRule
   */
  ruleCategory: OptimizationRulesAPISwaggerRuleCategory;
  /**
   *
   * @type {OptimizationRulesAPISwaggerRuleSubCategory}
   * @memberof OptimizationRulesAPISwaggerOptimizationRule
   */
  ruleSubCategory: OptimizationRulesAPISwaggerRuleSubCategory;
  /**
   * The rule name.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerOptimizationRule
   */
  ruleName?: string;
  /**
   *
   * @type {OptimizationRulesAPISwaggerRuleAction}
   * @memberof OptimizationRulesAPISwaggerOptimizationRule
   */
  action: OptimizationRulesAPISwaggerRuleAction;
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerRuleCondition>}
   * @memberof OptimizationRulesAPISwaggerOptimizationRule
   */
  conditions?: Array<OptimizationRulesAPISwaggerRuleCondition>;
  /**
   *
   * @type {OptimizationRulesAPISwaggerRuleStatus}
   * @memberof OptimizationRulesAPISwaggerOptimizationRule
   */
  status?: OptimizationRulesAPISwaggerRuleStatus;
  /**
   * The rule identifier.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerOptimizationRule
   */
  optimizationRuleId?: string;
}

/**
 * Response object for operations involving a single optimization rule.
 * @export
 * @interface OptimizationRulesAPISwaggerOptimizationRuleBatchSubError
 */
export interface OptimizationRulesAPISwaggerOptimizationRuleBatchSubError {
  /**
   * A human-readable description of the error.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerOptimizationRuleBatchSubError
   */
  errorMessage?: string;
}
/**
 * Object defining one reason for a failure of a optimization rule operation.
 * @export
 * @interface OptimizationRulesAPISwaggerOptimizationRuleError
 */
export interface OptimizationRulesAPISwaggerOptimizationRuleError {
  /**
   * The http status error code for machine use.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerOptimizationRuleError
   */
  code: string;
  /**
   * A human-readable description of the error.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerOptimizationRuleError
   */
  message: string;
}
/**
 * Filter on optimization rules.
 * @export
 * @interface OptimizationRulesAPISwaggerOptimizationRuleFilter
 */
export interface OptimizationRulesAPISwaggerOptimizationRuleFilter {
  /**
   *
   * @type {OptimizationRulesAPISwaggerEntityFieldFilter}
   * @memberof OptimizationRulesAPISwaggerOptimizationRuleFilter
   */
  ruleCategory?: OptimizationRulesAPISwaggerEntityFieldFilter;
  /**
   *
   * @type {OptimizationRulesAPISwaggerEntityFieldFilter}
   * @memberof OptimizationRulesAPISwaggerOptimizationRuleFilter
   */
  ruleSubCategory?: OptimizationRulesAPISwaggerEntityFieldFilter;
  /**
   *
   * @type {OptimizationRulesAPISwaggerEntityFieldFilter}
   * @memberof OptimizationRulesAPISwaggerOptimizationRuleFilter
   */
  optimizationRuleId?: OptimizationRulesAPISwaggerEntityFieldFilter;
}
/**
 *
 * @export
 * @interface OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleId
 */
export interface OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleId {
  /**
   *
   * @type {OptimizationRulesAPISwaggerRuleRecurrence}
   * @memberof OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleId
   */
  recurrence: OptimizationRulesAPISwaggerRuleRecurrence;
  /**
   *
   * @type {OptimizationRulesAPISwaggerRuleCategory}
   * @memberof OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleId
   */
  ruleCategory: OptimizationRulesAPISwaggerRuleCategory;
  /**
   *
   * @type {OptimizationRulesAPISwaggerRuleSubCategory}
   * @memberof OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleId
   */
  ruleSubCategory: OptimizationRulesAPISwaggerRuleSubCategory;
  /**
   * The rule name.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleId
   */
  ruleName?: string;
  /**
   *
   * @type {OptimizationRulesAPISwaggerRuleAction}
   * @memberof OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleId
   */
  action: OptimizationRulesAPISwaggerRuleAction;
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerRuleCondition>}
   * @memberof OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleId
   */
  conditions?: Array<OptimizationRulesAPISwaggerRuleCondition>;
  /**
   *
   * @type {OptimizationRulesAPISwaggerRuleStatus}
   * @memberof OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleId
   */
  status?: OptimizationRulesAPISwaggerRuleStatus;
}

/**
 *
 * @export
 * @interface OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleIdV2
 */
export interface OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleIdV2 {
  /**
   *
   * @type {OptimizationRulesAPISwaggerRuleRecurrence}
   * @memberof OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleIdV2
   */
  recurrence?: OptimizationRulesAPISwaggerRuleRecurrence;
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerRuleTargeting>}
   * @memberof OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleIdV2
   */
  targeting?: Array<OptimizationRulesAPISwaggerRuleTargeting>;
  /**
   *
   * @type {OptimizationRulesAPISwaggerRuleCategoryV2}
   * @memberof OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleIdV2
   */
  ruleCategory: OptimizationRulesAPISwaggerRuleCategoryV2;
  /**
   *
   * @type {OptimizationRulesAPISwaggerRuleSubCategoryV2}
   * @memberof OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleIdV2
   */
  ruleSubCategory: OptimizationRulesAPISwaggerRuleSubCategoryV2;
  /**
   * The rule name.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleIdV2
   */
  ruleName: string;
  /**
   *
   * @type {OptimizationRulesAPISwaggerRuleAction}
   * @memberof OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleIdV2
   */
  action?: OptimizationRulesAPISwaggerRuleAction;
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerRuleConditionV2>}
   * @memberof OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleIdV2
   */
  conditions?: Array<OptimizationRulesAPISwaggerRuleConditionV2>;
  /**
   *
   * @type {OptimizationRulesAPISwaggerRuleStatus}
   * @memberof OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleIdV2
   */
  status: OptimizationRulesAPISwaggerRuleStatus;
}

/**
 * Error response object.
 * @export
 * @interface OptimizationRulesAPISwaggerOptimizationRulesError
 */
export interface OptimizationRulesAPISwaggerOptimizationRulesError {
  /**
   * An enumerated error code for machine use.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerOptimizationRulesError
   */
  code?: string;
  /**
   * A human-readable description of the response.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerOptimizationRulesError
   */
  message?: string;
}
/**
 * Response object for CreateOptimizationRules and UpdateOptimizationRules API.
 * @export
 * @interface OptimizationRulesAPISwaggerOptimizationRulesResponse
 */
export interface OptimizationRulesAPISwaggerOptimizationRulesResponse {
  /**
   * An enumerated error code for machine use.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerOptimizationRulesResponse
   */
  code?: string;
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerSingleOptimizationRuleResponse>}
   * @memberof OptimizationRulesAPISwaggerOptimizationRulesResponse
   */
  responses?: Array<OptimizationRulesAPISwaggerSingleOptimizationRuleResponse>;
}
/**
 * Set this value to SAME_CAMPAIGN to generate a rule recommendation for a single campaign that contains all the product ads in the request. Set this value to DIFFERENT_CAMPAIGNS to generate rule recommendations for a set of campaigns each containing one individual product ad in the request. This attribute is ignored if entityType is not PRODUCT_AD.
 * @export
 * @enum {string}
 */

export const OptimizationRulesAPISwaggerProductAdContext = {
  SameCampaign: 'SAME_CAMPAIGN',
  DifferentCampaigns: 'DIFFERENT_CAMPAIGNS',
} as const;

export type OptimizationRulesAPISwaggerProductAdContext =
  (typeof OptimizationRulesAPISwaggerProductAdContext)[keyof typeof OptimizationRulesAPISwaggerProductAdContext];

/**
 * Name of the proof point metric.
 * @export
 * @enum {string}
 */

export const OptimizationRulesAPISwaggerProofMetricName = {
  Clicks: 'CLICKS',
} as const;

export type OptimizationRulesAPISwaggerProofMetricName =
  (typeof OptimizationRulesAPISwaggerProofMetricName)[keyof typeof OptimizationRulesAPISwaggerProofMetricName];

/**
 * Unit of the proof point metric.
 * @export
 * @enum {string}
 */

export const OptimizationRulesAPISwaggerProofMetricUnit = {
  Raw: 'RAW',
} as const;

export type OptimizationRulesAPISwaggerProofMetricUnit =
  (typeof OptimizationRulesAPISwaggerProofMetricUnit)[keyof typeof OptimizationRulesAPISwaggerProofMetricUnit];

/**
 * Represents the range of rule attribute value.
 * @export
 * @interface OptimizationRulesAPISwaggerRangeTypeRuleCriteria
 */
export interface OptimizationRulesAPISwaggerRangeTypeRuleCriteria {
  /**
   *
   * @type {number}
   * @memberof OptimizationRulesAPISwaggerRangeTypeRuleCriteria
   */
  minValue: number;
  /**
   *
   * @type {number}
   * @memberof OptimizationRulesAPISwaggerRangeTypeRuleCriteria
   */
  maxValue: number;
}
/**
 * Returns recommendations based on the recommendation entity ids.
 * @export
 * @interface OptimizationRulesAPISwaggerRecommendationEntities
 */
export interface OptimizationRulesAPISwaggerRecommendationEntities {
  /**
   *
   * @type {Array<string>}
   * @memberof OptimizationRulesAPISwaggerRecommendationEntities
   */
  recommendationIds: Array<string>;
}
/**
 * The entity type used to generate the recommendation.
 * @export
 * @enum {string}
 */

export const OptimizationRulesAPISwaggerRecommendationEntityType = {
  Campaign: 'CAMPAIGN',
  ProductAd: 'PRODUCT_AD',
  AutoAdGroup: 'AUTO_AD_GROUP',
  ManualKeywordTargetingAdGroup: 'MANUAL_KEYWORD_TARGETING_AD_GROUP',
  ManualProductTargetingAdGroup: 'MANUAL_PRODUCT_TARGETING_AD_GROUP',
} as const;

export type OptimizationRulesAPISwaggerRecommendationEntityType =
  (typeof OptimizationRulesAPISwaggerRecommendationEntityType)[keyof typeof OptimizationRulesAPISwaggerRecommendationEntityType];

/**
 *
 * @export
 * @interface OptimizationRulesAPISwaggerRecommendationReason
 */
export interface OptimizationRulesAPISwaggerRecommendationReason {
  /**
   * The reason\'s id.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerRecommendationReason
   */
  recommendationReasonId?: string;
  /**
   * The summary for the recommendation reason.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerRecommendationReason
   */
  recommendationReasonSummary?: string;
}
/**
 *
 * @export
 * @interface OptimizationRulesAPISwaggerRecommendationStatusUpdate
 */
export interface OptimizationRulesAPISwaggerRecommendationStatusUpdate {
  /**
   *
   * @type {OptimizationRulesAPISwaggerEntityFieldFilter}
   * @memberof OptimizationRulesAPISwaggerRecommendationStatusUpdate
   */
  recommendationId?: OptimizationRulesAPISwaggerEntityFieldFilter;
  /**
   *
   * @type {OptimizationRulesAPISwaggerEntityFieldFilter}
   * @memberof OptimizationRulesAPISwaggerRecommendationStatusUpdate
   */
  status?: OptimizationRulesAPISwaggerEntityFieldFilter;
}
/**
 * Filter used in search requests.
 * @export
 * @interface OptimizationRulesAPISwaggerRequestFilter
 */
export interface OptimizationRulesAPISwaggerRequestFilter {
  /**
   *
   * @type {OptimizationRulesAPISwaggerOptimizationRuleFilter}
   * @memberof OptimizationRulesAPISwaggerRequestFilter
   */
  optimizationRuleFilter?: OptimizationRulesAPISwaggerOptimizationRuleFilter;
  /**
   *
   * @type {OptimizationRulesAPISwaggerCampaignFilter}
   * @memberof OptimizationRulesAPISwaggerRequestFilter
   */
  campaignFilter?: OptimizationRulesAPISwaggerCampaignFilter;
}
/**
 * Action to be taken by the rule.
 * @export
 * @interface OptimizationRulesAPISwaggerRuleAction
 */
export interface OptimizationRulesAPISwaggerRuleAction {
  /**
   *
   * @type {OptimizationRulesAPISwaggerActionType}
   * @memberof OptimizationRulesAPISwaggerRuleAction
   */
  actionType: OptimizationRulesAPISwaggerActionType;
  /**
   *
   * @type {OptimizationRulesAPISwaggerActionDetails}
   * @memberof OptimizationRulesAPISwaggerRuleAction
   */
  actionDetails: OptimizationRulesAPISwaggerActionDetails;
}

/**
 * The action operation for the rule.
 * @export
 * @enum {string}
 */

export const OptimizationRulesAPISwaggerRuleActionOperator = {
  Increment: 'INCREMENT',
} as const;

export type OptimizationRulesAPISwaggerRuleActionOperator =
  (typeof OptimizationRulesAPISwaggerRuleActionOperator)[keyof typeof OptimizationRulesAPISwaggerRuleActionOperator];

/**
 *
 * @export
 * @interface OptimizationRulesAPISwaggerRuleAssociationDefinition
 */
export interface OptimizationRulesAPISwaggerRuleAssociationDefinition {
  /**
   *
   * @type {OptimizationRulesAPISwaggerEntityType}
   * @memberof OptimizationRulesAPISwaggerRuleAssociationDefinition
   */
  entityType: OptimizationRulesAPISwaggerEntityType;
  /**
   * The identifier of an advertising entity. Its type is defined in the entityType field.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerRuleAssociationDefinition
   */
  entityId: string;
  /**
   * The rule identifier.
   * @type {number}
   * @memberof OptimizationRulesAPISwaggerRuleAssociationDefinition
   */
  optimizationRuleId: number;
}

/**
 * The attribute of the rule.
 * @export
 * @enum {string}
 */

export const OptimizationRulesAPISwaggerRuleAttribute = {
  Roas: 'ROAS',
} as const;

export type OptimizationRulesAPISwaggerRuleAttribute =
  (typeof OptimizationRulesAPISwaggerRuleAttribute)[keyof typeof OptimizationRulesAPISwaggerRuleAttribute];

/**
 * The attribute of the rule.
 * @export
 * @enum {string}
 */

export const OptimizationRulesAPISwaggerRuleAttributeV2 = {
  Roas: 'ROAS',
  Ctr: 'CTR',
  Cvr: 'CVR',
  Cpc: 'CPC',
  Clicks: 'CLICKS',
  Orders: 'ORDERS',
  Spend: 'SPEND',
  Sales: 'SALES',
  Impressions: 'IMPRESSIONS',
  Acos: 'ACOS',
} as const;

export type OptimizationRulesAPISwaggerRuleAttributeV2 =
  (typeof OptimizationRulesAPISwaggerRuleAttributeV2)[keyof typeof OptimizationRulesAPISwaggerRuleAttributeV2];

/**
 * The type of the optimization rule.
 * @export
 * @enum {string}
 */

export const OptimizationRulesAPISwaggerRuleCategory = {
  Bid: 'BID',
} as const;

export type OptimizationRulesAPISwaggerRuleCategory =
  (typeof OptimizationRulesAPISwaggerRuleCategory)[keyof typeof OptimizationRulesAPISwaggerRuleCategory];

/**
 * The type of the optimization rule.
 * @export
 * @enum {string}
 */

export const OptimizationRulesAPISwaggerRuleCategoryV2 = {
  Bid: 'BID',
  Budget: 'BUDGET',
  Targeting: 'TARGETING',
} as const;

export type OptimizationRulesAPISwaggerRuleCategoryV2 =
  (typeof OptimizationRulesAPISwaggerRuleCategoryV2)[keyof typeof OptimizationRulesAPISwaggerRuleCategoryV2];

/**
 *
 * @export
 * @interface OptimizationRulesAPISwaggerRuleCondition
 */
export interface OptimizationRulesAPISwaggerRuleCondition {
  /**
   *
   * @type {OptimizationRulesAPISwaggerRuleCriteria}
   * @memberof OptimizationRulesAPISwaggerRuleCondition
   */
  criteria?: OptimizationRulesAPISwaggerRuleCriteria;
  /**
   *
   * @type {OptimizationRulesAPISwaggerRuleAttribute}
   * @memberof OptimizationRulesAPISwaggerRuleCondition
   */
  attributeName?: OptimizationRulesAPISwaggerRuleAttribute;
}

/**
 *
 * @export
 * @interface OptimizationRulesAPISwaggerRuleConditionV2
 */
export interface OptimizationRulesAPISwaggerRuleConditionV2 {
  /**
   *
   * @type {OptimizationRulesAPISwaggerRuleCriteria}
   * @memberof OptimizationRulesAPISwaggerRuleConditionV2
   */
  criteria?: OptimizationRulesAPISwaggerRuleCriteria;
  /**
   *
   * @type {OptimizationRulesAPISwaggerRuleAttributeV2}
   * @memberof OptimizationRulesAPISwaggerRuleConditionV2
   */
  attributeName?: OptimizationRulesAPISwaggerRuleAttributeV2;
}

/**
 * @type OptimizationRulesAPISwaggerRuleCriteria
 * @export
 */
export type OptimizationRulesAPISwaggerRuleCriteria =
  | OptimizationRulesAPISwaggerRangeTypeRuleCriteria
  | OptimizationRulesAPISwaggerValueTypeRuleCriteria;

/**
 *
 * @export
 * @interface OptimizationRulesAPISwaggerRuleRecommendation
 */
export interface OptimizationRulesAPISwaggerRuleRecommendation {
  /**
   *
   * @type {OptimizationRulesAPISwaggerRuleCategory}
   * @memberof OptimizationRulesAPISwaggerRuleRecommendation
   */
  ruleCategory: OptimizationRulesAPISwaggerRuleCategory;
  /**
   * Current value of the proof point metric.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerRuleRecommendation
   */
  proofMetricCurrentValue?: string;
  /**
   * Id of the campaign for which the rule is recommended
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerRuleRecommendation
   */
  campaignId: string;
  /**
   * Upper limit of the expected value of the proof point metric if recommendation is adopted.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerRuleRecommendation
   */
  proofMetricEstimatedValueUpperLimit?: string;
  /**
   * The combination of ASINs used to generate the recommendation.
   * @type {Array<string>}
   * @memberof OptimizationRulesAPISwaggerRuleRecommendation
   */
  asinCombination?: Array<string>;
  /**
   *
   * @type {OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleId}
   * @memberof OptimizationRulesAPISwaggerRuleRecommendation
   */
  recommendation: OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleId;
  /**
   * Unique id for the recommendation.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerRuleRecommendation
   */
  recommendationId: string;
  /**
   *
   * @type {OptimizationRulesAPISwaggerRecommendationReason}
   * @memberof OptimizationRulesAPISwaggerRuleRecommendation
   */
  recommendationReason?: OptimizationRulesAPISwaggerRecommendationReason;
  /**
   * Id of the Advertiser to whom campaign belongs.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerRuleRecommendation
   */
  advertiserId?: string;
  /**
   * Marketplace of the recommendation.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerRuleRecommendation
   */
  marketplaceId?: string;
  /**
   *
   * @type {OptimizationRulesAPISwaggerRuleSubCategory}
   * @memberof OptimizationRulesAPISwaggerRuleRecommendation
   */
  ruleSubCategory: OptimizationRulesAPISwaggerRuleSubCategory;
  /**
   * Lower limit of the expected value of the proof point metric if recommendation is adopted.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerRuleRecommendation
   */
  proofMetricEstimatedValueLowerLimit?: string;
  /**
   * Unique id for the rule if it already exists
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerRuleRecommendation
   */
  optimizationRuleId?: string;
  /**
   * Name of the campaign for which the rule is recommended.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerRuleRecommendation
   */
  campaignName?: string;
  /**
   * Name of the proof point metric.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerRuleRecommendation
   */
  proofMetricName?: string;
  /**
   * Unit of the proof point metric.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerRuleRecommendation
   */
  proofMetricUnit?: string;
}

/**
 *
 * @export
 * @interface OptimizationRulesAPISwaggerRuleRecommendationV2
 */
export interface OptimizationRulesAPISwaggerRuleRecommendationV2 {
  /**
   *
   * @type {OptimizationRulesAPISwaggerRuleCategoryV2}
   * @memberof OptimizationRulesAPISwaggerRuleRecommendationV2
   */
  ruleCategory: OptimizationRulesAPISwaggerRuleCategoryV2;
  /**
   * The entities used to make the recommendation.
   * @type {Array<OptimizationRulesAPISwaggerEntityInformation>}
   * @memberof OptimizationRulesAPISwaggerRuleRecommendationV2
   */
  entities: Array<OptimizationRulesAPISwaggerEntityInformation>;
  /**
   * Current value of the proof point metric.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerRuleRecommendationV2
   */
  proofMetricCurrentValue?: string;
  /**
   *
   * @type {OptimizationRulesAPISwaggerRuleSubCategoryV2}
   * @memberof OptimizationRulesAPISwaggerRuleRecommendationV2
   */
  ruleSubCategory: OptimizationRulesAPISwaggerRuleSubCategoryV2;
  /**
   * Lower limit of the expected value of the proof point metric if recommendation is adopted.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerRuleRecommendationV2
   */
  proofMetricEstimatedValueLowerLimit?: string;
  /**
   * Upper limit of the expected value of the proof point metric if recommendation is adopted.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerRuleRecommendationV2
   */
  proofMetricEstimatedValueUpperLimit?: string;
  /**
   *
   * @type {OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleIdV2}
   * @memberof OptimizationRulesAPISwaggerRuleRecommendationV2
   */
  recommendation: OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleIdV2;
  /**
   * Unique id for the recommendation.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerRuleRecommendationV2
   */
  recommendationId: string;
  /**
   * Unique id for the rule if it already exists
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerRuleRecommendationV2
   */
  optimizationRuleId?: string;
  /**
   *
   * @type {OptimizationRulesAPISwaggerRecommendationReason}
   * @memberof OptimizationRulesAPISwaggerRuleRecommendationV2
   */
  recommendationReason?: OptimizationRulesAPISwaggerRecommendationReason;
  /**
   *
   * @type {OptimizationRulesAPISwaggerProofMetricName}
   * @memberof OptimizationRulesAPISwaggerRuleRecommendationV2
   */
  proofMetricName?: OptimizationRulesAPISwaggerProofMetricName;
  /**
   *
   * @type {OptimizationRulesAPISwaggerProofMetricUnit}
   * @memberof OptimizationRulesAPISwaggerRuleRecommendationV2
   */
  proofMetricUnit?: OptimizationRulesAPISwaggerProofMetricUnit;
}

/**
 * The recurrence of the optimization rule application.
 * @export
 * @interface OptimizationRulesAPISwaggerRuleRecurrence
 */
export interface OptimizationRulesAPISwaggerRuleRecurrence {
  /**
   *
   * @type {OptimizationRulesAPISwaggerDuration}
   * @memberof OptimizationRulesAPISwaggerRuleRecurrence
   */
  duration: OptimizationRulesAPISwaggerDuration;
  /**
   * List of times of the day.
   * @type {Array<OptimizationRulesAPISwaggerRuleRecurrenceTimesOfDayInner>}
   * @memberof OptimizationRulesAPISwaggerRuleRecurrence
   */
  timesOfDay?: Array<OptimizationRulesAPISwaggerRuleRecurrenceTimesOfDayInner>;
  /**
   *
   * @type {OptimizationRulesAPISwaggerRuleRecurrenceType}
   * @memberof OptimizationRulesAPISwaggerRuleRecurrence
   */
  type: OptimizationRulesAPISwaggerRuleRecurrenceType;
  /**
   * A list of days of the week.
   * @type {Array<OptimizationRulesAPISwaggerDayOfTheWeek>}
   * @memberof OptimizationRulesAPISwaggerRuleRecurrence
   */
  daysOfWeek?: Array<OptimizationRulesAPISwaggerDayOfTheWeek>;
}

/**
 * List of times of the day.
 * @export
 * @interface OptimizationRulesAPISwaggerRuleRecurrenceTimesOfDayInner
 */
export interface OptimizationRulesAPISwaggerRuleRecurrenceTimesOfDayInner {
  /**
   * Time of the day in HH:MM.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerRuleRecurrenceTimesOfDayInner
   */
  startTime: string;
  /**
   * Time of the day in HH:MM.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerRuleRecurrenceTimesOfDayInner
   */
  endTime: string;
}
/**
 * The frequency of the optimization rule application.
 * @export
 * @enum {string}
 */

export const OptimizationRulesAPISwaggerRuleRecurrenceType = {
  Daily: 'DAILY',
  Weekly: 'WEEKLY',
} as const;

export type OptimizationRulesAPISwaggerRuleRecurrenceType =
  (typeof OptimizationRulesAPISwaggerRuleRecurrenceType)[keyof typeof OptimizationRulesAPISwaggerRuleRecurrenceType];

/**
 * The status of a rule. Only ENABLED and PAUSED are accepted in requests.
 * @export
 * @enum {string}
 */

export const OptimizationRulesAPISwaggerRuleStatus = {
  Scheduled: 'SCHEDULED',
  Enabled: 'ENABLED',
  Paused: 'PAUSED',
  Ended: 'ENDED',
} as const;

export type OptimizationRulesAPISwaggerRuleStatus =
  (typeof OptimizationRulesAPISwaggerRuleStatus)[keyof typeof OptimizationRulesAPISwaggerRuleStatus];

/**
 * The sub-category of the optimization rule.
 * @export
 * @enum {string}
 */

export const OptimizationRulesAPISwaggerRuleSubCategory = {
  Schedule: 'SCHEDULE',
} as const;

export type OptimizationRulesAPISwaggerRuleSubCategory =
  (typeof OptimizationRulesAPISwaggerRuleSubCategory)[keyof typeof OptimizationRulesAPISwaggerRuleSubCategory];

/**
 * The sub-category of the optimization rule.
 * @export
 * @enum {string}
 */

export const OptimizationRulesAPISwaggerRuleSubCategoryV2 = {
  Schedule: 'SCHEDULE',
  Performance: 'PERFORMANCE',
} as const;

export type OptimizationRulesAPISwaggerRuleSubCategoryV2 =
  (typeof OptimizationRulesAPISwaggerRuleSubCategoryV2)[keyof typeof OptimizationRulesAPISwaggerRuleSubCategoryV2];

/**
 *
 * @export
 * @interface OptimizationRulesAPISwaggerRuleTargeting
 */
export interface OptimizationRulesAPISwaggerRuleTargeting {
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerExpressionType>}
   * @memberof OptimizationRulesAPISwaggerRuleTargeting
   */
  expressionTypes: Array<OptimizationRulesAPISwaggerExpressionType>;
  /**
   *
   * @type {OptimizationRulesAPISwaggerTargetingType}
   * @memberof OptimizationRulesAPISwaggerRuleTargeting
   */
  targetingType: OptimizationRulesAPISwaggerTargetingType;
  /**
   * The number of days of data to look back on for the rule.
   * @type {number}
   * @memberof OptimizationRulesAPISwaggerRuleTargeting
   */
  lookbackDays: number;
}

/**
 * Request body for getting optimization rule associations.
 * @export
 * @interface OptimizationRulesAPISwaggerSearchOptimizationRuleAssociationsRequest
 */
export interface OptimizationRulesAPISwaggerSearchOptimizationRuleAssociationsRequest {
  /**
   * Sets a limit on the number of results returned. Defaults to 50. Maximum limit of maxResults is 1000.
   * @type {number}
   * @memberof OptimizationRulesAPISwaggerSearchOptimizationRuleAssociationsRequest
   */
  maxResults?: number;
  /**
   * To retrieve the next page of results, call the same operation and specify this token in the request. If the nextToken field is empty, there are no further results.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerSearchOptimizationRuleAssociationsRequest
   */
  nextToken?: string;
  /**
   *
   * @type {OptimizationRulesAPISwaggerEntityFieldFilter}
   * @memberof OptimizationRulesAPISwaggerSearchOptimizationRuleAssociationsRequest
   */
  optimizationRuleFilter?: OptimizationRulesAPISwaggerEntityFieldFilter;
}
/**
 * Response object for searching optimization rules associations.
 * @export
 * @interface OptimizationRulesAPISwaggerSearchOptimizationRuleAssociationsResponse
 */
export interface OptimizationRulesAPISwaggerSearchOptimizationRuleAssociationsResponse {
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerSearchOptimizationRuleAssociationsResponseItem>}
   * @memberof OptimizationRulesAPISwaggerSearchOptimizationRuleAssociationsResponse
   */
  associations: Array<OptimizationRulesAPISwaggerSearchOptimizationRuleAssociationsResponseItem>;
  /**
   * To retrieve the next page of results, call the same operation and specify this token in the request. If the field is empty, the first page of results will be returned.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerSearchOptimizationRuleAssociationsResponse
   */
  nextToken?: string;
}
/**
 *
 * @export
 * @interface OptimizationRulesAPISwaggerSearchOptimizationRuleAssociationsResponseItem
 */
export interface OptimizationRulesAPISwaggerSearchOptimizationRuleAssociationsResponseItem {
  /**
   *
   * @type {OptimizationRulesAPISwaggerEntityType}
   * @memberof OptimizationRulesAPISwaggerSearchOptimizationRuleAssociationsResponseItem
   */
  entityType: OptimizationRulesAPISwaggerEntityType;
  /**
   * The name of the advertising entity in the association.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerSearchOptimizationRuleAssociationsResponseItem
   */
  entityName: string;
  /**
   * The id that uniquely identifies the advertising entity in the association.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerSearchOptimizationRuleAssociationsResponseItem
   */
  entityId: string;
  /**
   * The id that uniquely identifies the optimization rule in the association.
   * @type {number}
   * @memberof OptimizationRulesAPISwaggerSearchOptimizationRuleAssociationsResponseItem
   */
  optimizationRuleId: number;
}

/**
 * Request object for searching or getting optimization rules.
 * @export
 * @interface OptimizationRulesAPISwaggerSearchOptimizationRulesRequest
 */
export interface OptimizationRulesAPISwaggerSearchOptimizationRulesRequest {
  /**
   *
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerSearchOptimizationRulesRequest
   */
  nextToken?: string;
  /**
   *
   * @type {OptimizationRulesAPISwaggerOptimizationRuleFilter}
   * @memberof OptimizationRulesAPISwaggerSearchOptimizationRulesRequest
   */
  optimizationRuleFilter?: OptimizationRulesAPISwaggerOptimizationRuleFilter;
  /**
   *
   * @type {number}
   * @memberof OptimizationRulesAPISwaggerSearchOptimizationRulesRequest
   */
  pageSize?: number;
  /**
   *
   * @type {OptimizationRulesAPISwaggerCampaignFilter}
   * @memberof OptimizationRulesAPISwaggerSearchOptimizationRulesRequest
   */
  campaignFilter?: OptimizationRulesAPISwaggerCampaignFilter;
}
/**
 *
 * @export
 * @interface OptimizationRulesAPISwaggerSearchOptimizationRulesResponse
 */
export interface OptimizationRulesAPISwaggerSearchOptimizationRulesResponse {
  /**
   * An enumerated error code for machine use.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerSearchOptimizationRulesResponse
   */
  code?: string;
  /**
   *
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerSearchOptimizationRulesResponse
   */
  nextToken?: string;
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerOptimizationRule>}
   * @memberof OptimizationRulesAPISwaggerSearchOptimizationRulesResponse
   */
  optimizationRules?: Array<OptimizationRulesAPISwaggerOptimizationRule>;
}
/**
 * Object that describes the association status of an optimization rule and a single campaign.
 * @export
 * @interface OptimizationRulesAPISwaggerSingleCampaignRuleAssociationStatus
 */
export interface OptimizationRulesAPISwaggerSingleCampaignRuleAssociationStatus {
  /**
   *
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerSingleCampaignRuleAssociationStatus
   */
  ruleState?: string;
  /**
   * Sp campaign identifier.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerSingleCampaignRuleAssociationStatus
   */
  campaignId?: string;
  /**
   * The rule identifier.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerSingleCampaignRuleAssociationStatus
   */
  optimizationRuleId?: string;
  /**
   *
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerSingleCampaignRuleAssociationStatus
   */
  notificationString?: string;
}
/**
 * Response object for operations involving associating a single optimization rule.
 * @export
 * @interface OptimizationRulesAPISwaggerSingleOptimizationRuleAssociationResponse
 */
export interface OptimizationRulesAPISwaggerSingleOptimizationRuleAssociationResponse {
  /**
   * An enumerated success or error code for machine use.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerSingleOptimizationRuleAssociationResponse
   */
  code?: string;
  /**
   * A human-readable description of the error, if unsuccessful.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerSingleOptimizationRuleAssociationResponse
   */
  details?: string;
  /**
   * The rule identifier.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerSingleOptimizationRuleAssociationResponse
   */
  optimizationRuleId?: string;
}
/**
 * Response object for operations involving a single optimization rule.
 * @export
 * @interface OptimizationRulesAPISwaggerSingleOptimizationRuleResponse
 */
export interface OptimizationRulesAPISwaggerSingleOptimizationRuleResponse {
  /**
   * An enumerated success or error code for machine use.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerSingleOptimizationRuleResponse
   */
  code?: string;
  /**
   *
   * @type {OptimizationRulesAPISwaggerOptimizationRule}
   * @memberof OptimizationRulesAPISwaggerSingleOptimizationRuleResponse
   */
  optimizationRule?: OptimizationRulesAPISwaggerOptimizationRule;
  /**
   * A human-readable description of the error, if unsuccessful.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerSingleOptimizationRuleResponse
   */
  details?: string;
}
/**
 * The entity type used to generate the targeting rule recommendation.
 * @export
 * @enum {string}
 */

export const OptimizationRulesAPISwaggerTargetingRuleEntityType = {
  ProductAd: 'PRODUCT_AD',
} as const;

export type OptimizationRulesAPISwaggerTargetingRuleEntityType =
  (typeof OptimizationRulesAPISwaggerTargetingRuleEntityType)[keyof typeof OptimizationRulesAPISwaggerTargetingRuleEntityType];

/**
 * Returns targeting rule recommendation for the provided entities.
 * @export
 * @interface OptimizationRulesAPISwaggerTargetingRuleRecommendations
 */
export interface OptimizationRulesAPISwaggerTargetingRuleRecommendations {
  /**
   *
   * @type {OptimizationRulesAPISwaggerProductAdContext}
   * @memberof OptimizationRulesAPISwaggerTargetingRuleRecommendations
   */
  productAdContext: OptimizationRulesAPISwaggerProductAdContext;
  /**
   *
   * @type {OptimizationRulesAPISwaggerTargetingRuleEntityType}
   * @memberof OptimizationRulesAPISwaggerTargetingRuleRecommendations
   */
  entityType: OptimizationRulesAPISwaggerTargetingRuleEntityType;
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerTargetingType>}
   * @memberof OptimizationRulesAPISwaggerTargetingRuleRecommendations
   */
  targetingTypes?: Array<OptimizationRulesAPISwaggerTargetingType>;
  /**
   *
   * @type {Array<string>}
   * @memberof OptimizationRulesAPISwaggerTargetingRuleRecommendations
   */
  entityIds: Array<string>;
  /**
   *
   * @type {number}
   * @memberof OptimizationRulesAPISwaggerTargetingRuleRecommendations
   */
  defaultBid: number;
}

/**
 * The type of targets for the rule.
 * @export
 * @enum {string}
 */

export const OptimizationRulesAPISwaggerTargetingType = {
  Product: 'PRODUCT',
  Keyword: 'KEYWORD',
} as const;

export type OptimizationRulesAPISwaggerTargetingType =
  (typeof OptimizationRulesAPISwaggerTargetingType)[keyof typeof OptimizationRulesAPISwaggerTargetingType];

/**
 * Request object for updating one or multiple optimization rules.
 * @export
 * @interface OptimizationRulesAPISwaggerUpdateOptimizationRulesRequest
 */
export interface OptimizationRulesAPISwaggerUpdateOptimizationRulesRequest {
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerOptimizationRule>}
   * @memberof OptimizationRulesAPISwaggerUpdateOptimizationRulesRequest
   */
  optimizationRules: Array<OptimizationRulesAPISwaggerOptimizationRule>;
}
/**
 * Response object for UpdateOptimizationRules API.
 * @export
 * @interface OptimizationRulesAPISwaggerUpdateOptimizationRulesResponse
 */
export interface OptimizationRulesAPISwaggerUpdateOptimizationRulesResponse {
  /**
   * An enumerated error code for machine use.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerUpdateOptimizationRulesResponse
   */
  code?: string;
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerSingleOptimizationRuleResponse>}
   * @memberof OptimizationRulesAPISwaggerUpdateOptimizationRulesResponse
   */
  responses?: Array<OptimizationRulesAPISwaggerSingleOptimizationRuleResponse>;
}
/**
 * Request object for getting rule recommendation. All the filters in the request are used in conjunction with one another.
 * @export
 * @interface OptimizationRulesAPISwaggerUpdateRuleRecommendationStatusRequest
 */
export interface OptimizationRulesAPISwaggerUpdateRuleRecommendationStatusRequest {
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerRecommendationStatusUpdate>}
   * @memberof OptimizationRulesAPISwaggerUpdateRuleRecommendationStatusRequest
   */
  recommendations?: Array<OptimizationRulesAPISwaggerRecommendationStatusUpdate>;
}
/**
 * Response object for UpdateRuleRecommendationStatus API.
 * @export
 * @interface OptimizationRulesAPISwaggerUpdateRuleRecommendationStatusResponse
 */
export interface OptimizationRulesAPISwaggerUpdateRuleRecommendationStatusResponse {
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerUpdateRuleRecommendationStatusResponseSuccessItem>}
   * @memberof OptimizationRulesAPISwaggerUpdateRuleRecommendationStatusResponse
   */
  success?: Array<OptimizationRulesAPISwaggerUpdateRuleRecommendationStatusResponseSuccessItem>;
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerUpdateRuleRecommendationStatusResponseErrorItem>}
   * @memberof OptimizationRulesAPISwaggerUpdateRuleRecommendationStatusResponse
   */
  error?: Array<OptimizationRulesAPISwaggerUpdateRuleRecommendationStatusResponseErrorItem>;
}
/**
 *
 * @export
 * @interface OptimizationRulesAPISwaggerUpdateRuleRecommendationStatusResponseErrorItem
 */
export interface OptimizationRulesAPISwaggerUpdateRuleRecommendationStatusResponseErrorItem {
  /**
   * Index of the recommendation id in the request.
   * @type {number}
   * @memberof OptimizationRulesAPISwaggerUpdateRuleRecommendationStatusResponseErrorItem
   */
  index: number;
  /**
   * The id that uniquely identifies the recommendation rule that failed to be updated.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerUpdateRuleRecommendationStatusResponseErrorItem
   */
  recommendationId: string;
  /**
   * The http status error code for machine use.
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerUpdateRuleRecommendationStatusResponseErrorItem
   */
  httpStatusCode: string;
  /**
   *
   * @type {Array<OptimizationRulesAPISwaggerOptimizationRuleBatchSubError>}
   * @memberof OptimizationRulesAPISwaggerUpdateRuleRecommendationStatusResponseErrorItem
   */
  subErrors: Array<OptimizationRulesAPISwaggerOptimizationRuleBatchSubError>;
}
/**
 *
 * @export
 * @interface OptimizationRulesAPISwaggerUpdateRuleRecommendationStatusResponseSuccessItem
 */
export interface OptimizationRulesAPISwaggerUpdateRuleRecommendationStatusResponseSuccessItem {
  /**
   * Index of the recommendation id in the request.
   * @type {number}
   * @memberof OptimizationRulesAPISwaggerUpdateRuleRecommendationStatusResponseSuccessItem
   */
  index: number;
  /**
   * The id that uniquely identifies the recommendation that was updated successfully
   * @type {string}
   * @memberof OptimizationRulesAPISwaggerUpdateRuleRecommendationStatusResponseSuccessItem
   */
  recommendationId: string;
}
/**
 * Represents a criteria by comparing with the rule attribute value.
 * @export
 * @interface OptimizationRulesAPISwaggerValueTypeRuleCriteria
 */
export interface OptimizationRulesAPISwaggerValueTypeRuleCriteria {
  /**
   *
   * @type {OptimizationRulesAPISwaggerComparisonOperator}
   * @memberof OptimizationRulesAPISwaggerValueTypeRuleCriteria
   */
  comparisonOperator: OptimizationRulesAPISwaggerComparisonOperator;
  /**
   *
   * @type {number}
   * @memberof OptimizationRulesAPISwaggerValueTypeRuleCriteria
   */
  value: number;
}

/**
 *
 * @export
 * @interface OtherError
 */
export interface OtherError {
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof OtherError
   */
  otherError: SponsoredProductsOtherError;
}
/**
 *
 * @export
 * @interface ParentEntityError
 */
export interface ParentEntityError {
  /**
   *
   * @type {SponsoredProductsParentEntityError}
   * @memberof ParentEntityError
   */
  parentEntityError: SponsoredProductsParentEntityError;
}
/**
 *
 * @export
 * @interface PerformanceMeasureCondition
 */
export interface PerformanceMeasureCondition {
  /**
   *
   * @type {PerformanceMetric}
   * @memberof PerformanceMeasureCondition
   */
  metricName: PerformanceMetric;
  /**
   *
   * @type {ComparisonOperator}
   * @memberof PerformanceMeasureCondition
   */
  comparisonOperator: ComparisonOperator;
  /**
   * The performance threshold value.
   * @type {number}
   * @memberof PerformanceMeasureCondition
   */
  threshold: number;
}

/**
 *
 * @export
 * @interface PerformanceMeasureConditionForSB
 */
export interface PerformanceMeasureConditionForSB {
  /**
   *
   * @type {PerformanceMetricForSB}
   * @memberof PerformanceMeasureConditionForSB
   */
  metricName: PerformanceMetricForSB;
  /**
   *
   * @type {ComparisonOperator}
   * @memberof PerformanceMeasureConditionForSB
   */
  comparisonOperator: ComparisonOperator;
  /**
   * The performance threshold value.
   * @type {number}
   * @memberof PerformanceMeasureConditionForSB
   */
  threshold: number;
}

/**
 * The advertising performance metric.
 * @export
 * @enum {string}
 */

export const PerformanceMetric = {
  Acos: 'ACOS',
  Ctr: 'CTR',
  Cvr: 'CVR',
  Roas: 'ROAS',
} as const;

export type PerformanceMetric = (typeof PerformanceMetric)[keyof typeof PerformanceMetric];

/**
 * The advertising performance metric.
 * @export
 * @enum {string}
 */

export const PerformanceMetricForSB = {
  Is: 'IS',
  Ntb: 'NTB',
  Roas: 'ROAS',
} as const;

export type PerformanceMetricForSB = (typeof PerformanceMetricForSB)[keyof typeof PerformanceMetricForSB];

/**
 * Specifies bid adjustments based on the placement location. Use `PLACEMENT_TOP` for the top of the search page. Use `PLACEMENT_REST_OF_SEARCH` for the rest of the search page. Use `PLACEMENT_PRODUCT_PAGE` for a product page.
 * @export
 * @interface PlacementAdjustment
 */
export interface PlacementAdjustment {
  /**
   *
   * @type {string}
   * @memberof PlacementAdjustment
   */
  predicate?: PlacementAdjustmentPredicateEnum;
  /**
   *
   * @type {number}
   * @memberof PlacementAdjustment
   */
  percentage?: number;
}

export const PlacementAdjustmentPredicateEnum = {
  PlacementTop: 'PLACEMENT_TOP',
  PlacementRestOfSearch: 'PLACEMENT_REST_OF_SEARCH',
  PlacementProductPage: 'PLACEMENT_PRODUCT_PAGE',
} as const;

export type PlacementAdjustmentPredicateEnum = (typeof PlacementAdjustmentPredicateEnum)[keyof typeof PlacementAdjustmentPredicateEnum];

/**
 * Contains suggested recommendation for a placement bid adjustment.
 * @export
 * @interface PlacementBiddingRecommendation
 */
export interface PlacementBiddingRecommendation {
  /**
   * Upper bound of the estimated incremental impressions that could be gained if this optimization used
   * @type {number}
   * @memberof PlacementBiddingRecommendation
   */
  incrementalImpressionsUpperPercent?: number;
  /**
   * The suggested bid adjustment percent value for this placement type.
   * @type {number}
   * @memberof PlacementBiddingRecommendation
   */
  suggestedBidAdjustment?: number;
  /**
   * The placement type.
   * @type {string}
   * @memberof PlacementBiddingRecommendation
   */
  placementType?: PlacementBiddingRecommendationPlacementTypeEnum;
  /**
   * Type of suggested action.
   * @type {string}
   * @memberof PlacementBiddingRecommendation
   */
  action?: PlacementBiddingRecommendationActionEnum;
  /**
   * Lower bound of the estimated incremental impressions that could be gained if this optimization used
   * @type {number}
   * @memberof PlacementBiddingRecommendation
   */
  incrementalImpressionsLowerPercent?: number;
}

export const PlacementBiddingRecommendationPlacementTypeEnum = {
  PlacementTop: 'PLACEMENT_TOP',
  PlacementProductPage: 'PLACEMENT_PRODUCT_PAGE',
  PlacementRestOfSearch: 'PLACEMENT_REST_OF_SEARCH',
} as const;

export type PlacementBiddingRecommendationPlacementTypeEnum =
  (typeof PlacementBiddingRecommendationPlacementTypeEnum)[keyof typeof PlacementBiddingRecommendationPlacementTypeEnum];
export const PlacementBiddingRecommendationActionEnum = {
  Add: 'ADD',
  Remove: 'REMOVE',
  Increase: 'INCREASE',
  Decrease: 'DECREASE',
} as const;

export type PlacementBiddingRecommendationActionEnum =
  (typeof PlacementBiddingRecommendationActionEnum)[keyof typeof PlacementBiddingRecommendationActionEnum];

/**
 * A range of prices. We use this to retrieve the number of targetable ASINs that falls within this price range.
 * @export
 * @interface PriceRange
 */
export interface PriceRange {
  /**
   *
   * @type {number}
   * @memberof PriceRange
   */
  min?: number;
  /**
   *
   * @type {number}
   * @memberof PriceRange
   */
  max?: number;
}
/**
 *
 * @export
 * @interface ProductDetails
 */
export interface ProductDetails {
  /**
   *
   * @type {ProductDetailsGlobalStoreSetting}
   * @memberof ProductDetails
   */
  globalStoreSetting?: ProductDetailsGlobalStoreSetting;
  /**
   * The identifier of the product.
   * @type {string}
   * @memberof ProductDetails
   */
  asin?: string;
}
/**
 * This denotes the fields related to [GlobalStore Program](https://sellercentral.amazon.com/help/hub/reference/external/202139180).
 * @export
 * @interface ProductDetailsGlobalStoreSetting
 */
export interface ProductDetailsGlobalStoreSetting {
  /**
   * Country code of source marketplace where seller has listed the product. Possible source country codes include US, UK, DE, JP, and AE.
   * @type {string}
   * @memberof ProductDetailsGlobalStoreSetting
   */
  catalogSourceCountryCode?: string;
}
/**
 * Recommended asin and related information.
 * @export
 * @interface ProductRecommendation
 */
export interface ProductRecommendation {
  /**
   * List of themes associated with this recommended ASIN.
   * @type {Array<string>}
   * @memberof ProductRecommendation
   */
  themes?: Array<string>;
  /**
   * Recommended ASIN
   * @type {string}
   * @memberof ProductRecommendation
   */
  recommendedAsin?: string;
}
/**
 * Product recommendations supplemented with relevant information.
 * @export
 * @interface ProductRecommendationsByASIN
 */
export interface ProductRecommendationsByASIN {
  /**
   * An identifier to fetch next set of `ProductRecommendation` records in the result set if available. This will be null when at the end of result set.
   * @type {string}
   * @memberof ProductRecommendationsByASIN
   */
  nextCursor?: string;
  /**
   * Optional parameter that links to the previous result set served. This parameter will be null on the first request.
   * @type {string}
   * @memberof ProductRecommendationsByASIN
   */
  previousCursor?: string;
  /**
   * An array of `ProductRecommendation` objects.
   * @type {Array<ProductRecommendation>}
   * @memberof ProductRecommendationsByASIN
   */
  recommendations?: Array<ProductRecommendation>;
}
/**
 * Product recommendations grouped by theme attribute.
 * @export
 * @interface ProductRecommendationsByTheme
 */
export interface ProductRecommendationsByTheme {
  /**
   * An identifier to fetch next set of `ThemeRecommendation` records in the result set if available. This will be null when at the end of result set.
   * @type {string}
   * @memberof ProductRecommendationsByTheme
   */
  nextCursor?: string;
  /**
   * Optional parameter that links to the previous result set served to the requester.
   * @type {string}
   * @memberof ProductRecommendationsByTheme
   */
  previousCursor?: string;
  /**
   * An array of `ThemeRecommendation` objects
   * @type {Array<ThemeRecommendation>}
   * @memberof ProductRecommendationsByTheme
   */
  recommendations?: Array<ThemeRecommendation>;
}
/**
 *
 * @export
 * @interface ProductTarget
 */
export interface ProductTarget {
  /**
   *
   * @type {SponsoredProductsCreateProductTarget}
   * @memberof ProductTarget
   */
  productTarget: SponsoredProductsCreateProductTarget;
}
/**
 *
 * @export
 * @interface ProductTargetDetailsV2
 */
export interface ProductTargetDetailsV2 {
  /**
   *
   * @type {SponsoredProductsProductTargetV2}
   * @memberof ProductTargetDetailsV2
   */
  productTargetDetailsV2: SponsoredProductsProductTargetV2;
}
/**
 *
 * @export
 * @interface RMSBudgetRule
 */
export interface RMSBudgetRule {
  /**
   *
   * @type {State}
   * @memberof RMSBudgetRule
   */
  ruleState?: State;
  /**
   * Epoch time of budget rule update. Read-only.
   * @type {number}
   * @memberof RMSBudgetRule
   */
  lastUpdatedDate?: number;
  /**
   * Epoch time of budget rule creation. Read-only.
   * @type {number}
   * @memberof RMSBudgetRule
   */
  createdDate?: number;
  /**
   *
   * @type {RMSBudgetRuleDetails}
   * @memberof RMSBudgetRule
   */
  ruleDetails?: RMSBudgetRuleDetails;
  /**
   * The budget rule identifier.
   * @type {string}
   * @memberof RMSBudgetRule
   */
  ruleId: string;
  /**
   * The budget rule status. Read-only.
   * @type {string}
   * @memberof RMSBudgetRule
   */
  ruleStatus?: string;
}

/**
 * Object representing details of a budget rule for RMS campaign
 * @export
 * @interface RMSBudgetRuleDetails
 */
export interface RMSBudgetRuleDetails {
  /**
   *
   * @type {RuleDuration}
   * @memberof RMSBudgetRuleDetails
   */
  duration?: RuleDuration;
  /**
   *
   * @type {Recurrence}
   * @memberof RMSBudgetRuleDetails
   */
  recurrence?: Recurrence;
  /**
   *
   * @type {RMSRuleType}
   * @memberof RMSBudgetRuleDetails
   */
  ruleType?: RMSRuleType;
  /**
   *
   * @type {BudgetIncreaseBy}
   * @memberof RMSBudgetRuleDetails
   */
  budgetIncreaseBy?: BudgetIncreaseBy;
  /**
   * The budget rule name. Required to be unique within a campaign.
   * @type {string}
   * @memberof RMSBudgetRuleDetails
   */
  name?: string;
  /**
   *
   * @type {PerformanceMeasureCondition}
   * @memberof RMSBudgetRuleDetails
   */
  performanceMeasureCondition?: PerformanceMeasureCondition;
}

/**
 *
 * @export
 * @interface RMSGetAssociatedCampaignsResponse
 */
export interface RMSGetAssociatedCampaignsResponse {
  /**
   * A list of campaigns that are associated to this budget rule.
   * @type {Array<AssociatedCampaign>}
   * @memberof RMSGetAssociatedCampaignsResponse
   */
  associatedCampaigns?: Array<AssociatedCampaign>;
  /**
   * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
   * @type {string}
   * @memberof RMSGetAssociatedCampaignsResponse
   */
  nextToken?: string;
}
/**
 *
 * @export
 * @interface RMSListAssociatedBudgetRulesResponse
 */
export interface RMSListAssociatedBudgetRulesResponse {
  /**
   * A list of associated budget rules.
   * @type {Array<RMSBudgetRule>}
   * @memberof RMSListAssociatedBudgetRulesResponse
   */
  associatedRules?: Array<RMSBudgetRule>;
}
/**
 * The type of budget rule. SCHEDULE: A budget rule based on a start and end date. PERFORMANCE: A budget rule based on advertising performance criteria.
 * @export
 * @enum {string}
 */

export const RMSRuleType = {
  Schedule: 'SCHEDULE',
  Performance: 'PERFORMANCE',
} as const;

export type RMSRuleType = (typeof RMSRuleType)[keyof typeof RMSRuleType];

/**
 *
 * @export
 * @interface Range
 */
export interface Range {
  /**
   *
   * @type {number}
   * @memberof Range
   */
  min?: number;
  /**
   *
   * @type {number}
   * @memberof Range
   */
  max?: number;
}
/**
 *
 * @export
 * @interface RangeError
 */
export interface RangeError {
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof RangeError
   */
  rangeError: SponsoredProductsRangeError;
}
/**
 * Describes lower and upper bounds of the range. <br> Note: This object is nullable
 * @export
 * @interface RangeMetricValue
 */
export interface RangeMetricValue {
  /**
   *
   * @type {number}
   * @memberof RangeMetricValue
   */
  lower?: number;
  /**
   *
   * @type {number}
   * @memberof RangeMetricValue
   */
  upper?: number;
}
/**
 * This request type is used to retrieve recommended keyword targets for an existing ad group. Set the recommendationType to KEYWORDS_FOR_ADGROUP to use this request type.
 * @export
 * @interface RankedKeywordTargetsForAdGroupRequest
 */
export interface RankedKeywordTargetsForAdGroupRequest {
  /**
   * The identifier of the campaign
   * @type {string}
   * @memberof RankedKeywordTargetsForAdGroupRequest
   */
  campaignId: string;
  /**
   * The recommendationType to retrieve recommended keyword targets for an existing ad group.
   * @type {string}
   * @memberof RankedKeywordTargetsForAdGroupRequest
   */
  recommendationType: RankedKeywordTargetsForAdGroupRequestRecommendationTypeEnum;
  /**
   * Set this parameter to false if you do not want to retrieve bid suggestions for your keyword targets. Defaults to true.
   * @type {boolean}
   * @memberof RankedKeywordTargetsForAdGroupRequest
   */
  bidsEnabled?: boolean;
  /**
   * The identifier of the ad group
   * @type {string}
   * @memberof RankedKeywordTargetsForAdGroupRequest
   */
  adGroupId: string;
  /**
   * A list of targets that need to be ranked
   * @type {Array<KeywordTarget>}
   * @memberof RankedKeywordTargetsForAdGroupRequest
   */
  targets?: Array<KeywordTarget>;
  /**
   * The max size of recommended target. Set it to 0 if you only want to rank user-defined keywords.
   * @type {number}
   * @memberof RankedKeywordTargetsForAdGroupRequest
   */
  maxRecommendations?: number;
  /**
   * The ranking metric value. Supported values: CLICKS, CONVERSIONS, DEFAULT. DEFAULT will be applied if no value passed in.
   * @type {string}
   * @memberof RankedKeywordTargetsForAdGroupRequest
   */
  sortDimension?: RankedKeywordTargetsForAdGroupRequestSortDimensionEnum;
  /**
   * Translations are for readability and do not affect the targeting of ads. Supported marketplace to locale mappings can be found at the <a href=\'https://advertising.amazon.com/API/docs/en-us/localization/#/Keyword%20Localization\'>POST /keywords/localize</a> endpoint. Note: Translations will be null if locale is unsupported.
   * @type {string}
   * @memberof RankedKeywordTargetsForAdGroupRequest
   */
  locale?: RankedKeywordTargetsForAdGroupRequestLocaleEnum;
}

export const RankedKeywordTargetsForAdGroupRequestRecommendationTypeEnum = {
  KeywordsForAdgroup: 'KEYWORDS_FOR_ADGROUP',
} as const;

export type RankedKeywordTargetsForAdGroupRequestRecommendationTypeEnum =
  (typeof RankedKeywordTargetsForAdGroupRequestRecommendationTypeEnum)[keyof typeof RankedKeywordTargetsForAdGroupRequestRecommendationTypeEnum];
export const RankedKeywordTargetsForAdGroupRequestSortDimensionEnum = {
  Clicks: 'CLICKS',
  Conversions: 'CONVERSIONS',
  Default: 'DEFAULT',
} as const;

export type RankedKeywordTargetsForAdGroupRequestSortDimensionEnum =
  (typeof RankedKeywordTargetsForAdGroupRequestSortDimensionEnum)[keyof typeof RankedKeywordTargetsForAdGroupRequestSortDimensionEnum];
export const RankedKeywordTargetsForAdGroupRequestLocaleEnum = {
  ArEg: 'ar_EG',
  DeDe: 'de_DE',
  EnAe: 'en_AE',
  EnAu: 'en_AU',
  EnCa: 'en_CA',
  EnGb: 'en_GB',
  EnIn: 'en_IN',
  EnSa: 'en_SA',
  EnSg: 'en_SG',
  EnUs: 'en_US',
  EsEs: 'es_ES',
  EsMx: 'es_MX',
  FrFr: 'fr_FR',
  ItIt: 'it_IT',
  JaJp: 'ja_JP',
  NlNl: 'nl_NL',
  PlPl: 'pl_PL',
  PtBr: 'pt_BR',
  SvSe: 'sv_SE',
  TrTr: 'tr_TR',
  ZhCn: 'zh_CN',
} as const;

export type RankedKeywordTargetsForAdGroupRequestLocaleEnum =
  (typeof RankedKeywordTargetsForAdGroupRequestLocaleEnum)[keyof typeof RankedKeywordTargetsForAdGroupRequestLocaleEnum];

/**
 * This request type is used to retrieve recommended keyword targets for ASINs. Set the recommendationType to KEYWORDS_FOR_ASINS to use this request type.
 * @export
 * @interface RankedKeywordTargetsForAsinsRequest
 */
export interface RankedKeywordTargetsForAsinsRequest {
  /**
   * An array list of Asins
   * @type {Array<string>}
   * @memberof RankedKeywordTargetsForAsinsRequest
   */
  asins: Array<string>;
  /**
   * The list of products in the request.
   * @type {Array<ProductDetails>}
   * @memberof RankedKeywordTargetsForAsinsRequest
   */
  productDetailsList?: Array<ProductDetails>;
  /**
   * The bid recommendations returned will depend on the bidding strategy. <br> LEGACY_FOR_SALES - Dynamic Bids (Down only) <br> AUTO_FOR_SALES - Dynamic Bids (Up or down) <br> MANUAL - Fixed Bids
   * @type {string}
   * @memberof RankedKeywordTargetsForAsinsRequest
   */
  biddingStrategy?: RankedKeywordTargetsForAsinsRequestBiddingStrategyEnum;
  /**
   * The recommendationType to retrieve recommended keyword targets for a list of ASINs.
   * @type {string}
   * @memberof RankedKeywordTargetsForAsinsRequest
   */
  recommendationType: RankedKeywordTargetsForAsinsRequestRecommendationTypeEnum;
  /**
   * Set this parameter to false if you do not want to retrieve bid suggestions for your keyword targets. Defaults to true.
   * @type {boolean}
   * @memberof RankedKeywordTargetsForAsinsRequest
   */
  bidsEnabled?: boolean;
  /**
   * A list of targets that need to be ranked
   * @type {Array<KeywordTarget>}
   * @memberof RankedKeywordTargetsForAsinsRequest
   */
  targets?: Array<KeywordTarget>;
  /**
   * The max size of recommended target. Set it to 0 if you only want to rank user-defined keywords.
   * @type {number}
   * @memberof RankedKeywordTargetsForAsinsRequest
   */
  maxRecommendations?: number;
  /**
   * The ranking metric value. Supported values: CLICKS, CONVERSIONS, DEFAULT. DEFAULT will be applied if no value passed in.
   * @type {string}
   * @memberof RankedKeywordTargetsForAsinsRequest
   */
  sortDimension?: RankedKeywordTargetsForAsinsRequestSortDimensionEnum;
  /**
   * Translations are for readability and do not affect the targeting of ads. Supported marketplace to locale mappings can be found at the <a href=\'https://advertising.amazon.com/API/docs/en-us/localization/#/Keyword%20Localization\'>POST /keywords/localize</a> endpoint. Note: Translations will be null if locale is unsupported.
   * @type {string}
   * @memberof RankedKeywordTargetsForAsinsRequest
   */
  locale?: RankedKeywordTargetsForAsinsRequestLocaleEnum;
}

export const RankedKeywordTargetsForAsinsRequestBiddingStrategyEnum = {
  LegacyForSales: 'LEGACY_FOR_SALES',
  AutoForSales: 'AUTO_FOR_SALES',
  Manual: 'MANUAL',
  RuleBased: 'RULE_BASED',
} as const;

export type RankedKeywordTargetsForAsinsRequestBiddingStrategyEnum =
  (typeof RankedKeywordTargetsForAsinsRequestBiddingStrategyEnum)[keyof typeof RankedKeywordTargetsForAsinsRequestBiddingStrategyEnum];
export const RankedKeywordTargetsForAsinsRequestRecommendationTypeEnum = {
  KeywordsForAsins: 'KEYWORDS_FOR_ASINS',
} as const;

export type RankedKeywordTargetsForAsinsRequestRecommendationTypeEnum =
  (typeof RankedKeywordTargetsForAsinsRequestRecommendationTypeEnum)[keyof typeof RankedKeywordTargetsForAsinsRequestRecommendationTypeEnum];
export const RankedKeywordTargetsForAsinsRequestSortDimensionEnum = {
  Clicks: 'CLICKS',
  Conversions: 'CONVERSIONS',
  Default: 'DEFAULT',
} as const;

export type RankedKeywordTargetsForAsinsRequestSortDimensionEnum =
  (typeof RankedKeywordTargetsForAsinsRequestSortDimensionEnum)[keyof typeof RankedKeywordTargetsForAsinsRequestSortDimensionEnum];
export const RankedKeywordTargetsForAsinsRequestLocaleEnum = {
  ArEg: 'ar_EG',
  DeDe: 'de_DE',
  EnAe: 'en_AE',
  EnAu: 'en_AU',
  EnCa: 'en_CA',
  EnGb: 'en_GB',
  EnIn: 'en_IN',
  EnSa: 'en_SA',
  EnSg: 'en_SG',
  EnUs: 'en_US',
  EsEs: 'es_ES',
  EsMx: 'es_MX',
  FrFr: 'fr_FR',
  ItIt: 'it_IT',
  JaJp: 'ja_JP',
  NlNl: 'nl_NL',
  PlPl: 'pl_PL',
  PtBr: 'pt_BR',
  SvSe: 'sv_SE',
  TrTr: 'tr_TR',
  ZhCn: 'zh_CN',
} as const;

export type RankedKeywordTargetsForAsinsRequestLocaleEnum =
  (typeof RankedKeywordTargetsForAsinsRequestLocaleEnum)[keyof typeof RankedKeywordTargetsForAsinsRequestLocaleEnum];

/**
 *
 * @export
 * @interface RankedTargetResponse
 */
export interface RankedTargetResponse {
  /**
   * A list of ranked keyword targets
   * @type {Array<RecKeywordTarget>}
   * @memberof RankedTargetResponse
   */
  keywordTargetList?: Array<RecKeywordTarget>;
}
/**
 *
 * @export
 * @interface RankedTargetWithThemedBids
 */
export interface RankedTargetWithThemedBids {
  /**
   * The account-level ad-attributed impression share for the search-term/keyword. Provides percentage share of all ad impressions the advertiser has for the keyword in the last 30 days. This metric helps advertisers identify potential opportunities based on their share on relevant keywords. This information is only available for keywords the advertiser targeted with ad impressions.
   * @type {number}
   * @memberof RankedTargetWithThemedBids
   */
  searchTermImpressionShare?: number;
  /**
   * The translation of keyword if a locale is passed in
   * @type {string}
   * @memberof RankedTargetWithThemedBids
   */
  translation?: string;
  /**
   * A list of keyword bid info
   * @type {Array<ThemedBid>}
   * @memberof RankedTargetWithThemedBids
   */
  bidInfo?: Array<ThemedBid>;
  /**
   * The account-level ad-attributed impression rank for the search-term/keyword. Provides [1:N] place the advertiser ranks among all advertisers for the keyword by ad impressions in a marketplace in the last 30 days. It tells an advertiser how many advertisers had higher share of ad impressions. This information is only available for keywords the advertiser targeted with ad impressions.
   * @type {number}
   * @memberof RankedTargetWithThemedBids
   */
  searchTermImpressionRank?: number;
  /**
   * The keyword value
   * @type {string}
   * @memberof RankedTargetWithThemedBids
   */
  keyword?: string;
  /**
   * Flag that tells if keyword was selected by the user or was recommended by KRS
   * @type {boolean}
   * @memberof RankedTargetWithThemedBids
   */
  userSelectedKeyword?: boolean;
  /**
   * The recommended keyword target id
   * @type {string}
   * @memberof RankedTargetWithThemedBids
   */
  recId?: string;
}
/**
 *
 * @export
 * @interface RankedTargetWithThemedBidsResponse
 */
export interface RankedTargetWithThemedBidsResponse {
  /**
   *
   * @type {Array<RankedTargetWithThemedBids>}
   * @memberof RankedTargetWithThemedBidsResponse
   */
  keywordTargetList?: Array<RankedTargetWithThemedBids>;
  /**
   * A list of impact metrics which anticipates the number of clicks and orders you will receive if you target all targeting expressions using the low, medium, and high suggested bid.
   * @type {Array<ImpactMetrics>}
   * @memberof RankedTargetWithThemedBidsResponse
   */
  impactMetrics?: Array<ImpactMetrics>;
}
/**
 * Rating range is restricted to integers between 0 and 5, inclusive. Min must be less than or equal to max. We use this to retrieve the number of targetable ASINs that falls within this rating range.
 * @export
 * @interface RatingRange
 */
export interface RatingRange {
  /**
   *
   * @type {number}
   * @memberof RatingRange
   */
  min?: number;
  /**
   *
   * @type {number}
   * @memberof RatingRange
   */
  max?: number;
}
/**
 *
 * @export
 * @interface RecKeywordTarget
 */
export interface RecKeywordTarget {
  /**
   * The account-level ad-attributed impression share for the search-term/keyword. Provides percentage share of all ad impressions the advertiser has for the keyword in the last 30 days. This metric helps advertisers identify potential opportunities based on their share on relevant keywords. This information is only available for keywords the advertiser targeted with ad impressions.
   * @type {number}
   * @memberof RecKeywordTarget
   */
  searchTermImpressionShare?: number;
  /**
   * The translation of keyword if a locale is passed in
   * @type {string}
   * @memberof RecKeywordTarget
   */
  translation?: string;
  /**
   * A list of keyword bid info
   * @type {Array<KeywordBidInfo>}
   * @memberof RecKeywordTarget
   */
  bidInfo?: Array<KeywordBidInfo>;
  /**
   * The account-level ad-attributed impression rank for the search-term/keyword. Provides [1:N] place the advertiser ranks among all advertisers for the keyword by ad impressions in a marketplace in the last 30 days. It tells an advertiser how many advertisers had higher share of ad impressions. This information is only available for keywords the advertiser targeted with ad impressions.
   * @type {number}
   * @memberof RecKeywordTarget
   */
  searchTermImpressionRank?: number;
  /**
   * The keyword value
   * @type {string}
   * @memberof RecKeywordTarget
   */
  keyword?: string;
  /**
   * Flag that tells if keyword was selected by the user or was recommended by KRS
   * @type {boolean}
   * @memberof RecKeywordTarget
   */
  userSelectedKeyword?: boolean;
  /**
   * The recommended keyword target id
   * @type {string}
   * @memberof RecKeywordTarget
   */
  recId?: string;
}
/**
 *
 * @export
 * @interface RecommendationOptions
 */
export interface RecommendationOptions {
  /**
   * The max size of recommended target. Set it to 0 if you only want to rank user-defined keywords.
   * @type {number}
   * @memberof RecommendationOptions
   */
  maxRecommendations?: number;
  /**
   * The ranking metric value. Supported values: CLICKS, CONVERSIONS, DEFAULT. DEFAULT will be applied if no value passed in.
   * @type {string}
   * @memberof RecommendationOptions
   */
  sortDimension?: RecommendationOptionsSortDimensionEnum;
  /**
   * Translations are for readability and do not affect the targeting of ads. Supported marketplace to locale mappings can be found at the <a href=\'https://advertising.amazon.com/API/docs/en-us/localization/#/Keyword%20Localization\'>POST /keywords/localize</a> endpoint. Note: Translations will be null if locale is unsupported.
   * @type {string}
   * @memberof RecommendationOptions
   */
  locale?: RecommendationOptionsLocaleEnum;
}

export const RecommendationOptionsSortDimensionEnum = {
  Clicks: 'CLICKS',
  Conversions: 'CONVERSIONS',
  Default: 'DEFAULT',
} as const;

export type RecommendationOptionsSortDimensionEnum =
  (typeof RecommendationOptionsSortDimensionEnum)[keyof typeof RecommendationOptionsSortDimensionEnum];
export const RecommendationOptionsLocaleEnum = {
  ArEg: 'ar_EG',
  DeDe: 'de_DE',
  EnAe: 'en_AE',
  EnAu: 'en_AU',
  EnCa: 'en_CA',
  EnGb: 'en_GB',
  EnIn: 'en_IN',
  EnSa: 'en_SA',
  EnSg: 'en_SG',
  EnUs: 'en_US',
  EsEs: 'es_ES',
  EsMx: 'es_MX',
  FrFr: 'fr_FR',
  ItIt: 'it_IT',
  JaJp: 'ja_JP',
  NlNl: 'nl_NL',
  PlPl: 'pl_PL',
  PtBr: 'pt_BR',
  SvSe: 'sv_SE',
  TrTr: 'tr_TR',
  ZhCn: 'zh_CN',
} as const;

export type RecommendationOptionsLocaleEnum = (typeof RecommendationOptionsLocaleEnum)[keyof typeof RecommendationOptionsLocaleEnum];

/**
 *
 * @export
 * @interface Recurrence
 */
export interface Recurrence {
  /**
   * List of objects representing start and end time of desired intra-day budget rule window
   * @type {Array<TimeOfDay>}
   * @memberof Recurrence
   */
  intraDaySchedule?: Array<TimeOfDay>;
  /**
   *
   * @type {RecurrenceType}
   * @memberof Recurrence
   */
  type?: RecurrenceType;
  /**
   * Object representing days of the week for weekly type rule. It is not required for daily recurrence type
   * @type {Array<DayOfWeek>}
   * @memberof Recurrence
   */
  daysOfWeek?: Array<DayOfWeek>;
}

/**
 * The frequency of the rule application.
 * @export
 * @enum {string}
 */

export const RecurrenceType = {
  Daily: 'DAILY',
} as const;

export type RecurrenceType = (typeof RecurrenceType)[keyof typeof RecurrenceType];

/**
 * Response object for the GetRefinementsForCategory API, containing information on Brand Nodes, Age Range Nodes, and Genre Nodes.
 * @export
 * @interface Refinements
 */
export interface Refinements {
  /**
   * List of Age Ranges. Use the GetRefinementsForCategory to retrieve Age Ranges. Age Ranges are only available for categories related to children\'s toys and games.
   * @type {Array<AgeRange>}
   * @memberof Refinements
   */
  ageRanges?: Array<AgeRange>;
  /**
   * List of Brands.
   * @type {Array<Brand>}
   * @memberof Refinements
   */
  brands?: Array<Brand>;
  /**
   * List of Genres. Use the GetRefinementsForCategory to retrieve Genre Node IDs. Genres are only available for categories related to books.
   * @type {Array<Genre>}
   * @memberof Refinements
   */
  genres?: Array<Genre>;
}
/**
 * Response object for the POST /sp/targets/category/{categoryId}/refinements endpoint, containing information on Brand Nodes, Age Range Nodes, and Genre Nodes.
 * @export
 * @interface RefinementsLoP
 */
export interface RefinementsLoP {
  /**
   * List of Age Ranges in a language of preference (LoP). Use the POST /sp/targets/category/{categoryId}/refinements endpoint to retrieve Age Ranges. Age Ranges are only available for categories related to children\'s toys and games.
   * @type {Array<AgeRangeLoP>}
   * @memberof RefinementsLoP
   */
  ageRanges?: Array<AgeRangeLoP>;
  /**
   * List of Brands.
   * @type {Array<BrandLoP>}
   * @memberof RefinementsLoP
   */
  brands?: Array<BrandLoP>;
  /**
   * List of Genres in a language of preference (LoP). Use the POST /sp/targets/category/{categoryId}/refinements endpoint to retrieve Genre Node IDs. Genres are only available for categories related to books.
   * @type {Array<GenreLoP>}
   * @memberof RefinementsLoP
   */
  genres?: Array<GenreLoP>;
}
/**
 *
 * @export
 * @enum {string}
 */

export const ResultStatus = {
  Success: 'SUCCESS',
  Failure: 'FAILURE',
  PartialFailure: 'PARTIAL_FAILURE',
} as const;

export type ResultStatus = (typeof ResultStatus)[keyof typeof ResultStatus];

/**
 * The action taken when the campaign optimization rule is enabled. Defaults to adopt
 * @export
 * @enum {string}
 */

export const RuleAction = {
  Adopt: 'ADOPT',
} as const;

export type RuleAction = (typeof RuleAction)[keyof typeof RuleAction];

/**
 *
 * @export
 * @interface RuleCondition
 */
export interface RuleCondition {
  /**
   *
   * @type {RuleConditionMetric}
   * @memberof RuleCondition
   */
  metricName: RuleConditionMetric;
  /**
   *
   * @type {ComparisonOperator}
   * @memberof RuleCondition
   */
  comparisonOperator: ComparisonOperator;
  /**
   * The performance threshold value.
   * @type {number}
   * @memberof RuleCondition
   */
  threshold: number;
}

/**
 * The advertising performance metric. ROAS is the only supported metric.
 * @export
 * @enum {string}
 */

export const RuleConditionMetric = {
  Roas: 'ROAS',
  AverageBid: 'AVERAGE_BID',
} as const;

export type RuleConditionMetric = (typeof RuleConditionMetric)[keyof typeof RuleConditionMetric];

/**
 *
 * @export
 * @interface RuleDuration
 */
export interface RuleDuration {
  /**
   *
   * @type {EventTypeRuleDuration}
   * @memberof RuleDuration
   */
  eventTypeRuleDuration?: EventTypeRuleDuration;
  /**
   *
   * @type {DateRangeTypeRuleDuration}
   * @memberof RuleDuration
   */
  dateRangeTypeRuleDuration?: DateRangeTypeRuleDuration;
}
/**
 *
 * @export
 * @interface RuleNotification
 */
export interface RuleNotification {
  /**
   *
   * @type {RuleState}
   * @memberof RuleNotification
   */
  ruleState?: RuleState;
  /**
   * The persistent rule identifier.
   * @type {string}
   * @memberof RuleNotification
   */
  campaignOptimizationId?: string;
  /**
   * campaignId
   * @type {string}
   * @memberof RuleNotification
   */
  campaignId?: string;
  /**
   * Explains why the rule state is disabled
   * @type {string}
   * @memberof RuleNotification
   */
  notificationString?: string;
}

/**
 *
 * @export
 * @interface RuleNotificationError
 */
export interface RuleNotificationError {
  /**
   * campaignId
   * @type {string}
   * @memberof RuleNotificationError
   */
  campaignId?: string;
  /**
   *
   * @type {CampaignOptimizationRuleError}
   * @memberof RuleNotificationError
   */
  Error?: CampaignOptimizationRuleError;
}
/**
 *
 * @export
 * @interface RuleRecommendation
 */
export interface RuleRecommendation {
  /**
   * If true, performance metrics for the campaign are available in performanceMetrics response field.
   * @type {boolean}
   * @memberof RuleRecommendation
   */
  performanceMetricsExists?: boolean;
  /**
   * campaignId
   * @type {string}
   * @memberof RuleRecommendation
   */
  campaignId?: string;
  /**
   *
   * @type {RuleRecommendationMetrics}
   * @memberof RuleRecommendation
   */
  performanceMetrics?: RuleRecommendationMetrics;
}
/**
 *
 * @export
 * @interface RuleRecommendationError
 */
export interface RuleRecommendationError {
  /**
   * campaignId
   * @type {string}
   * @memberof RuleRecommendationError
   */
  campaignId?: string;
  /**
   *
   * @type {CampaignOptimizationRuleError}
   * @memberof RuleRecommendationError
   */
  Error?: CampaignOptimizationRuleError;
}
/**
 * Performance Metrics supported by the rule recommendation
 * @export
 * @interface RuleRecommendationMetrics
 */
export interface RuleRecommendationMetrics {
  /**
   * return on ad spend value
   * @type {number}
   * @memberof RuleRecommendationMetrics
   */
  roas?: number;
}
/**
 * The campaign optimization rule state.
 * @export
 * @enum {string}
 */

export const RuleState = {
  Enabled: 'ENABLED',
  Disabled: 'DISABLED',
} as const;

export type RuleState = (typeof RuleState)[keyof typeof RuleState];

/**
 * The campaign optimization rule status. Read-Only
 * @export
 * @enum {string}
 */

export const RuleStatus = {
  Active: 'ACTIVE',
  Archived: 'ARCHIVED',
} as const;

export type RuleStatus = (typeof RuleStatus)[keyof typeof RuleStatus];

/**
 * The type of the campaign optimization rule. Only Support BID as of now
 * @export
 * @enum {string}
 */

export const RuleType = {
  Bid: 'BID',
  Keyword: 'KEYWORD',
  Product: 'PRODUCT',
} as const;

export type RuleType = (typeof RuleType)[keyof typeof RuleType];

/**
 *
 * @export
 * @interface SBBudgetRule
 */
export interface SBBudgetRule {
  /**
   *
   * @type {State}
   * @memberof SBBudgetRule
   */
  ruleState?: State;
  /**
   * Epoch time of budget rule update. Read-only.
   * @type {number}
   * @memberof SBBudgetRule
   */
  lastUpdatedDate?: number;
  /**
   * Epoch time of budget rule creation. Read-only.
   * @type {number}
   * @memberof SBBudgetRule
   */
  createdDate?: number;
  /**
   *
   * @type {SBBudgetRuleDetails}
   * @memberof SBBudgetRule
   */
  ruleDetails?: SBBudgetRuleDetails;
  /**
   * The budget rule identifier.
   * @type {string}
   * @memberof SBBudgetRule
   */
  ruleId: string;
  /**
   * The budget rule status. Read-only.
   * @type {string}
   * @memberof SBBudgetRule
   */
  ruleStatus?: string;
}

/**
 *
 * @export
 * @interface SBBudgetRuleDetails
 */
export interface SBBudgetRuleDetails {
  /**
   *
   * @type {RuleDuration}
   * @memberof SBBudgetRuleDetails
   */
  duration?: RuleDuration;
  /**
   *
   * @type {Recurrence}
   * @memberof SBBudgetRuleDetails
   */
  recurrence?: Recurrence;
  /**
   *
   * @type {SBRuleType}
   * @memberof SBBudgetRuleDetails
   */
  ruleType?: SBRuleType;
  /**
   *
   * @type {BudgetIncreaseBy}
   * @memberof SBBudgetRuleDetails
   */
  budgetIncreaseBy?: BudgetIncreaseBy;
  /**
   * The budget rule name. Required to be unique within a campaign.
   * @type {string}
   * @memberof SBBudgetRuleDetails
   */
  name?: string;
  /**
   *
   * @type {PerformanceMeasureConditionForSB}
   * @memberof SBBudgetRuleDetails
   */
  performanceMeasureCondition?: PerformanceMeasureConditionForSB;
}

/**
 *
 * @export
 * @interface SBCampaignBudgetRule
 */
export interface SBCampaignBudgetRule {
  /**
   *
   * @type {State}
   * @memberof SBCampaignBudgetRule
   */
  ruleState?: State;
  /**
   * Epoch time of budget rule update. Read-only.
   * @type {number}
   * @memberof SBCampaignBudgetRule
   */
  lastUpdatedDate?: number;
  /**
   * Epoch time of budget rule creation. Read-only.
   * @type {number}
   * @memberof SBCampaignBudgetRule
   */
  createdDate?: number;
  /**
   *
   * @type {SBBudgetRuleDetails}
   * @memberof SBCampaignBudgetRule
   */
  ruleDetails?: SBBudgetRuleDetails;
  /**
   * The budget rule identifier.
   * @type {string}
   * @memberof SBCampaignBudgetRule
   */
  ruleId: string;
  /**
   * The budget rule evaluation status. Read-only.
   * @type {string}
   * @memberof SBCampaignBudgetRule
   */
  ruleStatus?: string;
}

/**
 *
 * @export
 * @interface SBGetAssociatedCampaignsResponse
 */
export interface SBGetAssociatedCampaignsResponse {
  /**
   * A list of campaigns that are associated to this budget rule.
   * @type {Array<AssociatedCampaign>}
   * @memberof SBGetAssociatedCampaignsResponse
   */
  associatedCampaigns?: Array<AssociatedCampaign>;
  /**
   * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
   * @type {string}
   * @memberof SBGetAssociatedCampaignsResponse
   */
  nextToken?: string;
}
/**
 *
 * @export
 * @interface SBListAssociatedBudgetRulesResponse
 */
export interface SBListAssociatedBudgetRulesResponse {
  /**
   * A list of associated budget rules.
   * @type {Array<SBCampaignBudgetRule>}
   * @memberof SBListAssociatedBudgetRulesResponse
   */
  associatedRules?: Array<SBCampaignBudgetRule>;
}
/**
 *
 * @export
 * @interface SBRuleDuration
 */
export interface SBRuleDuration {
  /**
   *
   * @type {DateRangeTypeRuleDuration}
   * @memberof SBRuleDuration
   */
  dateRangeTypeRuleDuration: DateRangeTypeRuleDuration;
}
/**
 * The type of budget rule. SCHEDULE: A budget rule based on a start and end date. PERFORMANCE: A budget rule based on advertising performance criteria.
 * @export
 * @enum {string}
 */

export const SBRuleType = {
  Schedule: 'SCHEDULE',
  Performance: 'PERFORMANCE',
} as const;

export type SBRuleType = (typeof SBRuleType)[keyof typeof SBRuleType];

/**
 *
 * @export
 * @interface SDBudgetRule
 */
export interface SDBudgetRule {
  /**
   *
   * @type {State}
   * @memberof SDBudgetRule
   */
  ruleState?: State;
  /**
   * Epoch time of budget rule update. Read-only.
   * @type {number}
   * @memberof SDBudgetRule
   */
  lastUpdatedDate?: number;
  /**
   * Epoch time of budget rule creation. Read-only.
   * @type {number}
   * @memberof SDBudgetRule
   */
  createdDate?: number;
  /**
   *
   * @type {SDBudgetRuleDetails}
   * @memberof SDBudgetRule
   */
  ruleDetails?: SDBudgetRuleDetails;
  /**
   * The budget rule identifier.
   * @type {string}
   * @memberof SDBudgetRule
   */
  ruleId: string;
  /**
   * The budget rule status. Read-only.
   * @type {string}
   * @memberof SDBudgetRule
   */
  ruleStatus?: string;
}

/**
 * Object representing details of a budget rule for SD campaign
 * @export
 * @interface SDBudgetRuleDetails
 */
export interface SDBudgetRuleDetails {
  /**
   *
   * @type {RuleDuration}
   * @memberof SDBudgetRuleDetails
   */
  duration?: RuleDuration;
  /**
   *
   * @type {Recurrence}
   * @memberof SDBudgetRuleDetails
   */
  recurrence?: Recurrence;
  /**
   *
   * @type {SDRuleType}
   * @memberof SDBudgetRuleDetails
   */
  ruleType?: SDRuleType;
  /**
   *
   * @type {BudgetIncreaseBy}
   * @memberof SDBudgetRuleDetails
   */
  budgetIncreaseBy?: BudgetIncreaseBy;
  /**
   * The budget rule name. Required to be unique within a campaign.
   * @type {string}
   * @memberof SDBudgetRuleDetails
   */
  name?: string;
  /**
   *
   * @type {PerformanceMeasureCondition}
   * @memberof SDBudgetRuleDetails
   */
  performanceMeasureCondition?: PerformanceMeasureCondition;
}

/**
 *
 * @export
 * @interface SDGetAssociatedCampaignsResponse
 */
export interface SDGetAssociatedCampaignsResponse {
  /**
   * A list of campaigns that are associated to this budget rule.
   * @type {Array<AssociatedCampaign>}
   * @memberof SDGetAssociatedCampaignsResponse
   */
  associatedCampaigns?: Array<AssociatedCampaign>;
  /**
   * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
   * @type {string}
   * @memberof SDGetAssociatedCampaignsResponse
   */
  nextToken?: string;
}
/**
 *
 * @export
 * @interface SDListAssociatedBudgetRulesResponse
 */
export interface SDListAssociatedBudgetRulesResponse {
  /**
   * A list of associated budget rules.
   * @type {Array<SDBudgetRule>}
   * @memberof SDListAssociatedBudgetRulesResponse
   */
  associatedRules?: Array<SDBudgetRule>;
}
/**
 * The type of budget rule. SCHEDULE: A budget rule based on a start and end date. PERFORMANCE: A budget rule based on advertising performance criteria.
 * @export
 * @enum {string}
 */

export const SDRuleType = {
  Schedule: 'SCHEDULE',
  Performance: 'PERFORMANCE',
} as const;

export type SDRuleType = (typeof SDRuleType)[keyof typeof SDRuleType];

/**
 *
 * @export
 * @interface SPBudgetRule
 */
export interface SPBudgetRule {
  /**
   *
   * @type {State}
   * @memberof SPBudgetRule
   */
  ruleState?: State;
  /**
   * Epoch time of budget rule update. Read-only.
   * @type {number}
   * @memberof SPBudgetRule
   */
  lastUpdatedDate?: number;
  /**
   * Epoch time of budget rule creation. Read-only.
   * @type {number}
   * @memberof SPBudgetRule
   */
  createdDate?: number;
  /**
   *
   * @type {SPBudgetRuleDetails}
   * @memberof SPBudgetRule
   */
  ruleDetails?: SPBudgetRuleDetails;
  /**
   * The budget rule identifier.
   * @type {string}
   * @memberof SPBudgetRule
   */
  ruleId: string;
  /**
   * The budget rule status. Read-only.
   * @type {string}
   * @memberof SPBudgetRule
   */
  ruleStatus?: string;
}

/**
 * Object representing details of a budget rule for SP campaign
 * @export
 * @interface SPBudgetRuleDetails
 */
export interface SPBudgetRuleDetails {
  /**
   *
   * @type {RuleDuration}
   * @memberof SPBudgetRuleDetails
   */
  duration?: RuleDuration;
  /**
   *
   * @type {Recurrence}
   * @memberof SPBudgetRuleDetails
   */
  recurrence?: Recurrence;
  /**
   *
   * @type {SPRuleType}
   * @memberof SPBudgetRuleDetails
   */
  ruleType?: SPRuleType;
  /**
   *
   * @type {BudgetIncreaseBy}
   * @memberof SPBudgetRuleDetails
   */
  budgetIncreaseBy?: BudgetIncreaseBy;
  /**
   * The budget rule name. Required to be unique within a campaign.
   * @type {string}
   * @memberof SPBudgetRuleDetails
   */
  name?: string;
  /**
   *
   * @type {PerformanceMeasureCondition}
   * @memberof SPBudgetRuleDetails
   */
  performanceMeasureCondition?: PerformanceMeasureCondition;
}

/**
 * The Error Response Object.
 * @export
 * @interface SPBudgetRulesRecommendationError
 */
export interface SPBudgetRulesRecommendationError {
  /**
   * The HTTP status code of the response.
   * @type {string}
   * @memberof SPBudgetRulesRecommendationError
   */
  code?: string;
  /**
   * A human-readable description of the response.
   * @type {string}
   * @memberof SPBudgetRulesRecommendationError
   */
  details?: string;
}
/**
 *
 * @export
 * @interface SPBudgetRulesRecommendationEvent
 */
export interface SPBudgetRulesRecommendationEvent {
  /**
   * The event identifier.
   * @type {string}
   * @memberof SPBudgetRulesRecommendationEvent
   */
  eventId?: string;
  /**
   * The end date in YYYYMMDD format.
   * @type {string}
   * @memberof SPBudgetRulesRecommendationEvent
   */
  endDate?: string;
  /**
   * The suggested budget increase expressed as a percent.
   * @type {number}
   * @memberof SPBudgetRulesRecommendationEvent
   */
  suggestedBudgetIncreasePercent?: number;
  /**
   * The event name.
   * @type {string}
   * @memberof SPBudgetRulesRecommendationEvent
   */
  eventName?: string;
  /**
   * The start date in YYYYMMDD format.
   * @type {string}
   * @memberof SPBudgetRulesRecommendationEvent
   */
  startDate?: string;
}
/**
 *
 * @export
 * @interface SPBudgetRulesRecommendationEventRequest
 */
export interface SPBudgetRulesRecommendationEventRequest {
  /**
   * The campaign identifier.
   * @type {string}
   * @memberof SPBudgetRulesRecommendationEventRequest
   */
  campaignId: string;
}
/**
 * Special events with date range and suggested budget increase.
 * @export
 * @interface SPBudgetRulesRecommendationEventResponse
 */
export interface SPBudgetRulesRecommendationEventResponse {
  /**
   * A list of recommended special events with date range and suggested budget increase.
   * @type {Array<SPBudgetRulesRecommendationEvent>}
   * @memberof SPBudgetRulesRecommendationEventResponse
   */
  recommendedBudgetRuleEvents?: Array<SPBudgetRulesRecommendationEvent>;
}
/**
 *
 * @export
 * @interface SPCampaignBudgetRule
 */
export interface SPCampaignBudgetRule {
  /**
   *
   * @type {State}
   * @memberof SPCampaignBudgetRule
   */
  ruleState?: State;
  /**
   * Epoch time of budget rule update. Read-only.
   * @type {number}
   * @memberof SPCampaignBudgetRule
   */
  lastUpdatedDate?: number;
  /**
   * Epoch time of budget rule creation. Read-only.
   * @type {number}
   * @memberof SPCampaignBudgetRule
   */
  createdDate?: number;
  /**
   *
   * @type {SPBudgetRuleDetails}
   * @memberof SPCampaignBudgetRule
   */
  ruleDetails?: SPBudgetRuleDetails;
  /**
   * The budget rule identifier.
   * @type {string}
   * @memberof SPCampaignBudgetRule
   */
  ruleId: string;
  /**
   * The budget rule evaluation status. Read-only.
   * @type {string}
   * @memberof SPCampaignBudgetRule
   */
  ruleStatus?: string;
}

/**
 *
 * @export
 * @interface SPCampaignOptimizationNotificationAPIRequest
 */
export interface SPCampaignOptimizationNotificationAPIRequest {
  /**
   * A list of campaign ids
   * @type {Array<string>}
   * @memberof SPCampaignOptimizationNotificationAPIRequest
   */
  campaignIds: Array<string>;
}
/**
 *
 * @export
 * @interface SPCampaignOptimizationNotificationAPIResponse
 */
export interface SPCampaignOptimizationNotificationAPIResponse {
  /**
   * List of errors that occured when generating campaign optimization notifications.
   * @type {Array<RuleNotificationError>}
   * @memberof SPCampaignOptimizationNotificationAPIResponse
   */
  CampaignOptimizationRecommendationsError?: Array<RuleNotificationError>;
  /**
   * List of successful campaign optimization notifications for campaigns.
   * @type {Array<RuleNotification>}
   * @memberof SPCampaignOptimizationNotificationAPIResponse
   */
  CampaignOptimizationNotifications?: Array<RuleNotification>;
}
/**
 *
 * @export
 * @interface SPCampaignOptimizationRecommendationAPIResponse
 */
export interface SPCampaignOptimizationRecommendationAPIResponse {
  /**
   * List of campaigns eligible for optimization rule.
   * @type {Array<RuleRecommendation>}
   * @memberof SPCampaignOptimizationRecommendationAPIResponse
   */
  CampaignOptimizationRecommendations?: Array<RuleRecommendation>;
  /**
   * List of campaigns not eligible for optimization rule.
   * @type {Array<RuleRecommendationError>}
   * @memberof SPCampaignOptimizationRecommendationAPIResponse
   */
  CampaignOptimizationRecommendationsError?: Array<RuleRecommendationError>;
}
/**
 *
 * @export
 * @interface SPCampaignOptimizationRecommendationsAPIRequest
 */
export interface SPCampaignOptimizationRecommendationsAPIRequest {
  /**
   * If set to false, eligible campaigns without a recommendation for performanceMetrics are also provided in response.Check performanceMetricsExists response field to know if performanceMetrics is available for eligible campaign.
   * @type {boolean}
   * @memberof SPCampaignOptimizationRecommendationsAPIRequest
   */
  requirePerformanceMetrics?: boolean;
  /**
   * A list of campaign ids
   * @type {Array<string>}
   * @memberof SPCampaignOptimizationRecommendationsAPIRequest
   */
  campaignIds: Array<string>;
}
/**
 * All Special individual and grouped events with date range.
 * @export
 * @interface SPGetAllRuleEventResponse
 */
export interface SPGetAllRuleEventResponse {
  /**
   * A list of grouped events with date range.
   * @type {Array<SPGroupedEvent>}
   * @memberof SPGetAllRuleEventResponse
   */
  groupedEvents?: Array<SPGroupedEvent>;
  /**
   * A list of individual events with date range.
   * @type {Array<SPIndividualEvent>}
   * @memberof SPGetAllRuleEventResponse
   */
  events?: Array<SPIndividualEvent>;
}
/**
 *
 * @export
 * @interface SPGetAssociatedCampaignsResponse
 */
export interface SPGetAssociatedCampaignsResponse {
  /**
   * A list of campaigns that are associated to this budget rule.
   * @type {Array<AssociatedCampaign>}
   * @memberof SPGetAssociatedCampaignsResponse
   */
  associatedCampaigns?: Array<AssociatedCampaign>;
  /**
   * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
   * @type {string}
   * @memberof SPGetAssociatedCampaignsResponse
   */
  nextToken?: string;
}
/**
 * @type SPGetBudgetRulesRecommendationRequest
 * @export
 */
export type SPGetBudgetRulesRecommendationRequest = { recommendationType: 'EVENTS_FOR_EXISTING_CAMPAIGN' } & SPBudgetRulesRecommendationEventRequest;

/**
 * The Error Response Object.
 * @export
 * @interface SPGetRuleEventError
 */
export interface SPGetRuleEventError {
  /**
   * The HTTP status code of the response.
   * @type {string}
   * @memberof SPGetRuleEventError
   */
  code?: string;
  /**
   * A human-readable description of the response.
   * @type {string}
   * @memberof SPGetRuleEventError
   */
  details?: string;
}
/**
 *
 * @export
 * @interface SPGroupedEvent
 */
export interface SPGroupedEvent {
  /**
   * The grouped event identifier.
   * @type {string}
   * @memberof SPGroupedEvent
   */
  groupedEventId?: string;
  /**
   * The grouped event name.
   * @type {string}
   * @memberof SPGroupedEvent
   */
  groupedEventName?: string;
  /**
   * The end date in ISO-8601 format.
   * @type {string}
   * @memberof SPGroupedEvent
   */
  endDate?: string;
  /**
   * The start date in ISO-8601 format.
   * @type {string}
   * @memberof SPGroupedEvent
   */
  startDate?: string;
}
/**
 *
 * @export
 * @interface SPIndividualEvent
 */
export interface SPIndividualEvent {
  /**
   * The event identifier.
   * @type {string}
   * @memberof SPIndividualEvent
   */
  eventId?: string;
  /**
   * The end date in ISO-8601 format.
   * @type {string}
   * @memberof SPIndividualEvent
   */
  endDate?: string;
  /**
   * The event name.
   * @type {string}
   * @memberof SPIndividualEvent
   */
  eventName?: string;
  /**
   * The start date in ISO-8601 format.
   * @type {string}
   * @memberof SPIndividualEvent
   */
  startDate?: string;
}
/**
 * Custom Exception message.
 * @export
 * @interface SPKeywordGroupsException
 */
export interface SPKeywordGroupsException {
  /**
   *
   * @type {string}
   * @memberof SPKeywordGroupsException
   */
  requestId?: string;
  /**
   * Human Readable message.
   * @type {string}
   * @memberof SPKeywordGroupsException
   */
  details?: string;
  /**
   *
   * @type {Array<SPKeywordGroupsExceptionErrorsInner>}
   * @memberof SPKeywordGroupsException
   */
  errors?: Array<SPKeywordGroupsExceptionErrorsInner>;
  /**
   * http status code.
   * @type {string}
   * @memberof SPKeywordGroupsException
   */
  httpStatusCode?: string;
}
/**
 *
 * @export
 * @interface SPKeywordGroupsExceptionErrorsInner
 */
export interface SPKeywordGroupsExceptionErrorsInner {
  /**
   * human readable error message for each error.
   * @type {string}
   * @memberof SPKeywordGroupsExceptionErrorsInner
   */
  errorMessage?: string;
  /**
   * Error Code. For informational purpose only.
   * @type {string}
   * @memberof SPKeywordGroupsExceptionErrorsInner
   */
  errorCode?: SPKeywordGroupsExceptionErrorsInnerErrorCodeEnum;
  /**
   * ID to indicate the granular error. Rely only on this to programmatically handle errors.
   * @type {number}
   * @memberof SPKeywordGroupsExceptionErrorsInner
   */
  errorId?: number;
}

export const SPKeywordGroupsExceptionErrorsInnerErrorCodeEnum = {
  DependencyFailure: 'DEPENDENCY_FAILURE',
  InternalError: 'INTERNAL_ERROR',
  InvalidRequest: 'INVALID_REQUEST',
  NotFound: 'NOT_FOUND',
  NotImplemented: 'NOT_IMPLEMENTED',
  RateExceeded: 'RATE_EXCEEDED',
  Timeout: 'TIMEOUT',
  Unauthenticated: 'UNAUTHENTICATED',
  Unauthorized: 'UNAUTHORIZED',
  Unavailable: 'UNAVAILABLE',
  UnsupportedMedia: 'UNSUPPORTED_MEDIA',
} as const;

export type SPKeywordGroupsExceptionErrorsInnerErrorCodeEnum =
  (typeof SPKeywordGroupsExceptionErrorsInnerErrorCodeEnum)[keyof typeof SPKeywordGroupsExceptionErrorsInnerErrorCodeEnum];

/**
 *
 * @export
 * @interface SPListAssociatedBudgetRulesResponse
 */
export interface SPListAssociatedBudgetRulesResponse {
  /**
   * A list of associated budget rules.
   * @type {Array<SPCampaignBudgetRule>}
   * @memberof SPListAssociatedBudgetRulesResponse
   */
  associatedRules?: Array<SPCampaignBudgetRule>;
}
/**
 * The type of budget rule. SCHEDULE: A budget rule based on a start and end date. PERFORMANCE: A budget rule based on advertising performance criteria.
 * @export
 * @enum {string}
 */

export const SPRuleType = {
  Schedule: 'SCHEDULE',
  Performance: 'PERFORMANCE',
} as const;

export type SPRuleType = (typeof SPRuleType)[keyof typeof SPRuleType];

/**
 *
 * @export
 * @interface SPTORBudgetRecommendationError
 */
export interface SPTORBudgetRecommendationError {
  /**
   * The HTTP status code of the response.
   * @type {string}
   * @memberof SPTORBudgetRecommendationError
   */
  code?: string;
  /**
   * A human-readable description of the response.
   * @type {string}
   * @memberof SPTORBudgetRecommendationError
   */
  details?: string;
}
/**
 * The Error Response Object.
 * @export
 * @interface SPTargetingCountryErrors
 */
export interface SPTargetingCountryErrors {
  /**
   * List of country codes this error returned for.
   * @type {Array<string>}
   * @memberof SPTargetingCountryErrors
   */
  countryCodes?: Array<string>;
  /**
   * The HTTP status code of the response.
   * @type {string}
   * @memberof SPTargetingCountryErrors
   */
  code?: string;
  /**
   * A human-readable description of the response.
   * @type {string}
   * @memberof SPTargetingCountryErrors
   */
  message?: string;
}
/**
 * The Error Response Object.
 * @export
 * @interface SPTargetingError
 */
export interface SPTargetingError {
  /**
   * The HTTP status code of the response.
   * @type {string}
   * @memberof SPTargetingError
   */
  code?: string;
  /**
   * A human-readable description of the response.
   * @type {string}
   * @memberof SPTargetingError
   */
  details?: string;
}
/**
 * Request object for SearchBrands API.
 * @export
 * @interface SearchBrandsRequest
 */
export interface SearchBrandsRequest {
  /**
   *
   * @type {string}
   * @memberof SearchBrandsRequest
   */
  keyword: string;
}
/**
 * Request object for SearchGlobalBrands API.
 * @export
 * @interface SearchGlobalBrandsRequest
 */
export interface SearchGlobalBrandsRequest {
  /**
   * Map containing keywords for countries passed in the request.
   * @type {{ [key: string]: string; }}
   * @memberof SearchGlobalBrandsRequest
   */
  countryKeyword: { [key: string]: string };
}
/**
 *
 * @export
 * @interface SevenDaysEstimatedOpportunities
 */
export interface SevenDaysEstimatedOpportunities {
  /**
   * Lower bound of the estimated incremental clicks that could be gained if all optimizations are made.
   * @type {number}
   * @memberof SevenDaysEstimatedOpportunities
   */
  estimatedIncrementalClicksLower?: number;
  /**
   * Upper bound of the estimated incremental clicks that could be gained if all optimizations are made.
   * @type {number}
   * @memberof SevenDaysEstimatedOpportunities
   */
  estimatedIncrementalClicksUpper?: number;
  /**
   * End date of the opportunities date range in YYYY-MM-DDTHH:mm:ssZ format.
   * @type {string}
   * @memberof SevenDaysEstimatedOpportunities
   */
  endDate?: string;
  /**
   * Start date of the opportunities date range in YYYY-MM-DDTHH:mm:ssZ format.
   * @type {string}
   * @memberof SevenDaysEstimatedOpportunities
   */
  startDate?: string;
}
/**
 *
 * @export
 * @interface SevenDaysMissedOpportunities
 */
export interface SevenDaysMissedOpportunities {
  /**
   * Lower bound estimate of the additional sales the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period. Provided in local currency.
   * @type {number}
   * @memberof SevenDaysMissedOpportunities
   */
  estimatedMissedSalesLower?: number;
  /**
   * Upper bound estimate of the additional sales the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period. Provided in local currency.
   * @type {number}
   * @memberof SevenDaysMissedOpportunities
   */
  estimatedMissedSalesUpper?: number;
  /**
   * End date of the date range for which missed opportunity metrics are provided (YYYYMMDD). Local time
   * @type {string}
   * @memberof SevenDaysMissedOpportunities
   */
  endDate?: string;
  /**
   * Lower bound estimate of the additional impressions the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period.
   * @type {number}
   * @memberof SevenDaysMissedOpportunities
   */
  estimatedMissedImpressionsLower?: number;
  /**
   * Lower bound estimate of the additional clicks the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period.
   * @type {number}
   * @memberof SevenDaysMissedOpportunities
   */
  estimatedMissedClicksLower?: number;
  /**
   * Upper bound estimate of the additional clicks the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period.
   * @type {number}
   * @memberof SevenDaysMissedOpportunities
   */
  estimatedMissedClicksUpper?: number;
  /**
   * Upper bound estimate of the additional impressions the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period.
   * @type {number}
   * @memberof SevenDaysMissedOpportunities
   */
  estimatedMissedImpressionsUpper?: number;
  /**
   * Starting date of the date range for which missed opportunity metrics are provided (YYYYMMDD). Local time
   * @type {string}
   * @memberof SevenDaysMissedOpportunities
   */
  startDate?: string;
  /**
   * percentage of time the campaign is active with a budget. Provided as a decimal ranging from 0 to 1 (e.g. 0.76 means the campaign was in budget for 76% of the time between the startDate and endDate period)
   * @type {number}
   * @memberof SevenDaysMissedOpportunities
   */
  percentTimeInBudget?: number;
}
/**
 *
 * @export
 * @interface SpecialEvent
 */
export interface SpecialEvent {
  /**
   * Deprecated. The factor used to boost the recommended budget.
   * @type {number}
   * @memberof SpecialEvent
   */
  budgetModifier?: number;
  /**
   * The end date of the special event in YYYYMMDD format.
   * @type {string}
   * @memberof SpecialEvent
   */
  endDate?: string;
  /**
   * Recommended daily budget for the new campaign during the special event period.
   * @type {number}
   * @memberof SpecialEvent
   */
  dailyBudget?: number;
  /**
   * The key of the special event.
   * @type {string}
   * @memberof SpecialEvent
   */
  eventKey?: string;
  /**
   * The name of the special event.
   * @type {string}
   * @memberof SpecialEvent
   */
  eventName?: string;
  /**
   * The start date of the special event in YYYYMMDD format.
   * @type {string}
   * @memberof SpecialEvent
   */
  startDate?: string;
  /**
   *
   * @type {Benchmark}
   * @memberof SpecialEvent
   */
  benchmark?: Benchmark;
}
/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsAccessDeniedErrorCode = {
  AccessDenied: 'ACCESS_DENIED',
} as const;

export type SponsoredProductsAccessDeniedErrorCode =
  (typeof SponsoredProductsAccessDeniedErrorCode)[keyof typeof SponsoredProductsAccessDeniedErrorCode];

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsAccessDeniedExceptionCode = {
  AccessDenied: 'ACCESS_DENIED',
} as const;

export type SponsoredProductsAccessDeniedExceptionCode =
  (typeof SponsoredProductsAccessDeniedExceptionCode)[keyof typeof SponsoredProductsAccessDeniedExceptionCode];

/**
 *
 * @export
 * @interface SponsoredProductsAccessDeniedExceptionResponseContent
 */
export interface SponsoredProductsAccessDeniedExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsAccessDeniedErrorCode}
   * @memberof SponsoredProductsAccessDeniedExceptionResponseContent
   */
  code: SponsoredProductsAccessDeniedErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsAccessDeniedExceptionResponseContent
   */
  message: string;
}

/**
 * Errors related to ad eligibility
 * @export
 * @interface SponsoredProductsAdEligibilityError
 */
export interface SponsoredProductsAdEligibilityError {
  /**
   *
   * @type {SponsoredProductsAdEligibilityErrorReason}
   * @memberof SponsoredProductsAdEligibilityError
   */
  reason: SponsoredProductsAdEligibilityErrorReason;
  /**
   *
   * @type {SponsoredProductsMarketplace}
   * @memberof SponsoredProductsAdEligibilityError
   */
  marketplace?: SponsoredProductsMarketplace;
  /**
   *
   * @type {SponsoredProductsErrorCause}
   * @memberof SponsoredProductsAdEligibilityError
   */
  cause?: SponsoredProductsErrorCause;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsAdEligibilityError
   */
  message: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsAdEligibilityErrorReason = {
  AdIneligible: 'AD_INELIGIBLE',
} as const;

export type SponsoredProductsAdEligibilityErrorReason =
  (typeof SponsoredProductsAdEligibilityErrorReason)[keyof typeof SponsoredProductsAdEligibilityErrorReason];

/**
 *
 * @export
 * @interface SponsoredProductsAdGroup
 */
export interface SponsoredProductsAdGroup {
  /**
   * The identifier of the campaign to which the keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsAdGroup
   */
  campaignId: string;
  /**
   * The name of the ad group.
   * @type {string}
   * @memberof SponsoredProductsAdGroup
   */
  name: string;
  /**
   *
   * @type {SponsoredProductsEntityState}
   * @memberof SponsoredProductsAdGroup
   */
  state: SponsoredProductsEntityState;
  /**
   * The identifier of the keyword.
   * @type {string}
   * @memberof SponsoredProductsAdGroup
   */
  adGroupId: string;
  /**
   * A bid value for use when no bid is specified for keywords in the ad group. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
   * @type {number}
   * @memberof SponsoredProductsAdGroup
   */
  defaultBid: number;
  /**
   *
   * @type {SponsoredProductsAdGroupExtendedData}
   * @memberof SponsoredProductsAdGroup
   */
  extendedData?: SponsoredProductsAdGroupExtendedData;
}

/**
 *
 * @export
 * @interface SponsoredProductsAdGroupAccessError
 */
export interface SponsoredProductsAdGroupAccessError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsAdGroupAccessError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsAdGroupAccessErrorSelector}
   * @memberof SponsoredProductsAdGroupAccessError
   */
  errorValue: SponsoredProductsAdGroupAccessErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsAdGroupAccessErrorSelector
 */
export interface SponsoredProductsAdGroupAccessErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsAdGroupAccessErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsAdGroupAccessErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsAdGroupAccessErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsAdGroupAccessErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsAdGroupAccessErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsAdGroupAccessErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsAdGroupAccessErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
  /**
   *
   * @type {SponsoredProductsInvalidInputError}
   * @memberof SponsoredProductsAdGroupAccessErrorSelector
   */
  invalidInputError?: SponsoredProductsInvalidInputError;
}
/**
 * Exception resulting in accessing campaign management entities
 * @export
 * @interface SponsoredProductsAdGroupAccessExceptionResponseContent
 */
export interface SponsoredProductsAdGroupAccessExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsAdGroupAccessExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsAdGroupAccessExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsAdGroupAccessError>}
   * @memberof SponsoredProductsAdGroupAccessExceptionResponseContent
   */
  errors?: Array<SponsoredProductsAdGroupAccessError>;
}

/**
 *
 * @export
 * @interface SponsoredProductsAdGroupExtendedData
 */
export interface SponsoredProductsAdGroupExtendedData {
  /**
   * Last updated date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsAdGroupExtendedData
   */
  lastUpdateDateTime?: string;
  /**
   *
   * @type {SponsoredProductsAdGroupServingStatus}
   * @memberof SponsoredProductsAdGroupExtendedData
   */
  servingStatus?: SponsoredProductsAdGroupServingStatus;
  /**
   * The serving status reasons of the AdGroup
   * @type {Array<SponsoredProductsAdGroupServingStatusDetail>}
   * @memberof SponsoredProductsAdGroupExtendedData
   */
  servingStatusDetails?: Array<SponsoredProductsAdGroupServingStatusDetail>;
  /**
   * Creation date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsAdGroupExtendedData
   */
  creationDateTime?: string;
}

/**
 *
 * @export
 * @interface SponsoredProductsAdGroupFailureResponseItem
 */
export interface SponsoredProductsAdGroupFailureResponseItem {
  /**
   * the index of the adGroup in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsAdGroupFailureResponseItem
   */
  index: number;
  /**
   * A list of validation errors
   * @type {Array<SponsoredProductsAdGroupMutationError>}
   * @memberof SponsoredProductsAdGroupFailureResponseItem
   */
  errors?: Array<SponsoredProductsAdGroupMutationError>;
}
/**
 *
 * @export
 * @interface SponsoredProductsAdGroupMutationError
 */
export interface SponsoredProductsAdGroupMutationError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsAdGroupMutationError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsAdGroupMutationErrorSelector}
   * @memberof SponsoredProductsAdGroupMutationError
   */
  errorValue: SponsoredProductsAdGroupMutationErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsAdGroupMutationErrorSelector
 */
export interface SponsoredProductsAdGroupMutationErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityStateError}
   * @memberof SponsoredProductsAdGroupMutationErrorSelector
   */
  entityStateError?: SponsoredProductsEntityStateError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsAdGroupMutationErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsBiddingError}
   * @memberof SponsoredProductsAdGroupMutationErrorSelector
   */
  biddingError?: SponsoredProductsBiddingError;
  /**
   *
   * @type {SponsoredProductsDuplicateValueError}
   * @memberof SponsoredProductsAdGroupMutationErrorSelector
   */
  duplicateValueError?: SponsoredProductsDuplicateValueError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsAdGroupMutationErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsAdGroupMutationErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsParentEntityError}
   * @memberof SponsoredProductsAdGroupMutationErrorSelector
   */
  parentEntityError?: SponsoredProductsParentEntityError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsAdGroupMutationErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsAdGroupMutationErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsApplicableMarketplacesError}
   * @memberof SponsoredProductsAdGroupMutationErrorSelector
   */
  applicableMarketplacesError?: SponsoredProductsApplicableMarketplacesError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsAdGroupMutationErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsBillingError}
   * @memberof SponsoredProductsAdGroupMutationErrorSelector
   */
  billingError?: SponsoredProductsBillingError;
  /**
   *
   * @type {SponsoredProductsEntityQuotaError}
   * @memberof SponsoredProductsAdGroupMutationErrorSelector
   */
  entityQuotaError?: SponsoredProductsEntityQuotaError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsAdGroupMutationErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
}
/**
 * Exception resulting in mutating campaign management entities
 * @export
 * @interface SponsoredProductsAdGroupMutationExceptionResponseContent
 */
export interface SponsoredProductsAdGroupMutationExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsAdGroupMutationExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsAdGroupMutationExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsAdGroupMutationError>}
   * @memberof SponsoredProductsAdGroupMutationExceptionResponseContent
   */
  errors?: Array<SponsoredProductsAdGroupMutationError>;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsAdGroupServingStatus = {
  AdGroupStatusEnabled: 'AD_GROUP_STATUS_ENABLED',
  AdGroupPaused: 'AD_GROUP_PAUSED',
  AdGroupArchived: 'AD_GROUP_ARCHIVED',
  AdGroupIncomplete: 'AD_GROUP_INCOMPLETE',
  AdGroupPolicingPendingReview: 'AD_GROUP_POLICING_PENDING_REVIEW',
  AdGroupPolicingCreativeRejected: 'AD_GROUP_POLICING_CREATIVE_REJECTED',
  AdGroupLowBid: 'AD_GROUP_LOW_BID',
  CampaignStatusEnabled: 'CAMPAIGN_STATUS_ENABLED',
  CampaignPaused: 'CAMPAIGN_PAUSED',
  CampaignArchived: 'CAMPAIGN_ARCHIVED',
  PendingReview: 'PENDING_REVIEW',
  Rejected: 'REJECTED',
  PendingStartDate: 'PENDING_START_DATE',
  Ended: 'ENDED',
  CampaignOutOfBudget: 'CAMPAIGN_OUT_OF_BUDGET',
  CampaignIncomplete: 'CAMPAIGN_INCOMPLETE',
  PortfolioStatusEnabled: 'PORTFOLIO_STATUS_ENABLED',
  PortfolioPaused: 'PORTFOLIO_PAUSED',
  PortfolioArchived: 'PORTFOLIO_ARCHIVED',
  PortfolioOutOfBudget: 'PORTFOLIO_OUT_OF_BUDGET',
  PortfolioPendingStartDate: 'PORTFOLIO_PENDING_START_DATE',
  PortfolioEnded: 'PORTFOLIO_ENDED',
  AdvertiserPolicingSuspended: 'ADVERTISER_POLICING_SUSPENDED',
  AdvertiserPolicingPendingReview: 'ADVERTISER_POLICING_PENDING_REVIEW',
  AdvertiserArchived: 'ADVERTISER_ARCHIVED',
  AdvertiserPaused: 'ADVERTISER_PAUSED',
  AdvertiserOutOfBudget: 'ADVERTISER_OUT_OF_BUDGET',
  AdvertiserPaymentFailure: 'ADVERTISER_PAYMENT_FAILURE',
  Other: 'OTHER',
} as const;

export type SponsoredProductsAdGroupServingStatus =
  (typeof SponsoredProductsAdGroupServingStatus)[keyof typeof SponsoredProductsAdGroupServingStatus];

/**
 *
 * @export
 * @interface SponsoredProductsAdGroupServingStatusDetail
 */
export interface SponsoredProductsAdGroupServingStatusDetail {
  /**
   *
   * @type {SponsoredProductsAdGroupServingStatusReason}
   * @memberof SponsoredProductsAdGroupServingStatusDetail
   */
  name?: SponsoredProductsAdGroupServingStatusReason;
  /**
   * A URL with additional information about the status identifier.
   * @type {string}
   * @memberof SponsoredProductsAdGroupServingStatusDetail
   */
  helpUrl?: string;
  /**
   * A human-readable description of the status identifier specified in the name field.
   * @type {string}
   * @memberof SponsoredProductsAdGroupServingStatusDetail
   */
  message?: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsAdGroupServingStatusReason = {
  AdGroupStatusEnabledDetail: 'AD_GROUP_STATUS_ENABLED_DETAIL',
  AdGroupPausedDetail: 'AD_GROUP_PAUSED_DETAIL',
  AdGroupArchivedDetail: 'AD_GROUP_ARCHIVED_DETAIL',
  AdGroupIncompleteDetail: 'AD_GROUP_INCOMPLETE_DETAIL',
  AdGroupPolicingPendingReviewDetail: 'AD_GROUP_POLICING_PENDING_REVIEW_DETAIL',
  AdGroupPolicingCreativeRejectedDetail: 'AD_GROUP_POLICING_CREATIVE_REJECTED_DETAIL',
  AdGroupLowBidDetail: 'AD_GROUP_LOW_BID_DETAIL',
  CampaignStatusEnabledDetail: 'CAMPAIGN_STATUS_ENABLED_DETAIL',
  CampaignPausedDetail: 'CAMPAIGN_PAUSED_DETAIL',
  CampaignArchivedDetail: 'CAMPAIGN_ARCHIVED_DETAIL',
  PendingReviewDetail: 'PENDING_REVIEW_DETAIL',
  RejectedDetail: 'REJECTED_DETAIL',
  PendingStartDateDetail: 'PENDING_START_DATE_DETAIL',
  EndedDetail: 'ENDED_DETAIL',
  CampaignOutOfBudgetDetail: 'CAMPAIGN_OUT_OF_BUDGET_DETAIL',
  CampaignIncompleteDetail: 'CAMPAIGN_INCOMPLETE_DETAIL',
  PortfolioStatusEnabledDetail: 'PORTFOLIO_STATUS_ENABLED_DETAIL',
  PortfolioPausedDetail: 'PORTFOLIO_PAUSED_DETAIL',
  PortfolioArchivedDetail: 'PORTFOLIO_ARCHIVED_DETAIL',
  PortfolioOutOfBudgetDetail: 'PORTFOLIO_OUT_OF_BUDGET_DETAIL',
  PortfolioPendingStartDateDetail: 'PORTFOLIO_PENDING_START_DATE_DETAIL',
  PortfolioEndedDetail: 'PORTFOLIO_ENDED_DETAIL',
  AdvertiserPolicingSuspendedDetail: 'ADVERTISER_POLICING_SUSPENDED_DETAIL',
  AdvertiserPolicingPendingReviewDetail: 'ADVERTISER_POLICING_PENDING_REVIEW_DETAIL',
  AdvertiserArchivedDetail: 'ADVERTISER_ARCHIVED_DETAIL',
  AdvertiserPausedDetail: 'ADVERTISER_PAUSED_DETAIL',
  AdvertiserOutOfBudgetDetail: 'ADVERTISER_OUT_OF_BUDGET_DETAIL',
  AdvertiserPaymentFailureDetail: 'ADVERTISER_PAYMENT_FAILURE_DETAIL',
  Other: 'OTHER',
} as const;

export type SponsoredProductsAdGroupServingStatusReason =
  (typeof SponsoredProductsAdGroupServingStatusReason)[keyof typeof SponsoredProductsAdGroupServingStatusReason];

/**
 *
 * @export
 * @interface SponsoredProductsAdGroupSuccessResponseItem
 */
export interface SponsoredProductsAdGroupSuccessResponseItem {
  /**
   *
   * @type {SponsoredProductsAdGroup}
   * @memberof SponsoredProductsAdGroupSuccessResponseItem
   */
  adGroup?: SponsoredProductsAdGroup;
  /**
   * the index of the adGroup in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsAdGroupSuccessResponseItem
   */
  index: number;
  /**
   * the adGroup ID
   * @type {string}
   * @memberof SponsoredProductsAdGroupSuccessResponseItem
   */
  adGroupId?: string;
}
/**
 * Targeting type of an adGroup.
 * @export
 * @enum {string}
 */

export const SponsoredProductsAdGroupTargetingType = {
  Keyword: 'KEYWORD',
  Product: 'PRODUCT',
  Auto: 'AUTO',
  Other: 'OTHER',
} as const;

export type SponsoredProductsAdGroupTargetingType =
  (typeof SponsoredProductsAdGroupTargetingType)[keyof typeof SponsoredProductsAdGroupTargetingType];

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsAdServingStatus = {
  AdGroupStatusEnabled: 'AD_GROUP_STATUS_ENABLED',
  AdGroupPaused: 'AD_GROUP_PAUSED',
  AdGroupArchived: 'AD_GROUP_ARCHIVED',
  AdGroupIncomplete: 'AD_GROUP_INCOMPLETE',
  AdGroupPolicingPendingReview: 'AD_GROUP_POLICING_PENDING_REVIEW',
  AdGroupPolicingCreativeRejected: 'AD_GROUP_POLICING_CREATIVE_REJECTED',
  AdGroupLowBid: 'AD_GROUP_LOW_BID',
  CampaignStatusEnabled: 'CAMPAIGN_STATUS_ENABLED',
  CampaignPaused: 'CAMPAIGN_PAUSED',
  CampaignArchived: 'CAMPAIGN_ARCHIVED',
  PendingReview: 'PENDING_REVIEW',
  Rejected: 'REJECTED',
  PendingStartDate: 'PENDING_START_DATE',
  Ended: 'ENDED',
  CampaignOutOfBudget: 'CAMPAIGN_OUT_OF_BUDGET',
  CampaignIncomplete: 'CAMPAIGN_INCOMPLETE',
  PortfolioStatusEnabled: 'PORTFOLIO_STATUS_ENABLED',
  PortfolioPaused: 'PORTFOLIO_PAUSED',
  PortfolioArchived: 'PORTFOLIO_ARCHIVED',
  PortfolioOutOfBudget: 'PORTFOLIO_OUT_OF_BUDGET',
  PortfolioPendingStartDate: 'PORTFOLIO_PENDING_START_DATE',
  PortfolioEnded: 'PORTFOLIO_ENDED',
  AdvertiserPolicingSuspended: 'ADVERTISER_POLICING_SUSPENDED',
  AdvertiserPolicingPendingReview: 'ADVERTISER_POLICING_PENDING_REVIEW',
  AdvertiserArchived: 'ADVERTISER_ARCHIVED',
  AdvertiserPaused: 'ADVERTISER_PAUSED',
  AdvertiserOutOfBudget: 'ADVERTISER_OUT_OF_BUDGET',
  AdvertiserPaymentFailure: 'ADVERTISER_PAYMENT_FAILURE',
  AdStatusLive: 'AD_STATUS_LIVE',
  AdPolicingPendingReview: 'AD_POLICING_PENDING_REVIEW',
  AdPolicingSuspended: 'AD_POLICING_SUSPENDED',
  AdPaused: 'AD_PAUSED',
  AdArchived: 'AD_ARCHIVED',
  AccountOutOfBudget: 'ACCOUNT_OUT_OF_BUDGET',
  AdvertiserAccountOutOfBudget: 'ADVERTISER_ACCOUNT_OUT_OF_BUDGET',
  AdvertiserExceedSpendsLimit: 'ADVERTISER_EXCEED_SPENDS_LIMIT',
  AdvertiserStatusEnabled: 'ADVERTISER_STATUS_ENABLED',
  AdCreationOfflineFailed: 'AD_CREATION_OFFLINE_FAILED',
  AdCreationOfflineInProgress: 'AD_CREATION_OFFLINE_IN_PROGRESS',
  AdCreationOfflinePending: 'AD_CREATION_OFFLINE_PENDING',
  CampaignAdsNotDelivering: 'CAMPAIGN_ADS_NOT_DELIVERING',
  LandingPageNotAvailable: 'LANDING_PAGE_NOT_AVAILABLE',
  MissingDecoration: 'MISSING_DECORATION',
  MissingImage: 'MISSING_IMAGE',
  NotBuyable: 'NOT_BUYABLE',
  NotInBuybox: 'NOT_IN_BUYBOX',
  OutOfStock: 'OUT_OF_STOCK',
  SecurityScanPendingReview: 'SECURITY_SCAN_PENDING_REVIEW',
  SecurityScanRejected: 'SECURITY_SCAN_REJECTED',
  StatusUnavailable: 'STATUS_UNAVAILABLE',
  TargetingClauseArchived: 'TARGETING_CLAUSE_ARCHIVED',
  TargetingClauseBlocked: 'TARGETING_CLAUSE_BLOCKED',
  TargetingClausePaused: 'TARGETING_CLAUSE_PAUSED',
  TargetingClausePolicingSuspended: 'TARGETING_CLAUSE_POLICING_SUSPENDED',
  TargetingClauseStatusLive: 'TARGETING_CLAUSE_STATUS_LIVE',
  Eligible: 'ELIGIBLE',
  Ineligible: 'INELIGIBLE',
  NoInventory: 'NO_INVENTORY',
  NoPurchasableOffer: 'NO_PURCHASABLE_OFFER',
  PirRuleExcluded: 'PIR_RULE_EXCLUDED',
  CampaignPendingStartDate: 'CAMPAIGN_PENDING_START_DATE',
  CampaignEnded: 'CAMPAIGN_ENDED',
  AdMissingImage: 'AD_MISSING_IMAGE',
  AdMissingDecoration: 'AD_MISSING_DECORATION',
  AdNotBuyable: 'AD_NOT_BUYABLE',
  AdNotInBuybox: 'AD_NOT_IN_BUYBOX',
  AdOutOfStock: 'AD_OUT_OF_STOCK',
  AdLandingPageNotAvailable: 'AD_LANDING_PAGE_NOT_AVAILABLE',
  AdNoPurchasableOffer: 'AD_NO_PURCHASABLE_OFFER',
  AdIneligible: 'AD_INELIGIBLE',
  AdEligible: 'AD_ELIGIBLE',
  AdCreationFailed: 'AD_CREATION_FAILED',
  Other: 'OTHER',
} as const;

export type SponsoredProductsAdServingStatus = (typeof SponsoredProductsAdServingStatus)[keyof typeof SponsoredProductsAdServingStatus];

/**
 *
 * @export
 * @interface SponsoredProductsAdServingStatusDetail
 */
export interface SponsoredProductsAdServingStatusDetail {
  /**
   *
   * @type {SponsoredProductsAdServingStatusReason}
   * @memberof SponsoredProductsAdServingStatusDetail
   */
  name?: SponsoredProductsAdServingStatusReason;
  /**
   * A URL with additional information about the status identifier.
   * @type {string}
   * @memberof SponsoredProductsAdServingStatusDetail
   */
  helpUrl?: string;
  /**
   * A human-readable description of the status identifier specified in the name field.
   * @type {string}
   * @memberof SponsoredProductsAdServingStatusDetail
   */
  message?: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsAdServingStatusReason = {
  AdGroupStatusEnabledDetail: 'AD_GROUP_STATUS_ENABLED_DETAIL',
  AdGroupPausedDetail: 'AD_GROUP_PAUSED_DETAIL',
  AdGroupArchivedDetail: 'AD_GROUP_ARCHIVED_DETAIL',
  AdGroupIncompleteDetail: 'AD_GROUP_INCOMPLETE_DETAIL',
  AdGroupPolicingPendingReviewDetail: 'AD_GROUP_POLICING_PENDING_REVIEW_DETAIL',
  AdGroupPolicingCreativeRejectedDetail: 'AD_GROUP_POLICING_CREATIVE_REJECTED_DETAIL',
  AdGroupLowBidDetail: 'AD_GROUP_LOW_BID_DETAIL',
  CampaignStatusEnabledDetail: 'CAMPAIGN_STATUS_ENABLED_DETAIL',
  CampaignPausedDetail: 'CAMPAIGN_PAUSED_DETAIL',
  CampaignArchivedDetail: 'CAMPAIGN_ARCHIVED_DETAIL',
  PendingReviewDetail: 'PENDING_REVIEW_DETAIL',
  RejectedDetail: 'REJECTED_DETAIL',
  PendingStartDateDetail: 'PENDING_START_DATE_DETAIL',
  EndedDetail: 'ENDED_DETAIL',
  CampaignOutOfBudgetDetail: 'CAMPAIGN_OUT_OF_BUDGET_DETAIL',
  CampaignIncompleteDetail: 'CAMPAIGN_INCOMPLETE_DETAIL',
  PortfolioStatusEnabledDetail: 'PORTFOLIO_STATUS_ENABLED_DETAIL',
  PortfolioPausedDetail: 'PORTFOLIO_PAUSED_DETAIL',
  PortfolioArchivedDetail: 'PORTFOLIO_ARCHIVED_DETAIL',
  PortfolioOutOfBudgetDetail: 'PORTFOLIO_OUT_OF_BUDGET_DETAIL',
  PortfolioPendingStartDateDetail: 'PORTFOLIO_PENDING_START_DATE_DETAIL',
  PortfolioEndedDetail: 'PORTFOLIO_ENDED_DETAIL',
  AdvertiserPolicingSuspendedDetail: 'ADVERTISER_POLICING_SUSPENDED_DETAIL',
  AdvertiserPolicingPendingReviewDetail: 'ADVERTISER_POLICING_PENDING_REVIEW_DETAIL',
  AdvertiserArchivedDetail: 'ADVERTISER_ARCHIVED_DETAIL',
  AdvertiserPausedDetail: 'ADVERTISER_PAUSED_DETAIL',
  AdvertiserOutOfBudgetDetail: 'ADVERTISER_OUT_OF_BUDGET_DETAIL',
  AdvertiserPaymentFailureDetail: 'ADVERTISER_PAYMENT_FAILURE_DETAIL',
  AdStatusLiveDetail: 'AD_STATUS_LIVE_DETAIL',
  AdPolicingPendingReview: 'AD_POLICING_PENDING_REVIEW',
  AdPolicingSuspendedDetail: 'AD_POLICING_SUSPENDED_DETAIL',
  AdPausedDetail: 'AD_PAUSED_DETAIL',
  AdArchivedDetail: 'AD_ARCHIVED_DETAIL',
  MissingImageDetail: 'MISSING_IMAGE_DETAIL',
  ModerationAdultProductPvDetail: 'MODERATION_ADULT_PRODUCT_PV_DETAIL',
  ModerationAdultNoveltyPvDetail: 'MODERATION_ADULT_NOVELTY_PV_DETAIL',
  ModerationAdultSoftlinesPvDetail: 'MODERATION_ADULT_SOFTLINES_PV_DETAIL',
  ModerationContentNudityPvDetail: 'MODERATION_CONTENT_NUDITY_PV_DETAIL',
  ModerationContentProvocativePvDetail: 'MODERATION_CONTENT_PROVOCATIVE_PV_DETAIL',
  ModerationClaimWeightlossPvDetail: 'MODERATION_CLAIM_WEIGHTLOSS_PV_DETAIL',
  ModerationError404PvDetail: 'MODERATION_ERROR_404_PV_DETAIL',
  ModerationGraphicalSexualImagesPvDetail: 'MODERATION_GRAPHICAL_SEXUAL_IMAGES_PV_DETAIL',
  ModerationLanguageOffensivePvDetail: 'MODERATION_LANGUAGE_OFFENSIVE_PV_DETAIL',
  ModerationHfssProductPvDetail: 'MODERATION_HFSS_PRODUCT_PV_DETAIL',
  ModerationContentSmokingPvDetail: 'MODERATION_CONTENT_SMOKING_PV_DETAIL',
  ModerationSmokingRelatedPvDetail: 'MODERATION_SMOKING_RELATED_PV_DETAIL',
  ModerationNotCompliantToAdPolicyPvDetail: 'MODERATION_NOT_COMPLIANT_TO_AD_POLICY_PV_DETAIL',
  ModerationCriticalEventsPvDetail: 'MODERATION_CRITICAL_EVENTS_PV_DETAIL',
  AccountOutOfBudgetDetail: 'ACCOUNT_OUT_OF_BUDGET_DETAIL',
  AdvertiserAccountOutOfBudgetDetail: 'ADVERTISER_ACCOUNT_OUT_OF_BUDGET_DETAIL',
  AdvertiserExceedSpendsLimitDetail: 'ADVERTISER_EXCEED_SPENDS_LIMIT_DETAIL',
  AdvertiserStatusEnabledDetail: 'ADVERTISER_STATUS_ENABLED_DETAIL',
  AdCreationOfflineFailed: 'AD_CREATION_OFFLINE_FAILED',
  AdCreationOfflineInProgress: 'AD_CREATION_OFFLINE_IN_PROGRESS',
  AdCreationOfflinePending: 'AD_CREATION_OFFLINE_PENDING',
  CampaignAdsNotDeliveringDetail: 'CAMPAIGN_ADS_NOT_DELIVERING_DETAIL',
  LandingPageNotAvailableDetail: 'LANDING_PAGE_NOT_AVAILABLE_DETAIL',
  MissingDecorationDetail: 'MISSING_DECORATION_DETAIL',
  NotBuyableDetail: 'NOT_BUYABLE_DETAIL',
  NotInBuyboxDetail: 'NOT_IN_BUYBOX_DETAIL',
  OutOfStockDetail: 'OUT_OF_STOCK_DETAIL',
  SecurityScanPendingReview: 'SECURITY_SCAN_PENDING_REVIEW',
  SecurityScanRejected: 'SECURITY_SCAN_REJECTED',
  StatusUnavailable: 'STATUS_UNAVAILABLE',
  TargetingClauseArchivedDetail: 'TARGETING_CLAUSE_ARCHIVED_DETAIL',
  TargetingClauseBlockedDetail: 'TARGETING_CLAUSE_BLOCKED_DETAIL',
  TargetingClausePausedDetail: 'TARGETING_CLAUSE_PAUSED_DETAIL',
  TargetingClausePolicingSuspendedDetail: 'TARGETING_CLAUSE_POLICING_SUSPENDED_DETAIL',
  TargetingClauseStatusLiveDetail: 'TARGETING_CLAUSE_STATUS_LIVE_DETAIL',
  AdultProduct: 'ADULT_PRODUCT',
  AsinQuarantined: 'ASIN_QUARANTINED',
  BrandRemoved: 'BRAND_REMOVED',
  CbaNotSupported: 'CBA_NOT_SUPPORTED',
  ClosedGl: 'CLOSED_GL',
  CpIneligible: 'CP_INELIGIBLE',
  CpIneligibleAsin: 'CP_INELIGIBLE_ASIN',
  CpIneligibleUnknown: 'CP_INELIGIBLE_UNKNOWN',
  CpIneligibleVendor: 'CP_INELIGIBLE_VENDOR',
  EligibleDetail: 'ELIGIBLE_DETAIL',
  IneligibleCondition: 'INELIGIBLE_CONDITION',
  InventoryIncomplete: 'INVENTORY_INCOMPLETE',
  ItemMissing: 'ITEM_MISSING',
  LandingPageIneligible: 'LANDING_PAGE_INELIGIBLE',
  NoInventoryDetail: 'NO_INVENTORY_DETAIL',
  NoPurchasableOfferDetail: 'NO_PURCHASABLE_OFFER_DETAIL',
  OfferMissingDetail: 'OFFER_MISSING_DETAIL',
  PirRuleExcluded: 'PIR_RULE_EXCLUDED',
  RestrictedGl: 'RESTRICTED_GL',
  SkuDefective: 'SKU_DEFECTIVE',
  VariationParent: 'VARIATION_PARENT',
  AdPolicingPendingReviewDetail: 'AD_POLICING_PENDING_REVIEW_DETAIL',
  Other: 'OTHER',
} as const;

export type SponsoredProductsAdServingStatusReason =
  (typeof SponsoredProductsAdServingStatusReason)[keyof typeof SponsoredProductsAdServingStatusReason];

/**
 *
 * @export
 * @interface SponsoredProductsApiGatewayContext
 */
export interface SponsoredProductsApiGatewayContext {
  /**
   *
   * @type {string}
   * @memberof SponsoredProductsApiGatewayContext
   */
  marketplaceId?: string;
  /**
   *
   * @type {string}
   * @memberof SponsoredProductsApiGatewayContext
   */
  clientId?: string;
  /**
   *
   * @type {string}
   * @memberof SponsoredProductsApiGatewayContext
   */
  requestId?: string;
  /**
   *
   * @type {string}
   * @memberof SponsoredProductsApiGatewayContext
   */
  entityType?: string;
  /**
   *
   * @type {string}
   * @memberof SponsoredProductsApiGatewayContext
   */
  entityId?: string;
  /**
   *
   * @type {string}
   * @memberof SponsoredProductsApiGatewayContext
   */
  contentType?: string;
  /**
   *
   * @type {string}
   * @memberof SponsoredProductsApiGatewayContext
   */
  advertiserId?: string;
}
/**
 * Errors related to ad eligibility
 * @export
 * @interface SponsoredProductsApplicableMarketplacesError
 */
export interface SponsoredProductsApplicableMarketplacesError {
  /**
   *
   * @type {SponsoredProductsApplicableMarketplacesErrorReason}
   * @memberof SponsoredProductsApplicableMarketplacesError
   */
  reason: SponsoredProductsApplicableMarketplacesErrorReason;
  /**
   *
   * @type {SponsoredProductsErrorCause}
   * @memberof SponsoredProductsApplicableMarketplacesError
   */
  cause?: SponsoredProductsErrorCause;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsApplicableMarketplacesError
   */
  message: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsApplicableMarketplacesErrorReason = {
  ApplicableMarketplacesMismatchError: 'APPLICABLE_MARKETPLACES_MISMATCH_ERROR',
} as const;

export type SponsoredProductsApplicableMarketplacesErrorReason =
  (typeof SponsoredProductsApplicableMarketplacesErrorReason)[keyof typeof SponsoredProductsApplicableMarketplacesErrorReason];

/**
 *
 * @export
 * @interface SponsoredProductsAsinFilter
 */
export interface SponsoredProductsAsinFilter {
  /**
   *
   * @type {SponsoredProductsQueryTermMatchType}
   * @memberof SponsoredProductsAsinFilter
   */
  queryTermMatchType?: SponsoredProductsQueryTermMatchType;
  /**
   *
   * @type {Array<string>}
   * @memberof SponsoredProductsAsinFilter
   */
  include?: Array<string>;
}

/**
 * Errors related to author asin ownership
 * @export
 * @interface SponsoredProductsAsinOwnershipError
 */
export interface SponsoredProductsAsinOwnershipError {
  /**
   *
   * @type {SponsoredProductsAsinOwnershipErrorReason}
   * @memberof SponsoredProductsAsinOwnershipError
   */
  reason: SponsoredProductsAsinOwnershipErrorReason;
  /**
   *
   * @type {SponsoredProductsErrorCause}
   * @memberof SponsoredProductsAsinOwnershipError
   */
  cause?: SponsoredProductsErrorCause;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsAsinOwnershipError
   */
  message: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsAsinOwnershipErrorReason = {
  AsinNotOwnedByAuthor: 'ASIN_NOT_OWNED_BY_AUTHOR',
} as const;

export type SponsoredProductsAsinOwnershipErrorReason =
  (typeof SponsoredProductsAsinOwnershipErrorReason)[keyof typeof SponsoredProductsAsinOwnershipErrorReason];

/**
 * Entity state for async status
 * @export
 * @enum {string}
 */

export const SponsoredProductsAsyncStatus = {
  Waiting: 'WAITING',
  Paused: 'PAUSED',
  Failed: 'FAILED',
  Succeed: 'SUCCEED',
} as const;

export type SponsoredProductsAsyncStatus = (typeof SponsoredProductsAsyncStatus)[keyof typeof SponsoredProductsAsyncStatus];

/**
 *
 * @export
 * @interface SponsoredProductsAudienceSegment
 */
export interface SponsoredProductsAudienceSegment {
  /**
   * `audienceId` is specified based on the `audienceSegmentType` used.
   * @type {string}
   * @memberof SponsoredProductsAudienceSegment
   */
  audienceId: string;
  /**
   *
   * @type {SponsoredProductsAudienceSegmentType}
   * @memberof SponsoredProductsAudienceSegment
   */
  audienceSegmentType?: SponsoredProductsAudienceSegmentType;
}

/**
 * DEPRECATED: This field is no longer used and any provided value will be ignored. The audience type is automatically determined via the Discovery API [ListTargetableEntities](https://advertising.amazon.com/API/docs/en-us/targetable-entities#operation/ListTargetableEntities) by examining the Audience path. Audience IDs are guaranteed to be unique across all audience types, enabling this inference. | Value               | Description| |---------------------|------------| | `SPONSORED_ADS_AMC` | This type refers to the Audience Segments created in AMC for Sponsored Ads. See [AMC API](https://advertising.amazon.com/API/docs/en-us/amc-rba#tag/Rule-based-audience) for details on how to create AMC Audiences. Once the AMC Audiences are created, the Audience Ids can be retrieved using the Discovery API [ListTargetableEntities](https://advertising.amazon.com/API/docs/en-us/targetable-entities#operation/ListTargetableEntities) with parameters; `adProduct`=`SPONSORED_PRODUCTS`, `targetTypeFilter`=`AUDIENCE` and `pathsFilter` = `[[\"Audience Category\", \"Custom-built\", \"AMC\"]]`. Only the audiences retrieved using these filters are usable.| | `BEHAVIOR_DYNAMIC`  | This type refers to the Audience Segments created by Amazon for Sponsored Ads. The Audience Ids can be retrieved using the Discovery API [ListTargetableEntities](https://advertising.amazon.com/API/docs/en-us/targetable-entities#operation/ListTargetableEntities) with parameters; `adProduct`=`SPONSORED_PRODUCTS`, `targetTypeFilter`=`AUDIENCE` and `pathsFilter` = `[[\"Audience Category\", \"Custom-built\", \"Product\"]]`. Only the audiences retrieved using these filters are usable.|
 * @export
 * @enum {string}
 */

export const SponsoredProductsAudienceSegmentType = {
  SponsoredAdsAmc: 'SPONSORED_ADS_AMC',
  BehaviorDynamic: 'BEHAVIOR_DYNAMIC',
} as const;

export type SponsoredProductsAudienceSegmentType = (typeof SponsoredProductsAudienceSegmentType)[keyof typeof SponsoredProductsAudienceSegmentType];

/**
 * Errors related to bids
 * @export
 * @interface SponsoredProductsBiddingError
 */
export interface SponsoredProductsBiddingError {
  /**
   *
   * @type {SponsoredProductsBiddingErrorReason}
   * @memberof SponsoredProductsBiddingError
   */
  reason: SponsoredProductsBiddingErrorReason;
  /**
   *
   * @type {SponsoredProductsMarketplace}
   * @memberof SponsoredProductsBiddingError
   */
  marketplace?: SponsoredProductsMarketplace;
  /**
   *
   * @type {SponsoredProductsErrorCause}
   * @memberof SponsoredProductsBiddingError
   */
  cause?: SponsoredProductsErrorCause;
  /**
   *
   * @type {string}
   * @memberof SponsoredProductsBiddingError
   */
  upperLimit?: string;
  /**
   *
   * @type {string}
   * @memberof SponsoredProductsBiddingError
   */
  lowerLimit?: string;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsBiddingError
   */
  message: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsBiddingErrorReason = {
  BidGtBudget: 'BID_GT_BUDGET',
  BidOutOfMarketPlaceRange: 'BID_OUT_OF_MARKET_PLACE_RANGE',
  BidInvalidPlacement: 'BID_INVALID_PLACEMENT',
  BidInvalidShopperCohortType: 'BID_INVALID_SHOPPER_COHORT_TYPE',
  BidShopperCohortsMoreThanAllowed: 'BID_SHOPPER_COHORTS_MORE_THAN_ALLOWED',
  BidMissingAudiences: 'BID_MISSING_AUDIENCES',
  BidAudiencesMoreThanAllowed: 'BID_AUDIENCES_MORE_THAN_ALLOWED',
  BidInvalidAudienceSegmentType: 'BID_INVALID_AUDIENCE_SEGMENT_TYPE',
  BidInvalidAudienceId: 'BID_INVALID_AUDIENCE_ID',
} as const;

export type SponsoredProductsBiddingErrorReason = (typeof SponsoredProductsBiddingErrorReason)[keyof typeof SponsoredProductsBiddingErrorReason];

/**
 * The bidding strategy. | Value | Strategy name | Description | |----------------|---------------|-------------| | `LEGACY_FOR_SALES` | Dynamic bids - down only | Lowers your bids in real time when your ad may be less likely to convert to a sale. Campaigns created before the release of the bidding controls feature used this setting by default. | | `AUTO_FOR_SALES` | Dynamic bids - up and down | Increases or decreases your bids in real time by a maximum of 100%. With this setting bids increase when your ad is more likely to convert to a sale, and bids decrease when less likely to convert to a sale. | | `MANUAL` | Fixed bid | Uses your exact bid and any placement adjustments you set, and is not subject to dynamic bidding. | | `RULE_BASED` | Rule based bidding | See Rule based bidding documentation https://advertising.amazon.com/API/docs/en-us/sponsored-products/rule-based-bidding/overview |
 * @export
 * @enum {string}
 */

export const SponsoredProductsBiddingStrategy = {
  LegacyForSales: 'LEGACY_FOR_SALES',
  AutoForSales: 'AUTO_FOR_SALES',
  Manual: 'MANUAL',
  RuleBased: 'RULE_BASED',
  Other: 'OTHER',
} as const;

export type SponsoredProductsBiddingStrategy = (typeof SponsoredProductsBiddingStrategy)[keyof typeof SponsoredProductsBiddingStrategy];

/**
 * Errors related to bids
 * @export
 * @interface SponsoredProductsBillingError
 */
export interface SponsoredProductsBillingError {
  /**
   *
   * @type {SponsoredProductsBillingErrorReason}
   * @memberof SponsoredProductsBillingError
   */
  reason: SponsoredProductsBillingErrorReason;
  /**
   *
   * @type {SponsoredProductsErrorCause}
   * @memberof SponsoredProductsBillingError
   */
  cause?: SponsoredProductsErrorCause;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsBillingError
   */
  message: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsBillingErrorReason = {
  AdvertiserSuspended: 'ADVERTISER_SUSPENDED',
  BillingAccountNotFound: 'BILLING_ACCOUNT_NOT_FOUND',
  PaymentProfileNotFound: 'PAYMENT_PROFILE_NOT_FOUND',
  ExpiredPaymentMethod: 'EXPIRED_PAYMENT_METHOD',
  VettingFailure: 'VETTING_FAILURE',
  AdvertiserBillingSetupIncomplete: 'ADVERTISER_BILLING_SETUP_INCOMPLETE',
} as const;

export type SponsoredProductsBillingErrorReason = (typeof SponsoredProductsBillingErrorReason)[keyof typeof SponsoredProductsBillingErrorReason];

/**
 *
 * @export
 * @interface SponsoredProductsBudget
 */
export interface SponsoredProductsBudget {
  /**
   *
   * @type {SponsoredProductsBudgetType}
   * @memberof SponsoredProductsBudget
   */
  budgetType: SponsoredProductsBudgetType;
  /**
   * Monetary value
   * @type {number}
   * @memberof SponsoredProductsBudget
   */
  budget: number;
  /**
   * Monetary value
   * @type {number}
   * @memberof SponsoredProductsBudget
   */
  effectiveBudget?: number;
}

/**
 *
 * @export
 * @interface SponsoredProductsBudgetError
 */
export interface SponsoredProductsBudgetError {
  /**
   *
   * @type {SponsoredProductsBudgetErrorReason}
   * @memberof SponsoredProductsBudgetError
   */
  reason: SponsoredProductsBudgetErrorReason;
  /**
   *
   * @type {SponsoredProductsErrorCause}
   * @memberof SponsoredProductsBudgetError
   */
  cause?: SponsoredProductsErrorCause;
  /**
   *
   * @type {string}
   * @memberof SponsoredProductsBudgetError
   */
  upperLimit?: string;
  /**
   *
   * @type {string}
   * @memberof SponsoredProductsBudgetError
   */
  lowerLimit?: string;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsBudgetError
   */
  message: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsBudgetErrorReason = {
  BudgetTooLow: 'BUDGET_TOO_LOW',
  BudgetTooHigh: 'BUDGET_TOO_HIGH',
  BudgetLtDefaultBids: 'BUDGET_LT_DEFAULT_BIDS',
  BudgetLtKeywordBids: 'BUDGET_LT_KEYWORD_BIDS',
  BudgetLtPredefinedTargetBids: 'BUDGET_LT_PREDEFINED_TARGET_BIDS',
  BudgetOutOfMarketPlaceRange: 'BUDGET_OUT_OF_MARKET_PLACE_RANGE',
  BudgetCurrencyDoesNotMatchMarketplaceSettings: 'BUDGET_CURRENCY_DOES_NOT_MATCH_MARKETPLACE_SETTINGS',
  BudgetingPolicyInvalid: 'BUDGETING_POLICY_INVALID',
  MissingBudgetingPolicy: 'MISSING_BUDGETING_POLICY',
  MissingInBudgetFlag: 'MISSING_IN_BUDGET_FLAG',
} as const;

export type SponsoredProductsBudgetErrorReason = (typeof SponsoredProductsBudgetErrorReason)[keyof typeof SponsoredProductsBudgetErrorReason];

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsBudgetType = {
  Daily: 'DAILY',
  Other: 'OTHER',
} as const;

export type SponsoredProductsBudgetType = (typeof SponsoredProductsBudgetType)[keyof typeof SponsoredProductsBudgetType];

/**
 *
 * @export
 * @interface SponsoredProductsBulkAdGroupOperationResponse
 */
export interface SponsoredProductsBulkAdGroupOperationResponse {
  /**
   *
   * @type {Array<SponsoredProductsAdGroupSuccessResponseItem>}
   * @memberof SponsoredProductsBulkAdGroupOperationResponse
   */
  success?: Array<SponsoredProductsAdGroupSuccessResponseItem>;
  /**
   *
   * @type {Array<SponsoredProductsAdGroupFailureResponseItem>}
   * @memberof SponsoredProductsBulkAdGroupOperationResponse
   */
  error?: Array<SponsoredProductsAdGroupFailureResponseItem>;
}
/**
 *
 * @export
 * @interface SponsoredProductsBulkCampaignNegativeKeywordOperationResponse
 */
export interface SponsoredProductsBulkCampaignNegativeKeywordOperationResponse {
  /**
   *
   * @type {Array<SponsoredProductsCampaignNegativeKeywordSuccessResponseItem>}
   * @memberof SponsoredProductsBulkCampaignNegativeKeywordOperationResponse
   */
  success?: Array<SponsoredProductsCampaignNegativeKeywordSuccessResponseItem>;
  /**
   *
   * @type {Array<SponsoredProductsCampaignNegativeKeywordFailureResponseItem>}
   * @memberof SponsoredProductsBulkCampaignNegativeKeywordOperationResponse
   */
  error?: Array<SponsoredProductsCampaignNegativeKeywordFailureResponseItem>;
}
/**
 *
 * @export
 * @interface SponsoredProductsBulkCampaignNegativeTargetingClauseOperationResponse
 */
export interface SponsoredProductsBulkCampaignNegativeTargetingClauseOperationResponse {
  /**
   *
   * @type {Array<SponsoredProductsCampaignNegativeTargetingClauseSuccessResponseItem>}
   * @memberof SponsoredProductsBulkCampaignNegativeTargetingClauseOperationResponse
   */
  success?: Array<SponsoredProductsCampaignNegativeTargetingClauseSuccessResponseItem>;
  /**
   *
   * @type {Array<SponsoredProductsCampaignNegativeTargetingClauseFailureResponseItem>}
   * @memberof SponsoredProductsBulkCampaignNegativeTargetingClauseOperationResponse
   */
  error?: Array<SponsoredProductsCampaignNegativeTargetingClauseFailureResponseItem>;
}
/**
 *
 * @export
 * @interface SponsoredProductsBulkCampaignOperationResponse
 */
export interface SponsoredProductsBulkCampaignOperationResponse {
  /**
   *
   * @type {Array<SponsoredProductsCampaignMutationSuccessResponseItem>}
   * @memberof SponsoredProductsBulkCampaignOperationResponse
   */
  success?: Array<SponsoredProductsCampaignMutationSuccessResponseItem>;
  /**
   *
   * @type {Array<SponsoredProductsCampaignMutationFailureResponseItem>}
   * @memberof SponsoredProductsBulkCampaignOperationResponse
   */
  error?: Array<SponsoredProductsCampaignMutationFailureResponseItem>;
}
/**
 *
 * @export
 * @interface SponsoredProductsBulkDraftAdGroupOperationResponse
 */
export interface SponsoredProductsBulkDraftAdGroupOperationResponse {
  /**
   *
   * @type {Array<SponsoredProductsDraftAdGroupSuccessResponseItem>}
   * @memberof SponsoredProductsBulkDraftAdGroupOperationResponse
   */
  success?: Array<SponsoredProductsDraftAdGroupSuccessResponseItem>;
  /**
   *
   * @type {Array<SponsoredProductsDraftAdGroupFailureResponseItem>}
   * @memberof SponsoredProductsBulkDraftAdGroupOperationResponse
   */
  error?: Array<SponsoredProductsDraftAdGroupFailureResponseItem>;
}
/**
 *
 * @export
 * @interface SponsoredProductsBulkDraftCampaignNegativeKeywordOperationResponse
 */
export interface SponsoredProductsBulkDraftCampaignNegativeKeywordOperationResponse {
  /**
   *
   * @type {Array<SponsoredProductsDraftCampaignNegativeKeywordSuccessResponseItem>}
   * @memberof SponsoredProductsBulkDraftCampaignNegativeKeywordOperationResponse
   */
  success?: Array<SponsoredProductsDraftCampaignNegativeKeywordSuccessResponseItem>;
  /**
   *
   * @type {Array<SponsoredProductsDraftCampaignNegativeKeywordFailureResponseItem>}
   * @memberof SponsoredProductsBulkDraftCampaignNegativeKeywordOperationResponse
   */
  error?: Array<SponsoredProductsDraftCampaignNegativeKeywordFailureResponseItem>;
}
/**
 *
 * @export
 * @interface SponsoredProductsBulkDraftCampaignOperationResponse
 */
export interface SponsoredProductsBulkDraftCampaignOperationResponse {
  /**
   *
   * @type {Array<SponsoredProductsDraftCampaignMutationSuccessResponseItem>}
   * @memberof SponsoredProductsBulkDraftCampaignOperationResponse
   */
  success?: Array<SponsoredProductsDraftCampaignMutationSuccessResponseItem>;
  /**
   *
   * @type {Array<SponsoredProductsDraftCampaignMutationFailureResponseItem>}
   * @memberof SponsoredProductsBulkDraftCampaignOperationResponse
   */
  error?: Array<SponsoredProductsDraftCampaignMutationFailureResponseItem>;
}
/**
 *
 * @export
 * @interface SponsoredProductsBulkDraftKeywordOperationResponse
 */
export interface SponsoredProductsBulkDraftKeywordOperationResponse {
  /**
   *
   * @type {Array<SponsoredProductsDraftKeywordSuccessResponseItem>}
   * @memberof SponsoredProductsBulkDraftKeywordOperationResponse
   */
  success?: Array<SponsoredProductsDraftKeywordSuccessResponseItem>;
  /**
   *
   * @type {Array<SponsoredProductsDraftKeywordFailureResponseItem>}
   * @memberof SponsoredProductsBulkDraftKeywordOperationResponse
   */
  error?: Array<SponsoredProductsDraftKeywordFailureResponseItem>;
}
/**
 *
 * @export
 * @interface SponsoredProductsBulkDraftNegativeKeywordOperationResponse
 */
export interface SponsoredProductsBulkDraftNegativeKeywordOperationResponse {
  /**
   *
   * @type {Array<SponsoredProductsDraftNegativeKeywordSuccessResponseItem>}
   * @memberof SponsoredProductsBulkDraftNegativeKeywordOperationResponse
   */
  success?: Array<SponsoredProductsDraftNegativeKeywordSuccessResponseItem>;
  /**
   *
   * @type {Array<SponsoredProductsDraftNegativeKeywordFailureResponseItem>}
   * @memberof SponsoredProductsBulkDraftNegativeKeywordOperationResponse
   */
  error?: Array<SponsoredProductsDraftNegativeKeywordFailureResponseItem>;
}
/**
 *
 * @export
 * @interface SponsoredProductsBulkDraftNegativeTargetingClauseOperationResponse
 */
export interface SponsoredProductsBulkDraftNegativeTargetingClauseOperationResponse {
  /**
   *
   * @type {Array<SponsoredProductsDraftNegativeTargetingClauseSuccessResponseItem>}
   * @memberof SponsoredProductsBulkDraftNegativeTargetingClauseOperationResponse
   */
  success?: Array<SponsoredProductsDraftNegativeTargetingClauseSuccessResponseItem>;
  /**
   *
   * @type {Array<SponsoredProductsDraftNegativeTargetingClauseFailureResponseItem>}
   * @memberof SponsoredProductsBulkDraftNegativeTargetingClauseOperationResponse
   */
  error?: Array<SponsoredProductsDraftNegativeTargetingClauseFailureResponseItem>;
}
/**
 *
 * @export
 * @interface SponsoredProductsBulkDraftProductAdOperationResponse
 */
export interface SponsoredProductsBulkDraftProductAdOperationResponse {
  /**
   *
   * @type {Array<SponsoredProductsDraftProductAdSuccessResponseItem>}
   * @memberof SponsoredProductsBulkDraftProductAdOperationResponse
   */
  success?: Array<SponsoredProductsDraftProductAdSuccessResponseItem>;
  /**
   *
   * @type {Array<SponsoredProductsDraftProductAdFailureResponseItem>}
   * @memberof SponsoredProductsBulkDraftProductAdOperationResponse
   */
  error?: Array<SponsoredProductsDraftProductAdFailureResponseItem>;
}
/**
 *
 * @export
 * @interface SponsoredProductsBulkDraftTargetingClauseOperationResponse
 */
export interface SponsoredProductsBulkDraftTargetingClauseOperationResponse {
  /**
   *
   * @type {Array<SponsoredProductsDraftTargetingClauseSuccessResponseItem>}
   * @memberof SponsoredProductsBulkDraftTargetingClauseOperationResponse
   */
  success?: Array<SponsoredProductsDraftTargetingClauseSuccessResponseItem>;
  /**
   *
   * @type {Array<SponsoredProductsDraftTargetingClauseFailureResponseItem>}
   * @memberof SponsoredProductsBulkDraftTargetingClauseOperationResponse
   */
  error?: Array<SponsoredProductsDraftTargetingClauseFailureResponseItem>;
}
/**
 *
 * @export
 * @interface SponsoredProductsBulkGlobalAdGroupOperationResponse
 */
export interface SponsoredProductsBulkGlobalAdGroupOperationResponse {
  /**
   *
   * @type {Array<SponsoredProductsGlobalAdGroupSuccessResponseItem>}
   * @memberof SponsoredProductsBulkGlobalAdGroupOperationResponse
   */
  success?: Array<SponsoredProductsGlobalAdGroupSuccessResponseItem>;
  /**
   *
   * @type {Array<SponsoredProductsGlobalAdGroupFailureResponseItem>}
   * @memberof SponsoredProductsBulkGlobalAdGroupOperationResponse
   */
  error?: Array<SponsoredProductsGlobalAdGroupFailureResponseItem>;
}
/**
 *
 * @export
 * @interface SponsoredProductsBulkGlobalCampaignNegativeKeywordOperationResponse
 */
export interface SponsoredProductsBulkGlobalCampaignNegativeKeywordOperationResponse {
  /**
   *
   * @type {Array<SponsoredProductsGlobalCampaignNegativeKeywordSuccessResponseItem>}
   * @memberof SponsoredProductsBulkGlobalCampaignNegativeKeywordOperationResponse
   */
  success?: Array<SponsoredProductsGlobalCampaignNegativeKeywordSuccessResponseItem>;
  /**
   *
   * @type {Array<SponsoredProductsGlobalCampaignNegativeKeywordFailureResponseItem>}
   * @memberof SponsoredProductsBulkGlobalCampaignNegativeKeywordOperationResponse
   */
  error?: Array<SponsoredProductsGlobalCampaignNegativeKeywordFailureResponseItem>;
}
/**
 *
 * @export
 * @interface SponsoredProductsBulkGlobalCampaignOperationResponse
 */
export interface SponsoredProductsBulkGlobalCampaignOperationResponse {
  /**
   *
   * @type {Array<SponsoredProductsGlobalCampaignMutationSuccessResponseItem>}
   * @memberof SponsoredProductsBulkGlobalCampaignOperationResponse
   */
  success?: Array<SponsoredProductsGlobalCampaignMutationSuccessResponseItem>;
  /**
   *
   * @type {Array<SponsoredProductsGlobalCampaignMutationFailureResponseItem>}
   * @memberof SponsoredProductsBulkGlobalCampaignOperationResponse
   */
  error?: Array<SponsoredProductsGlobalCampaignMutationFailureResponseItem>;
}
/**
 *
 * @export
 * @interface SponsoredProductsBulkGlobalKeywordOperationResponse
 */
export interface SponsoredProductsBulkGlobalKeywordOperationResponse {
  /**
   *
   * @type {Array<SponsoredProductsGlobalKeywordSuccessResponseItem>}
   * @memberof SponsoredProductsBulkGlobalKeywordOperationResponse
   */
  success?: Array<SponsoredProductsGlobalKeywordSuccessResponseItem>;
  /**
   *
   * @type {Array<SponsoredProductsGlobalKeywordFailureResponseItem>}
   * @memberof SponsoredProductsBulkGlobalKeywordOperationResponse
   */
  error?: Array<SponsoredProductsGlobalKeywordFailureResponseItem>;
}
/**
 *
 * @export
 * @interface SponsoredProductsBulkGlobalNegativeKeywordOperationResponse
 */
export interface SponsoredProductsBulkGlobalNegativeKeywordOperationResponse {
  /**
   *
   * @type {Array<SponsoredProductsGlobalNegativeKeywordSuccessResponseItem>}
   * @memberof SponsoredProductsBulkGlobalNegativeKeywordOperationResponse
   */
  success?: Array<SponsoredProductsGlobalNegativeKeywordSuccessResponseItem>;
  /**
   *
   * @type {Array<SponsoredProductsGlobalNegativeKeywordFailureResponseItem>}
   * @memberof SponsoredProductsBulkGlobalNegativeKeywordOperationResponse
   */
  error?: Array<SponsoredProductsGlobalNegativeKeywordFailureResponseItem>;
}
/**
 *
 * @export
 * @interface SponsoredProductsBulkGlobalNegativeTargetingClauseOperationResponse
 */
export interface SponsoredProductsBulkGlobalNegativeTargetingClauseOperationResponse {
  /**
   *
   * @type {Array<SponsoredProductsGlobalNegativeTargetingClauseSuccessResponseItem>}
   * @memberof SponsoredProductsBulkGlobalNegativeTargetingClauseOperationResponse
   */
  success?: Array<SponsoredProductsGlobalNegativeTargetingClauseSuccessResponseItem>;
  /**
   *
   * @type {Array<SponsoredProductsGlobalNegativeTargetingClauseFailureResponseItem>}
   * @memberof SponsoredProductsBulkGlobalNegativeTargetingClauseOperationResponse
   */
  error?: Array<SponsoredProductsGlobalNegativeTargetingClauseFailureResponseItem>;
}
/**
 *
 * @export
 * @interface SponsoredProductsBulkGlobalProductAdOperationResponse
 */
export interface SponsoredProductsBulkGlobalProductAdOperationResponse {
  /**
   *
   * @type {Array<SponsoredProductsGlobalProductAdSuccessResponseItem>}
   * @memberof SponsoredProductsBulkGlobalProductAdOperationResponse
   */
  success?: Array<SponsoredProductsGlobalProductAdSuccessResponseItem>;
  /**
   *
   * @type {Array<SponsoredProductsGlobalProductAdFailureResponseItem>}
   * @memberof SponsoredProductsBulkGlobalProductAdOperationResponse
   */
  error?: Array<SponsoredProductsGlobalProductAdFailureResponseItem>;
}
/**
 *
 * @export
 * @interface SponsoredProductsBulkGlobalTargetingClauseOperationResponse
 */
export interface SponsoredProductsBulkGlobalTargetingClauseOperationResponse {
  /**
   *
   * @type {Array<SponsoredProductsGlobalTargetingClauseSuccessResponseItem>}
   * @memberof SponsoredProductsBulkGlobalTargetingClauseOperationResponse
   */
  success?: Array<SponsoredProductsGlobalTargetingClauseSuccessResponseItem>;
  /**
   *
   * @type {Array<SponsoredProductsGlobalTargetingClauseFailureResponseItem>}
   * @memberof SponsoredProductsBulkGlobalTargetingClauseOperationResponse
   */
  error?: Array<SponsoredProductsGlobalTargetingClauseFailureResponseItem>;
}
/**
 *
 * @export
 * @interface SponsoredProductsBulkKeywordOperationResponse
 */
export interface SponsoredProductsBulkKeywordOperationResponse {
  /**
   *
   * @type {Array<SponsoredProductsKeywordSuccessResponseItem>}
   * @memberof SponsoredProductsBulkKeywordOperationResponse
   */
  success?: Array<SponsoredProductsKeywordSuccessResponseItem>;
  /**
   *
   * @type {Array<SponsoredProductsKeywordFailureResponseItem>}
   * @memberof SponsoredProductsBulkKeywordOperationResponse
   */
  error?: Array<SponsoredProductsKeywordFailureResponseItem>;
}
/**
 *
 * @export
 * @interface SponsoredProductsBulkNegativeKeywordOperationResponse
 */
export interface SponsoredProductsBulkNegativeKeywordOperationResponse {
  /**
   *
   * @type {Array<SponsoredProductsNegativeKeywordSuccessResponseItem>}
   * @memberof SponsoredProductsBulkNegativeKeywordOperationResponse
   */
  success?: Array<SponsoredProductsNegativeKeywordSuccessResponseItem>;
  /**
   *
   * @type {Array<SponsoredProductsNegativeKeywordFailureResponseItem>}
   * @memberof SponsoredProductsBulkNegativeKeywordOperationResponse
   */
  error?: Array<SponsoredProductsNegativeKeywordFailureResponseItem>;
}
/**
 *
 * @export
 * @interface SponsoredProductsBulkNegativeTargetingClauseOperationResponse
 */
export interface SponsoredProductsBulkNegativeTargetingClauseOperationResponse {
  /**
   *
   * @type {Array<SponsoredProductsNegativeTargetingClauseSuccessResponseItem>}
   * @memberof SponsoredProductsBulkNegativeTargetingClauseOperationResponse
   */
  success?: Array<SponsoredProductsNegativeTargetingClauseSuccessResponseItem>;
  /**
   *
   * @type {Array<SponsoredProductsNegativeTargetingClauseFailureResponseItem>}
   * @memberof SponsoredProductsBulkNegativeTargetingClauseOperationResponse
   */
  error?: Array<SponsoredProductsNegativeTargetingClauseFailureResponseItem>;
}
/**
 *
 * @export
 * @interface SponsoredProductsBulkProductAdOperationResponse
 */
export interface SponsoredProductsBulkProductAdOperationResponse {
  /**
   *
   * @type {Array<SponsoredProductsProductAdSuccessResponseItem>}
   * @memberof SponsoredProductsBulkProductAdOperationResponse
   */
  success?: Array<SponsoredProductsProductAdSuccessResponseItem>;
  /**
   *
   * @type {Array<SponsoredProductsProductAdFailureResponseItem>}
   * @memberof SponsoredProductsBulkProductAdOperationResponse
   */
  error?: Array<SponsoredProductsProductAdFailureResponseItem>;
}
/**
 *
 * @export
 * @interface SponsoredProductsBulkTargetingClauseOperationResponse
 */
export interface SponsoredProductsBulkTargetingClauseOperationResponse {
  /**
   *
   * @type {Array<SponsoredProductsTargetingClauseSuccessResponseItem>}
   * @memberof SponsoredProductsBulkTargetingClauseOperationResponse
   */
  success?: Array<SponsoredProductsTargetingClauseSuccessResponseItem>;
  /**
   *
   * @type {Array<SponsoredProductsTargetingClauseFailureResponseItem>}
   * @memberof SponsoredProductsBulkTargetingClauseOperationResponse
   */
  error?: Array<SponsoredProductsTargetingClauseFailureResponseItem>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCampaign
 */
export interface SponsoredProductsCampaign {
  /**
   * Restrict the ad to a particular site. If the value is absent (ie null), it means no site restrictions and defaults to current Sponsored Products campaign behavior. This field is coming up and is not ready for use at the moment.
   * @type {Array<SponsoredProductsSiteRestriction>}
   * @memberof SponsoredProductsCampaign
   */
  siteRestrictions?: Array<SponsoredProductsSiteRestriction>;
  /**
   *
   * @type {SponsoredProductsOffAmazonSettings}
   * @memberof SponsoredProductsCampaign
   */
  offAmazonSettings?: SponsoredProductsOffAmazonSettings;
  /**
   * The format of the date is YYYY-MM-DD.
   * @type {string}
   * @memberof SponsoredProductsCampaign
   */
  endDate?: string | null;
  /**
   * The identifier of the campaign.
   * @type {string}
   * @memberof SponsoredProductsCampaign
   */
  campaignId: string;
  /**
   *
   * @type {SponsoredProductsDynamicBidding}
   * @memberof SponsoredProductsCampaign
   */
  dynamicBidding?: SponsoredProductsDynamicBidding;
  /**
   * A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.
   * @type {{ [key: string]: string; }}
   * @memberof SponsoredProductsCampaign
   */
  tags?: { [key: string]: string };
  /**
   * The identifier of an existing portfolio to which the campaign is associated.
   * @type {string}
   * @memberof SponsoredProductsCampaign
   */
  portfolioId?: string;
  /**
   * The name of the campaign.
   * @type {string}
   * @memberof SponsoredProductsCampaign
   */
  name: string;
  /**
   *
   * @type {SponsoredProductsTargetingType}
   * @memberof SponsoredProductsCampaign
   */
  targetingType: SponsoredProductsTargetingType;
  /**
   *
   * @type {SponsoredProductsEntityState}
   * @memberof SponsoredProductsCampaign
   */
  state: SponsoredProductsEntityState;
  /**
   * The format of the date is YYYY-MM-DD.
   * @type {string}
   * @memberof SponsoredProductsCampaign
   */
  startDate: string;
  /**
   *
   * @type {SponsoredProductsBudget}
   * @memberof SponsoredProductsCampaign
   */
  budget: SponsoredProductsBudget;
  /**
   *
   * @type {SponsoredProductsCampaignExtendedData}
   * @memberof SponsoredProductsCampaign
   */
  extendedData?: SponsoredProductsCampaignExtendedData;
}

/**
 *
 * @export
 * @interface SponsoredProductsCampaignAccessError
 */
export interface SponsoredProductsCampaignAccessError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsCampaignAccessError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsCampaignAccessErrorSelector}
   * @memberof SponsoredProductsCampaignAccessError
   */
  errorValue: SponsoredProductsCampaignAccessErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsCampaignAccessErrorSelector
 */
export interface SponsoredProductsCampaignAccessErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsCampaignAccessErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsCampaignAccessErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsDateError}
   * @memberof SponsoredProductsCampaignAccessErrorSelector
   */
  dateError?: SponsoredProductsDateError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsCampaignAccessErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsCampaignAccessErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsCampaignAccessErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsCampaignAccessErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsCampaignAccessErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
  /**
   *
   * @type {SponsoredProductsInvalidInputError}
   * @memberof SponsoredProductsCampaignAccessErrorSelector
   */
  invalidInputError?: SponsoredProductsInvalidInputError;
}
/**
 * Exception resulting in accessing campaign management entities
 * @export
 * @interface SponsoredProductsCampaignAccessExceptionResponseContent
 */
export interface SponsoredProductsCampaignAccessExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsCampaignAccessExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsCampaignAccessExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsCampaignAccessError>}
   * @memberof SponsoredProductsCampaignAccessExceptionResponseContent
   */
  errors?: Array<SponsoredProductsCampaignAccessError>;
}

/**
 *
 * @export
 * @interface SponsoredProductsCampaignExtendedData
 */
export interface SponsoredProductsCampaignExtendedData {
  /**
   * Last updated date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsCampaignExtendedData
   */
  lastUpdateDateTime?: string;
  /**
   *
   * @type {SponsoredProductsCampaignServingStatus}
   * @memberof SponsoredProductsCampaignExtendedData
   */
  servingStatus?: SponsoredProductsCampaignServingStatus;
  /**
   * The serving status reasons of the Campaign
   * @type {Array<SponsoredProductsCampaignServingStatusDetail>}
   * @memberof SponsoredProductsCampaignExtendedData
   */
  servingStatusDetails?: Array<SponsoredProductsCampaignServingStatusDetail>;
  /**
   * Creation date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsCampaignExtendedData
   */
  creationDateTime?: string;
}

/**
 *
 * @export
 * @interface SponsoredProductsCampaignMutationError
 */
export interface SponsoredProductsCampaignMutationError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsCampaignMutationError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsCampaignMutationErrorSelector}
   * @memberof SponsoredProductsCampaignMutationError
   */
  errorValue: SponsoredProductsCampaignMutationErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsCampaignMutationErrorSelector
 */
export interface SponsoredProductsCampaignMutationErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityStateError}
   * @memberof SponsoredProductsCampaignMutationErrorSelector
   */
  entityStateError?: SponsoredProductsEntityStateError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsCampaignMutationErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsDateError}
   * @memberof SponsoredProductsCampaignMutationErrorSelector
   */
  dateError?: SponsoredProductsDateError;
  /**
   *
   * @type {SponsoredProductsBiddingError}
   * @memberof SponsoredProductsCampaignMutationErrorSelector
   */
  biddingError?: SponsoredProductsBiddingError;
  /**
   *
   * @type {SponsoredProductsDuplicateValueError}
   * @memberof SponsoredProductsCampaignMutationErrorSelector
   */
  duplicateValueError?: SponsoredProductsDuplicateValueError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsCampaignMutationErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsParentEntityError}
   * @memberof SponsoredProductsCampaignMutationErrorSelector
   */
  parentEntityError?: SponsoredProductsParentEntityError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsCampaignMutationErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsCampaignMutationErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsCampaignMutationErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsCampaignMutationErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsBudgetError}
   * @memberof SponsoredProductsCampaignMutationErrorSelector
   */
  budgetError?: SponsoredProductsBudgetError;
  /**
   *
   * @type {SponsoredProductsCurrencyError}
   * @memberof SponsoredProductsCampaignMutationErrorSelector
   */
  currencyError?: SponsoredProductsCurrencyError;
  /**
   *
   * @type {SponsoredProductsBillingError}
   * @memberof SponsoredProductsCampaignMutationErrorSelector
   */
  billingError?: SponsoredProductsBillingError;
  /**
   *
   * @type {SponsoredProductsEntityQuotaError}
   * @memberof SponsoredProductsCampaignMutationErrorSelector
   */
  entityQuotaError?: SponsoredProductsEntityQuotaError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsCampaignMutationErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
}
/**
 * Exception resulting in mutating campaign management entities
 * @export
 * @interface SponsoredProductsCampaignMutationExceptionResponseContent
 */
export interface SponsoredProductsCampaignMutationExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsCampaignMutationExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsCampaignMutationExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsCampaignMutationError>}
   * @memberof SponsoredProductsCampaignMutationExceptionResponseContent
   */
  errors?: Array<SponsoredProductsCampaignMutationError>;
}

/**
 *
 * @export
 * @interface SponsoredProductsCampaignMutationFailureResponseItem
 */
export interface SponsoredProductsCampaignMutationFailureResponseItem {
  /**
   * the index of the campaign in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsCampaignMutationFailureResponseItem
   */
  index: number;
  /**
   * A list of validation errors
   * @type {Array<SponsoredProductsCampaignMutationError>}
   * @memberof SponsoredProductsCampaignMutationFailureResponseItem
   */
  errors?: Array<SponsoredProductsCampaignMutationError>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCampaignMutationSuccessResponseItem
 */
export interface SponsoredProductsCampaignMutationSuccessResponseItem {
  /**
   * the campaign ID
   * @type {string}
   * @memberof SponsoredProductsCampaignMutationSuccessResponseItem
   */
  campaignId?: string;
  /**
   * the index of the campaign in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsCampaignMutationSuccessResponseItem
   */
  index: number;
  /**
   *
   * @type {SponsoredProductsCampaign}
   * @memberof SponsoredProductsCampaignMutationSuccessResponseItem
   */
  campaign?: SponsoredProductsCampaign;
}
/**
 *
 * @export
 * @interface SponsoredProductsCampaignNegativeKeyword
 */
export interface SponsoredProductsCampaignNegativeKeyword {
  /**
   * The identifier of the keyword.
   * @type {string}
   * @memberof SponsoredProductsCampaignNegativeKeyword
   */
  keywordId: string;
  /**
   * The identifier of the campaign to which the keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsCampaignNegativeKeyword
   */
  campaignId: string;
  /**
   *
   * @type {SponsoredProductsNegativeMatchType}
   * @memberof SponsoredProductsCampaignNegativeKeyword
   */
  matchType: SponsoredProductsNegativeMatchType;
  /**
   *
   * @type {SponsoredProductsEntityState}
   * @memberof SponsoredProductsCampaignNegativeKeyword
   */
  state: SponsoredProductsEntityState;
  /**
   * The keyword text.
   * @type {string}
   * @memberof SponsoredProductsCampaignNegativeKeyword
   */
  keywordText: string;
  /**
   *
   * @type {SponsoredProductsCampaignNegativeKeywordExtendedData}
   * @memberof SponsoredProductsCampaignNegativeKeyword
   */
  extendedData?: SponsoredProductsCampaignNegativeKeywordExtendedData;
}

/**
 *
 * @export
 * @interface SponsoredProductsCampaignNegativeKeywordAccessError
 */
export interface SponsoredProductsCampaignNegativeKeywordAccessError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsCampaignNegativeKeywordAccessError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsCampaignNegativeKeywordAccessErrorSelector}
   * @memberof SponsoredProductsCampaignNegativeKeywordAccessError
   */
  errorValue: SponsoredProductsCampaignNegativeKeywordAccessErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsCampaignNegativeKeywordAccessErrorSelector
 */
export interface SponsoredProductsCampaignNegativeKeywordAccessErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsCampaignNegativeKeywordAccessErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsCampaignNegativeKeywordAccessErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsCampaignNegativeKeywordAccessErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsCampaignNegativeKeywordAccessErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsCampaignNegativeKeywordAccessErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsCampaignNegativeKeywordAccessErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsInvalidInputError}
   * @memberof SponsoredProductsCampaignNegativeKeywordAccessErrorSelector
   */
  invalidInputError?: SponsoredProductsInvalidInputError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsCampaignNegativeKeywordAccessErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in accessing campaign management entities
 * @export
 * @interface SponsoredProductsCampaignNegativeKeywordAccessExceptionResponseContent
 */
export interface SponsoredProductsCampaignNegativeKeywordAccessExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsCampaignNegativeKeywordAccessExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsCampaignNegativeKeywordAccessExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsCampaignNegativeKeywordAccessError>}
   * @memberof SponsoredProductsCampaignNegativeKeywordAccessExceptionResponseContent
   */
  errors?: Array<SponsoredProductsCampaignNegativeKeywordAccessError>;
}

/**
 *
 * @export
 * @interface SponsoredProductsCampaignNegativeKeywordExtendedData
 */
export interface SponsoredProductsCampaignNegativeKeywordExtendedData {
  /**
   * Last updated date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsCampaignNegativeKeywordExtendedData
   */
  lastUpdateDateTime?: string;
  /**
   *
   * @type {SponsoredProductsKeywordServingStatus}
   * @memberof SponsoredProductsCampaignNegativeKeywordExtendedData
   */
  servingStatus?: SponsoredProductsKeywordServingStatus;
  /**
   * The serving status reasons of the Keyword
   * @type {Array<SponsoredProductsKeywordServingStatusDetail>}
   * @memberof SponsoredProductsCampaignNegativeKeywordExtendedData
   */
  servingStatusDetails?: Array<SponsoredProductsKeywordServingStatusDetail>;
  /**
   * Creation date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsCampaignNegativeKeywordExtendedData
   */
  creationDateTime?: string;
}

/**
 *
 * @export
 * @interface SponsoredProductsCampaignNegativeKeywordFailureResponseItem
 */
export interface SponsoredProductsCampaignNegativeKeywordFailureResponseItem {
  /**
   * the index of the campaign in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsCampaignNegativeKeywordFailureResponseItem
   */
  index: number;
  /**
   * A list of validation errors
   * @type {Array<SponsoredProductsCampaignNegativeKeywordMutationError>}
   * @memberof SponsoredProductsCampaignNegativeKeywordFailureResponseItem
   */
  errors?: Array<SponsoredProductsCampaignNegativeKeywordMutationError>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCampaignNegativeKeywordMutationError
 */
export interface SponsoredProductsCampaignNegativeKeywordMutationError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsCampaignNegativeKeywordMutationError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsCampaignNegativeKeywordMutationErrorSelector}
   * @memberof SponsoredProductsCampaignNegativeKeywordMutationError
   */
  errorValue: SponsoredProductsCampaignNegativeKeywordMutationErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsCampaignNegativeKeywordMutationErrorSelector
 */
export interface SponsoredProductsCampaignNegativeKeywordMutationErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsCampaignNegativeKeywordMutationErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsEntityStateError}
   * @memberof SponsoredProductsCampaignNegativeKeywordMutationErrorSelector
   */
  entityStateError?: SponsoredProductsEntityStateError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsCampaignNegativeKeywordMutationErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsCampaignNegativeKeywordMutationErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsDuplicateValueError}
   * @memberof SponsoredProductsCampaignNegativeKeywordMutationErrorSelector
   */
  duplicateValueError?: SponsoredProductsDuplicateValueError;
  /**
   *
   * @type {SponsoredProductsBillingError}
   * @memberof SponsoredProductsCampaignNegativeKeywordMutationErrorSelector
   */
  billingError?: SponsoredProductsBillingError;
  /**
   *
   * @type {SponsoredProductsEntityQuotaError}
   * @memberof SponsoredProductsCampaignNegativeKeywordMutationErrorSelector
   */
  entityQuotaError?: SponsoredProductsEntityQuotaError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsCampaignNegativeKeywordMutationErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsCampaignNegativeKeywordMutationErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsParentEntityError}
   * @memberof SponsoredProductsCampaignNegativeKeywordMutationErrorSelector
   */
  parentEntityError?: SponsoredProductsParentEntityError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsCampaignNegativeKeywordMutationErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsCampaignNegativeKeywordMutationErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in mutating campaign management entities
 * @export
 * @interface SponsoredProductsCampaignNegativeKeywordMutationExceptionResponseContent
 */
export interface SponsoredProductsCampaignNegativeKeywordMutationExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsCampaignNegativeKeywordMutationExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsCampaignNegativeKeywordMutationExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsCampaignNegativeKeywordMutationError>}
   * @memberof SponsoredProductsCampaignNegativeKeywordMutationExceptionResponseContent
   */
  errors?: Array<SponsoredProductsCampaignNegativeKeywordMutationError>;
}

/**
 *
 * @export
 * @interface SponsoredProductsCampaignNegativeKeywordSuccessResponseItem
 */
export interface SponsoredProductsCampaignNegativeKeywordSuccessResponseItem {
  /**
   *
   * @type {SponsoredProductsCampaignNegativeKeyword}
   * @memberof SponsoredProductsCampaignNegativeKeywordSuccessResponseItem
   */
  campaignNegativeKeyword?: SponsoredProductsCampaignNegativeKeyword;
  /**
   * the campaignNegativeKeyword ID
   * @type {string}
   * @memberof SponsoredProductsCampaignNegativeKeywordSuccessResponseItem
   */
  campaignNegativeKeywordId?: string;
  /**
   * the index of the campaign in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsCampaignNegativeKeywordSuccessResponseItem
   */
  index: number;
}
/**
 *
 * @export
 * @interface SponsoredProductsCampaignNegativeTargetingClause
 */
export interface SponsoredProductsCampaignNegativeTargetingClause {
  /**
   * The CampaignNegativeTargetingClause expression.
   * @type {Array<SponsoredProductsNegativeTargetingExpressionPredicate>}
   * @memberof SponsoredProductsCampaignNegativeTargetingClause
   */
  expression: Array<SponsoredProductsNegativeTargetingExpressionPredicate>;
  /**
   * The target identifier
   * @type {string}
   * @memberof SponsoredProductsCampaignNegativeTargetingClause
   */
  targetId: string;
  /**
   * The resolved CampaignNegativeTargetingClause expression.
   * @type {Array<SponsoredProductsNegativeTargetingExpressionPredicate>}
   * @memberof SponsoredProductsCampaignNegativeTargetingClause
   */
  resolvedExpression: Array<SponsoredProductsNegativeTargetingExpressionPredicate>;
  /**
   * The identifier of the campaign to which this target is associated.
   * @type {string}
   * @memberof SponsoredProductsCampaignNegativeTargetingClause
   */
  campaignId: string;
  /**
   *
   * @type {SponsoredProductsEntityState}
   * @memberof SponsoredProductsCampaignNegativeTargetingClause
   */
  state: SponsoredProductsEntityState;
  /**
   *
   * @type {SponsoredProductsCampaignNegativeTargetingClauseExtendedData}
   * @memberof SponsoredProductsCampaignNegativeTargetingClause
   */
  extendedData?: SponsoredProductsCampaignNegativeTargetingClauseExtendedData;
}

/**
 *
 * @export
 * @interface SponsoredProductsCampaignNegativeTargetingClauseExtendedData
 */
export interface SponsoredProductsCampaignNegativeTargetingClauseExtendedData {
  /**
   * Last updated date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsCampaignNegativeTargetingClauseExtendedData
   */
  lastUpdateDateTime?: string;
  /**
   *
   * @type {SponsoredProductsKeywordServingStatus}
   * @memberof SponsoredProductsCampaignNegativeTargetingClauseExtendedData
   */
  servingStatus?: SponsoredProductsKeywordServingStatus;
  /**
   * The serving status reasons of the CampaignNegativeTargetingClause
   * @type {Array<SponsoredProductsKeywordServingStatusDetail>}
   * @memberof SponsoredProductsCampaignNegativeTargetingClauseExtendedData
   */
  servingStatusDetails?: Array<SponsoredProductsKeywordServingStatusDetail>;
  /**
   * Creation date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsCampaignNegativeTargetingClauseExtendedData
   */
  creationDateTime?: string;
}

/**
 *
 * @export
 * @interface SponsoredProductsCampaignNegativeTargetingClauseFailureResponseItem
 */
export interface SponsoredProductsCampaignNegativeTargetingClauseFailureResponseItem {
  /**
   * the index of the CampaignNegativeTargets in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsCampaignNegativeTargetingClauseFailureResponseItem
   */
  index: number;
  /**
   * A list of validation errors
   * @type {Array<SponsoredProductsCampaignNegativeTargetsMutationError>}
   * @memberof SponsoredProductsCampaignNegativeTargetingClauseFailureResponseItem
   */
  errors?: Array<SponsoredProductsCampaignNegativeTargetsMutationError>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCampaignNegativeTargetingClauseSuccessResponseItem
 */
export interface SponsoredProductsCampaignNegativeTargetingClauseSuccessResponseItem {
  /**
   * the CampaignNegativeTargets ID
   * @type {string}
   * @memberof SponsoredProductsCampaignNegativeTargetingClauseSuccessResponseItem
   */
  campaignNegativeTargetingClauseId?: string;
  /**
   *
   * @type {SponsoredProductsCampaignNegativeTargetingClause}
   * @memberof SponsoredProductsCampaignNegativeTargetingClauseSuccessResponseItem
   */
  campaignNegativeTargetingClauses?: SponsoredProductsCampaignNegativeTargetingClause;
  /**
   * the index of the CampaignNegativeTargets in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsCampaignNegativeTargetingClauseSuccessResponseItem
   */
  index: number;
}
/**
 *
 * @export
 * @interface SponsoredProductsCampaignNegativeTargetsAccessError
 */
export interface SponsoredProductsCampaignNegativeTargetsAccessError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsCampaignNegativeTargetsAccessError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsCampaignNegativeTargetsAccessErrorSelector}
   * @memberof SponsoredProductsCampaignNegativeTargetsAccessError
   */
  errorValue: SponsoredProductsCampaignNegativeTargetsAccessErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsCampaignNegativeTargetsAccessErrorSelector
 */
export interface SponsoredProductsCampaignNegativeTargetsAccessErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsCampaignNegativeTargetsAccessErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsCampaignNegativeTargetsAccessErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsCampaignNegativeTargetsAccessErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsCampaignNegativeTargetsAccessErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsCampaignNegativeTargetsAccessErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsCampaignNegativeTargetsAccessErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsCampaignNegativeTargetsAccessErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
  /**
   *
   * @type {SponsoredProductsInvalidInputError}
   * @memberof SponsoredProductsCampaignNegativeTargetsAccessErrorSelector
   */
  invalidInputError?: SponsoredProductsInvalidInputError;
}
/**
 * Exception resulting in accessing campaign management entities
 * @export
 * @interface SponsoredProductsCampaignNegativeTargetsAccessExceptionResponseContent
 */
export interface SponsoredProductsCampaignNegativeTargetsAccessExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsCampaignNegativeTargetsAccessExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsCampaignNegativeTargetsAccessExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsCampaignNegativeTargetsAccessError>}
   * @memberof SponsoredProductsCampaignNegativeTargetsAccessExceptionResponseContent
   */
  errors?: Array<SponsoredProductsCampaignNegativeTargetsAccessError>;
}

/**
 *
 * @export
 * @interface SponsoredProductsCampaignNegativeTargetsMutationError
 */
export interface SponsoredProductsCampaignNegativeTargetsMutationError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsCampaignNegativeTargetsMutationError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsCampaignNegativeTargetsMutationErrorSelector}
   * @memberof SponsoredProductsCampaignNegativeTargetsMutationError
   */
  errorValue: SponsoredProductsCampaignNegativeTargetsMutationErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsCampaignNegativeTargetsMutationErrorSelector
 */
export interface SponsoredProductsCampaignNegativeTargetsMutationErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityStateError}
   * @memberof SponsoredProductsCampaignNegativeTargetsMutationErrorSelector
   */
  entityStateError?: SponsoredProductsEntityStateError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsCampaignNegativeTargetsMutationErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsDuplicateValueError}
   * @memberof SponsoredProductsCampaignNegativeTargetsMutationErrorSelector
   */
  duplicateValueError?: SponsoredProductsDuplicateValueError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsCampaignNegativeTargetsMutationErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsParentEntityError}
   * @memberof SponsoredProductsCampaignNegativeTargetsMutationErrorSelector
   */
  parentEntityError?: SponsoredProductsParentEntityError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsCampaignNegativeTargetsMutationErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsCampaignNegativeTargetsMutationErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsCampaignNegativeTargetsMutationErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsTargetingClauseSetupError}
   * @memberof SponsoredProductsCampaignNegativeTargetsMutationErrorSelector
   */
  targetingClauseSetupError?: SponsoredProductsTargetingClauseSetupError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsCampaignNegativeTargetsMutationErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsBillingError}
   * @memberof SponsoredProductsCampaignNegativeTargetsMutationErrorSelector
   */
  billingError?: SponsoredProductsBillingError;
  /**
   *
   * @type {SponsoredProductsEntityQuotaError}
   * @memberof SponsoredProductsCampaignNegativeTargetsMutationErrorSelector
   */
  entityQuotaError?: SponsoredProductsEntityQuotaError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsCampaignNegativeTargetsMutationErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
}
/**
 * Exception resulting in mutating campaign management entities
 * @export
 * @interface SponsoredProductsCampaignNegativeTargetsMutationExceptionResponseContent
 */
export interface SponsoredProductsCampaignNegativeTargetsMutationExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsCampaignNegativeTargetsMutationExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsCampaignNegativeTargetsMutationExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsCampaignNegativeTargetsMutationError>}
   * @memberof SponsoredProductsCampaignNegativeTargetsMutationExceptionResponseContent
   */
  errors?: Array<SponsoredProductsCampaignNegativeTargetsMutationError>;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsCampaignServingStatus = {
  CampaignStatusEnabled: 'CAMPAIGN_STATUS_ENABLED',
  CampaignPaused: 'CAMPAIGN_PAUSED',
  CampaignArchived: 'CAMPAIGN_ARCHIVED',
  PendingReview: 'PENDING_REVIEW',
  Rejected: 'REJECTED',
  PendingStartDate: 'PENDING_START_DATE',
  Ended: 'ENDED',
  CampaignOutOfBudget: 'CAMPAIGN_OUT_OF_BUDGET',
  CampaignIncomplete: 'CAMPAIGN_INCOMPLETE',
  PortfolioStatusEnabled: 'PORTFOLIO_STATUS_ENABLED',
  PortfolioPaused: 'PORTFOLIO_PAUSED',
  PortfolioArchived: 'PORTFOLIO_ARCHIVED',
  PortfolioOutOfBudget: 'PORTFOLIO_OUT_OF_BUDGET',
  PortfolioPendingStartDate: 'PORTFOLIO_PENDING_START_DATE',
  PortfolioEnded: 'PORTFOLIO_ENDED',
  AdvertiserPolicingSuspended: 'ADVERTISER_POLICING_SUSPENDED',
  AdvertiserPolicingPendingReview: 'ADVERTISER_POLICING_PENDING_REVIEW',
  AdvertiserArchived: 'ADVERTISER_ARCHIVED',
  AdvertiserPaused: 'ADVERTISER_PAUSED',
  AdvertiserOutOfBudget: 'ADVERTISER_OUT_OF_BUDGET',
  AdvertiserPaymentFailure: 'ADVERTISER_PAYMENT_FAILURE',
  AccountOutOfBudget: 'ACCOUNT_OUT_OF_BUDGET',
  Other: 'OTHER',
} as const;

export type SponsoredProductsCampaignServingStatus =
  (typeof SponsoredProductsCampaignServingStatus)[keyof typeof SponsoredProductsCampaignServingStatus];

/**
 *
 * @export
 * @interface SponsoredProductsCampaignServingStatusDetail
 */
export interface SponsoredProductsCampaignServingStatusDetail {
  /**
   *
   * @type {SponsoredProductsCampaignServingStatusReason}
   * @memberof SponsoredProductsCampaignServingStatusDetail
   */
  name?: SponsoredProductsCampaignServingStatusReason;
  /**
   * A URL with additional information about the status identifier.
   * @type {string}
   * @memberof SponsoredProductsCampaignServingStatusDetail
   */
  helpUrl?: string;
  /**
   * A human-readable description of the status identifier specified in the name field.
   * @type {string}
   * @memberof SponsoredProductsCampaignServingStatusDetail
   */
  message?: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsCampaignServingStatusReason = {
  CampaignStatusEnabledDetail: 'CAMPAIGN_STATUS_ENABLED_DETAIL',
  CampaignPausedDetail: 'CAMPAIGN_PAUSED_DETAIL',
  CampaignArchivedDetail: 'CAMPAIGN_ARCHIVED_DETAIL',
  PendingReviewDetail: 'PENDING_REVIEW_DETAIL',
  RejectedDetail: 'REJECTED_DETAIL',
  PendingStartDateDetail: 'PENDING_START_DATE_DETAIL',
  EndedDetail: 'ENDED_DETAIL',
  CampaignOutOfBudgetDetail: 'CAMPAIGN_OUT_OF_BUDGET_DETAIL',
  CampaignIncompleteDetail: 'CAMPAIGN_INCOMPLETE_DETAIL',
  PortfolioStatusEnabledDetail: 'PORTFOLIO_STATUS_ENABLED_DETAIL',
  PortfolioPausedDetail: 'PORTFOLIO_PAUSED_DETAIL',
  PortfolioArchivedDetail: 'PORTFOLIO_ARCHIVED_DETAIL',
  PortfolioOutOfBudgetDetail: 'PORTFOLIO_OUT_OF_BUDGET_DETAIL',
  PortfolioPendingStartDateDetail: 'PORTFOLIO_PENDING_START_DATE_DETAIL',
  PortfolioEndedDetail: 'PORTFOLIO_ENDED_DETAIL',
  AdvertiserPolicingSuspendedDetail: 'ADVERTISER_POLICING_SUSPENDED_DETAIL',
  AdvertiserPolicingPendingReviewDetail: 'ADVERTISER_POLICING_PENDING_REVIEW_DETAIL',
  AdvertiserArchivedDetail: 'ADVERTISER_ARCHIVED_DETAIL',
  AdvertiserPausedDetail: 'ADVERTISER_PAUSED_DETAIL',
  AdvertiserOutOfBudgetDetail: 'ADVERTISER_OUT_OF_BUDGET_DETAIL',
  AdvertiserPaymentFailureDetail: 'ADVERTISER_PAYMENT_FAILURE_DETAIL',
  AccountOutOfBudgetDetail: 'ACCOUNT_OUT_OF_BUDGET_DETAIL',
  Other: 'OTHER',
} as const;

export type SponsoredProductsCampaignServingStatusReason =
  (typeof SponsoredProductsCampaignServingStatusReason)[keyof typeof SponsoredProductsCampaignServingStatusReason];

/**
 * Targeting type of a campaign.
 * @export
 * @enum {string}
 */

export const SponsoredProductsCampaignTargetingType = {
  Manual: 'MANUAL',
  Auto: 'AUTO',
} as const;

export type SponsoredProductsCampaignTargetingType =
  (typeof SponsoredProductsCampaignTargetingType)[keyof typeof SponsoredProductsCampaignTargetingType];

/**
 *
 * @export
 * @interface SponsoredProductsCopyCampaign
 */
export interface SponsoredProductsCopyCampaign {
  /**
   *
   * @type {SponsoredProductsTargetCampaignAttributes}
   * @memberof SponsoredProductsCopyCampaign
   */
  targetCampaignAttributes: SponsoredProductsTargetCampaignAttributes;
  /**
   * entity object identifier
   * @type {string}
   * @memberof SponsoredProductsCopyCampaign
   */
  sourceCampaignId: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsCopyCampaignErrorDetail
 */
export interface SponsoredProductsCopyCampaignErrorDetail {
  /**
   * An enumerated success or error code for machine use
   * @type {string}
   * @memberof SponsoredProductsCopyCampaignErrorDetail
   */
  code?: string;
  /**
   * A human-readable description of the error, if unsuccessful
   * @type {string}
   * @memberof SponsoredProductsCopyCampaignErrorDetail
   */
  details?: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsCopyCampaignResponse
 */
export interface SponsoredProductsCopyCampaignResponse {
  /**
   * Id of the request to be passed in GET /copy/{requestId}.
   * @type {string}
   * @memberof SponsoredProductsCopyCampaignResponse
   */
  requestId?: string;
  /**
   *
   * @type {SponsoredProductsCopyCampaignErrorDetail}
   * @memberof SponsoredProductsCopyCampaignResponse
   */
  errorDetail?: SponsoredProductsCopyCampaignErrorDetail;
  /**
   *
   * @type {SponsoredProductsCopyCampaign}
   * @memberof SponsoredProductsCopyCampaignResponse
   */
  copyCampaignItem?: SponsoredProductsCopyCampaign;
}
/**
 *
 * @export
 * @interface SponsoredProductsCopyCampaignTaskDetails
 */
export interface SponsoredProductsCopyCampaignTaskDetails {
  /**
   * The target marketplace in obfuscated format.
   * @type {string}
   * @memberof SponsoredProductsCopyCampaignTaskDetails
   */
  targetMarketplaceId?: string;
  /**
   * The identifier of the campaign in the target marketplace.
   * @type {string}
   * @memberof SponsoredProductsCopyCampaignTaskDetails
   */
  targetCampaignId?: string;
  /**
   * Percent of copy operation that is complete
   * @type {number}
   * @memberof SponsoredProductsCopyCampaignTaskDetails
   */
  percentageCompleted?: number;
  /**
   * The source marketplace in obfuscated format.
   * @type {string}
   * @memberof SponsoredProductsCopyCampaignTaskDetails
   */
  sourceMarketplaceId?: string;
  /**
   * The identifier of the campaign in the source marketplace.
   * @type {string}
   * @memberof SponsoredProductsCopyCampaignTaskDetails
   */
  sourceCampaignId?: string;
  /**
   * The identifier of the advertiser in source marketplace.
   * @type {string}
   * @memberof SponsoredProductsCopyCampaignTaskDetails
   */
  sourceAdvertiserId?: string;
  /**
   * The identifier of the advertiser in the target marketplace.
   * @type {string}
   * @memberof SponsoredProductsCopyCampaignTaskDetails
   */
  targetAdvertiserId?: string;
  /**
   *
   * @type {SponsoredProductsAsyncStatus}
   * @memberof SponsoredProductsCopyCampaignTaskDetails
   */
  status?: SponsoredProductsAsyncStatus;
  /**
   * Errors that could occur during async process (up to 10)
   * @type {Array<SponsoredProductsCopyCampaignErrorDetail>}
   * @memberof SponsoredProductsCopyCampaignTaskDetails
   */
  errorDetails?: Array<SponsoredProductsCopyCampaignErrorDetail>;
}

/**
 *
 * @export
 * @interface SponsoredProductsCopySponsoredProductsCampaignsRequestContent
 */
export interface SponsoredProductsCopySponsoredProductsCampaignsRequestContent {
  /**
   * An array of campaigns.
   * @type {Array<SponsoredProductsCopyCampaign>}
   * @memberof SponsoredProductsCopySponsoredProductsCampaignsRequestContent
   */
  copyCampaignsItems: Array<SponsoredProductsCopyCampaign>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCopySponsoredProductsCampaignsResponseContent
 */
export interface SponsoredProductsCopySponsoredProductsCampaignsResponseContent {
  /**
   *
   * @type {Array<SponsoredProductsCopyCampaignResponse>}
   * @memberof SponsoredProductsCopySponsoredProductsCampaignsResponseContent
   */
  copyCampaignResponses: Array<SponsoredProductsCopyCampaignResponse>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCopySponsoredProductsCampaignsStatusResponseContent
 */
export interface SponsoredProductsCopySponsoredProductsCampaignsStatusResponseContent {
  /**
   *
   * @type {SponsoredProductsCopyCampaignTaskDetails}
   * @memberof SponsoredProductsCopySponsoredProductsCampaignsStatusResponseContent
   */
  asyncTaskDetail: SponsoredProductsCopyCampaignTaskDetails;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateAdGroup
 */
export interface SponsoredProductsCreateAdGroup {
  /**
   * The identifier of the campaign to which the keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateAdGroup
   */
  campaignId: string;
  /**
   * The name of the ad group.
   * @type {string}
   * @memberof SponsoredProductsCreateAdGroup
   */
  name: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateEntityState}
   * @memberof SponsoredProductsCreateAdGroup
   */
  state: SponsoredProductsCreateOrUpdateEntityState;
  /**
   * A bid value for use when no bid is specified for keywords in the ad group. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
   * @type {number}
   * @memberof SponsoredProductsCreateAdGroup
   */
  defaultBid: number;
}

/**
 *
 * @export
 * @interface SponsoredProductsCreateCampaign
 */
export interface SponsoredProductsCreateCampaign {
  /**
   * Restrict the ad to a particular site. If the value is absent (ie null), it means no site restrictions and defaults to current Sponsored Products campaign behavior. This field is coming up and is not ready for use at the moment.
   * @type {Array<SponsoredProductsSiteRestriction>}
   * @memberof SponsoredProductsCreateCampaign
   */
  siteRestrictions?: Array<SponsoredProductsSiteRestriction>;
  /**
   * The identifier of an existing portfolio to which the campaign is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateCampaign
   */
  portfolioId?: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateOffAmazonSettings}
   * @memberof SponsoredProductsCreateCampaign
   */
  offAmazonSettings?: SponsoredProductsCreateOrUpdateOffAmazonSettings;
  /**
   * The format of the date is YYYY-MM-DD.
   * @type {string}
   * @memberof SponsoredProductsCreateCampaign
   */
  endDate?: string | null;
  /**
   * The name of the campaign.
   * @type {string}
   * @memberof SponsoredProductsCreateCampaign
   */
  name: string;
  /**
   *
   * @type {SponsoredProductsTargetingType}
   * @memberof SponsoredProductsCreateCampaign
   */
  targetingType: SponsoredProductsTargetingType;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateEntityState}
   * @memberof SponsoredProductsCreateCampaign
   */
  state: SponsoredProductsCreateOrUpdateEntityState;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateDynamicBidding}
   * @memberof SponsoredProductsCreateCampaign
   */
  dynamicBidding?: SponsoredProductsCreateOrUpdateDynamicBidding;
  /**
   * Default: today\'s date. The format of the date is YYYY-MM-DD.
   * @type {string}
   * @memberof SponsoredProductsCreateCampaign
   */
  startDate?: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateBudget}
   * @memberof SponsoredProductsCreateCampaign
   */
  budget: SponsoredProductsCreateOrUpdateBudget;
  /**
   * A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.
   * @type {{ [key: string]: string; }}
   * @memberof SponsoredProductsCreateCampaign
   */
  tags?: { [key: string]: string };
}

/**
 *
 * @export
 * @interface SponsoredProductsCreateCampaignNegativeKeyword
 */
export interface SponsoredProductsCreateCampaignNegativeKeyword {
  /**
   * The identifier of the campaign to which the keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateCampaignNegativeKeyword
   */
  campaignId: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateNegativeMatchType}
   * @memberof SponsoredProductsCreateCampaignNegativeKeyword
   */
  matchType: SponsoredProductsCreateOrUpdateNegativeMatchType;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateEntityState}
   * @memberof SponsoredProductsCreateCampaignNegativeKeyword
   */
  state: SponsoredProductsCreateOrUpdateEntityState;
  /**
   * The keyword text.
   * @type {string}
   * @memberof SponsoredProductsCreateCampaignNegativeKeyword
   */
  keywordText: string;
}

/**
 *
 * @export
 * @interface SponsoredProductsCreateCampaignNegativeTargetingClause
 */
export interface SponsoredProductsCreateCampaignNegativeTargetingClause {
  /**
   * The NegativeTargeting expression.
   * @type {Array<SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate>}
   * @memberof SponsoredProductsCreateCampaignNegativeTargetingClause
   */
  expression: Array<SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate>;
  /**
   * The identifier of the campaign to which this target is associated. CampaignNegativeTargetingClauses are only available for AUTO campaigns
   * @type {string}
   * @memberof SponsoredProductsCreateCampaignNegativeTargetingClause
   */
  campaignId: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateEntityState}
   * @memberof SponsoredProductsCreateCampaignNegativeTargetingClause
   */
  state: SponsoredProductsCreateOrUpdateEntityState;
}

/**
 *
 * @export
 * @interface SponsoredProductsCreateDraftAdGroup
 */
export interface SponsoredProductsCreateDraftAdGroup {
  /**
   * The identifier of the campaign to which the keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateDraftAdGroup
   */
  campaignId: string;
  /**
   * The name of the ad group.
   * @type {string}
   * @memberof SponsoredProductsCreateDraftAdGroup
   */
  name?: string;
  /**
   * A bid value for use when no bid is specified for keywords in the ad group. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
   * @type {number}
   * @memberof SponsoredProductsCreateDraftAdGroup
   */
  defaultBid: number;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateDraftCampaign
 */
export interface SponsoredProductsCreateDraftCampaign {
  /**
   * Restrict the ad to a particular site. If the value is absent (ie null), it means no site restrictions and defaults to current Sponsored Products campaign behavior. This field is coming up and is not ready for use at the moment.
   * @type {Array<SponsoredProductsSiteRestriction>}
   * @memberof SponsoredProductsCreateDraftCampaign
   */
  siteRestrictions?: Array<SponsoredProductsSiteRestriction>;
  /**
   * The identifier of an existing portfolio to which the draft is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateDraftCampaign
   */
  portfolioId?: string;
  /**
   * The format of the date is YYYY-MM-DD.
   * @type {string}
   * @memberof SponsoredProductsCreateDraftCampaign
   */
  endDate?: string | null;
  /**
   * The name of the DraftCampaign.
   * @type {string}
   * @memberof SponsoredProductsCreateDraftCampaign
   */
  name: string;
  /**
   *
   * @type {SponsoredProductsTargetingType}
   * @memberof SponsoredProductsCreateDraftCampaign
   */
  targetingType: SponsoredProductsTargetingType;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateDraftCampaignDynamicBidding}
   * @memberof SponsoredProductsCreateDraftCampaign
   */
  dynamicBidding?: SponsoredProductsCreateOrUpdateDraftCampaignDynamicBidding;
  /**
   * The format of the date is YYYY-MM-DD.
   * @type {string}
   * @memberof SponsoredProductsCreateDraftCampaign
   */
  startDate?: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateDraftCampaignBudget}
   * @memberof SponsoredProductsCreateDraftCampaign
   */
  budget?: SponsoredProductsCreateOrUpdateDraftCampaignBudget;
  /**
   * A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.
   * @type {{ [key: string]: string; }}
   * @memberof SponsoredProductsCreateDraftCampaign
   */
  tags?: { [key: string]: string };
}

/**
 *
 * @export
 * @interface SponsoredProductsCreateDraftKeyword
 */
export interface SponsoredProductsCreateDraftKeyword {
  /**
   * The unlocalized draft keyword text in the preferred locale of the advertiser.
   * @type {string}
   * @memberof SponsoredProductsCreateDraftKeyword
   */
  nativeLanguageKeyword?: string;
  /**
   * The locale preference of the advertiser. For example, if the advertiser’s preferred language is Simplified Chinese, set the locale to zh_CN. Supported locales include: Simplified Chinese (locale: zh_CN) for US, UK and CA. English (locale: en_GB) for DE, FR, IT and ES.
   * @type {string}
   * @memberof SponsoredProductsCreateDraftKeyword
   */
  nativeLanguageLocale?: string;
  /**
   * The identifer of the campaign to which the draft keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateDraftKeyword
   */
  campaignId: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateMatchType}
   * @memberof SponsoredProductsCreateDraftKeyword
   */
  matchType?: SponsoredProductsCreateOrUpdateMatchType;
  /**
   * Bid associated with this draft keyword. Applicable to biddable match types only. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
   * @type {number}
   * @memberof SponsoredProductsCreateDraftKeyword
   */
  bid?: number;
  /**
   * The identifier of the ad group to which this draft keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateDraftKeyword
   */
  adGroupId: string;
  /**
   * The draft keyword text.
   * @type {string}
   * @memberof SponsoredProductsCreateDraftKeyword
   */
  keywordText: string;
}

/**
 *
 * @export
 * @interface SponsoredProductsCreateDraftNegativeKeyword
 */
export interface SponsoredProductsCreateDraftNegativeKeyword {
  /**
   * The unlocalized keyword text in the preferred locale of the advertiser
   * @type {string}
   * @memberof SponsoredProductsCreateDraftNegativeKeyword
   */
  nativeLanguageKeyword?: string;
  /**
   * The locale preference of the advertiser.
   * @type {string}
   * @memberof SponsoredProductsCreateDraftNegativeKeyword
   */
  nativeLanguageLocale?: string;
  /**
   * The identifer of the campaign to which the keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateDraftNegativeKeyword
   */
  campaignId: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateNegativeMatchType}
   * @memberof SponsoredProductsCreateDraftNegativeKeyword
   */
  matchType: SponsoredProductsCreateOrUpdateNegativeMatchType;
  /**
   * The identifier of the ad group to which this keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateDraftNegativeKeyword
   */
  adGroupId: string;
  /**
   * The keyword text.
   * @type {string}
   * @memberof SponsoredProductsCreateDraftNegativeKeyword
   */
  keywordText: string;
}

/**
 *
 * @export
 * @interface SponsoredProductsCreateDraftNegativeTargetingClause
 */
export interface SponsoredProductsCreateDraftNegativeTargetingClause {
  /**
   * The DraftNegativeTargeting expression.
   * @type {Array<SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate>}
   * @memberof SponsoredProductsCreateDraftNegativeTargetingClause
   */
  expression: Array<SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate>;
  /**
   * The identifier of the campaign to which this target is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateDraftNegativeTargetingClause
   */
  campaignId: string;
  /**
   * The identifier of the ad group to which this target is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateDraftNegativeTargetingClause
   */
  adGroupId: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateDraftProductAd
 */
export interface SponsoredProductsCreateDraftProductAd {
  /**
   *
   * @type {SponsoredProductsGlobalStoreSetting}
   * @memberof SponsoredProductsCreateDraftProductAd
   */
  globalStoreSetting?: SponsoredProductsGlobalStoreSetting;
  /**
   * The campaign identifier.
   * @type {string}
   * @memberof SponsoredProductsCreateDraftProductAd
   */
  campaignId: string;
  /**
   * The custom text to use for creating a custom text ad for the associated ASIN. Defined only for KDP Authors and Book Vendors in US marketplace.
   * @type {string}
   * @memberof SponsoredProductsCreateDraftProductAd
   */
  customText?: string;
  /**
   * The ASIN associated with the product. Defined for vendors only.
   * @type {string}
   * @memberof SponsoredProductsCreateDraftProductAd
   */
  asin?: string;
  /**
   * The SKU associated with the product. Defined for seller accounts only.
   * @type {string}
   * @memberof SponsoredProductsCreateDraftProductAd
   */
  sku?: string;
  /**
   * The ad group identifier.
   * @type {string}
   * @memberof SponsoredProductsCreateDraftProductAd
   */
  adGroupId: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateDraftTargetingClause
 */
export interface SponsoredProductsCreateDraftTargetingClause {
  /**
   * The targeting expression.
   * @type {Array<SponsoredProductsTargetingExpressionPredicateWithoutOther>}
   * @memberof SponsoredProductsCreateDraftTargetingClause
   */
  expression: Array<SponsoredProductsTargetingExpressionPredicateWithoutOther>;
  /**
   * The identifier of the campaign to which this target is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateDraftTargetingClause
   */
  campaignId: string;
  /**
   *
   * @type {SponsoredProductsExpressionTypeWithoutOther}
   * @memberof SponsoredProductsCreateDraftTargetingClause
   */
  expressionType: SponsoredProductsExpressionTypeWithoutOther;
  /**
   *
   * @type {SponsoredProductsEntityState}
   * @memberof SponsoredProductsCreateDraftTargetingClause
   */
  state?: SponsoredProductsEntityState;
  /**
   * The bid for ads sourced using the target. Targets that do not have bid values in listDraftTargetingClauses will inherit the defaultBid from the adGroup level. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
   * @type {number}
   * @memberof SponsoredProductsCreateDraftTargetingClause
   */
  bid?: number;
  /**
   * The identifier of the ad group to which this target is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateDraftTargetingClause
   */
  adGroupId: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsCreateExpressionType = {
  Manual: 'MANUAL',
} as const;

export type SponsoredProductsCreateExpressionType =
  (typeof SponsoredProductsCreateExpressionType)[keyof typeof SponsoredProductsCreateExpressionType];

/**
 *
 * @export
 * @interface SponsoredProductsCreateGlobalAdGroup
 */
export interface SponsoredProductsCreateGlobalAdGroup {
  /**
   * The identifier of the campaign to which the AdGroup is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateGlobalAdGroup
   */
  campaignId: string;
  /**
   *
   * @type {Array<string>}
   * @memberof SponsoredProductsCreateGlobalAdGroup
   */
  applicableMarketplaces?: Array<string>;
  /**
   * The name of the ad group.
   * @type {string}
   * @memberof SponsoredProductsCreateGlobalAdGroup
   */
  name: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
   * @memberof SponsoredProductsCreateGlobalAdGroup
   */
  state: SponsoredProductsCreateOrUpdateGlobalEntityState;
  /**
   *
   * @type {SponsoredProductsGlobalBid}
   * @memberof SponsoredProductsCreateGlobalAdGroup
   */
  defaultBid: SponsoredProductsGlobalBid;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateGlobalCampaign
 */
export interface SponsoredProductsCreateGlobalCampaign {
  /**
   * The format of the date is YYYY-MM-DD.
   * @type {string}
   * @memberof SponsoredProductsCreateGlobalCampaign
   */
  endDate?: string;
  /**
   * The name of the campaign.
   * @type {string}
   * @memberof SponsoredProductsCreateGlobalCampaign
   */
  name: string;
  /**
   *
   * @type {SponsoredProductsTargetingType}
   * @memberof SponsoredProductsCreateGlobalCampaign
   */
  targetingType: SponsoredProductsTargetingType;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
   * @memberof SponsoredProductsCreateGlobalCampaign
   */
  state: SponsoredProductsCreateOrUpdateGlobalEntityState;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateDynamicBidding}
   * @memberof SponsoredProductsCreateGlobalCampaign
   */
  dynamicBidding?: SponsoredProductsCreateOrUpdateDynamicBidding;
  /**
   * The format of the date is YYYY-MM-DD.
   * @type {string}
   * @memberof SponsoredProductsCreateGlobalCampaign
   */
  startDate?: string;
  /**
   *
   * @type {SponsoredProductsGlobalBudget}
   * @memberof SponsoredProductsCreateGlobalCampaign
   */
  budget: SponsoredProductsGlobalBudget;
  /**
   * A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.
   * @type {{ [key: string]: string; }}
   * @memberof SponsoredProductsCreateGlobalCampaign
   */
  tags?: { [key: string]: string };
}

/**
 *
 * @export
 * @interface SponsoredProductsCreateGlobalCampaignNegativeKeyword
 */
export interface SponsoredProductsCreateGlobalCampaignNegativeKeyword {
  /**
   * The identifier of the campaign to which the keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateGlobalCampaignNegativeKeyword
   */
  campaignId: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateNegativeMatchType}
   * @memberof SponsoredProductsCreateGlobalCampaignNegativeKeyword
   */
  matchType: SponsoredProductsCreateOrUpdateNegativeMatchType;
  /**
   * Name for the keyword
   * @type {string}
   * @memberof SponsoredProductsCreateGlobalCampaignNegativeKeyword
   */
  name?: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
   * @memberof SponsoredProductsCreateGlobalCampaignNegativeKeyword
   */
  state: SponsoredProductsCreateOrUpdateGlobalEntityState;
  /**
   *
   * @type {SponsoredProductsGlobalNegativeKeywordText}
   * @memberof SponsoredProductsCreateGlobalCampaignNegativeKeyword
   */
  keywordText: SponsoredProductsGlobalNegativeKeywordText;
}

/**
 *
 * @export
 * @interface SponsoredProductsCreateGlobalKeyword
 */
export interface SponsoredProductsCreateGlobalKeyword {
  /**
   * The identifer of the campaign to which the keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateGlobalKeyword
   */
  campaignId: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateMatchType}
   * @memberof SponsoredProductsCreateGlobalKeyword
   */
  matchType: SponsoredProductsCreateOrUpdateMatchType;
  /**
   * Name for the Keyword
   * @type {string}
   * @memberof SponsoredProductsCreateGlobalKeyword
   */
  name?: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
   * @memberof SponsoredProductsCreateGlobalKeyword
   */
  state: SponsoredProductsCreateOrUpdateGlobalEntityState;
  /**
   *
   * @type {SponsoredProductsGlobalBid}
   * @memberof SponsoredProductsCreateGlobalKeyword
   */
  bid?: SponsoredProductsGlobalBid;
  /**
   * The identifier of the ad group to which this keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateGlobalKeyword
   */
  adGroupId: string;
  /**
   *
   * @type {SponsoredProductsGlobalKeywordText}
   * @memberof SponsoredProductsCreateGlobalKeyword
   */
  keywordText: SponsoredProductsGlobalKeywordText;
}

/**
 *
 * @export
 * @interface SponsoredProductsCreateGlobalNegativeKeyword
 */
export interface SponsoredProductsCreateGlobalNegativeKeyword {
  /**
   * The identifier of the campaign to which the keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateGlobalNegativeKeyword
   */
  campaignId: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateNegativeMatchType}
   * @memberof SponsoredProductsCreateGlobalNegativeKeyword
   */
  matchType: SponsoredProductsCreateOrUpdateNegativeMatchType;
  /**
   * Name for the keyword
   * @type {string}
   * @memberof SponsoredProductsCreateGlobalNegativeKeyword
   */
  name?: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
   * @memberof SponsoredProductsCreateGlobalNegativeKeyword
   */
  state: SponsoredProductsCreateOrUpdateGlobalEntityState;
  /**
   * The identifier of the ad group to which this keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateGlobalNegativeKeyword
   */
  adGroupId: string;
  /**
   *
   * @type {SponsoredProductsGlobalNegativeKeywordText}
   * @memberof SponsoredProductsCreateGlobalNegativeKeyword
   */
  keywordText: SponsoredProductsGlobalNegativeKeywordText;
}

/**
 *
 * @export
 * @interface SponsoredProductsCreateGlobalNegativeTargetingClause
 */
export interface SponsoredProductsCreateGlobalNegativeTargetingClause {
  /**
   * The NegativeTargeting expression.
   * @type {Array<SponsoredProductsGlobalTargetingExpressionPredicate>}
   * @memberof SponsoredProductsCreateGlobalNegativeTargetingClause
   */
  expression: Array<SponsoredProductsGlobalTargetingExpressionPredicate>;
  /**
   * The identifier of the campaign to which this target is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateGlobalNegativeTargetingClause
   */
  campaignId: string;
  /**
   * Name for the negative targeting clause
   * @type {string}
   * @memberof SponsoredProductsCreateGlobalNegativeTargetingClause
   */
  name: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
   * @memberof SponsoredProductsCreateGlobalNegativeTargetingClause
   */
  state: SponsoredProductsCreateOrUpdateGlobalEntityState;
  /**
   * The identifier of the ad group to which this target is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateGlobalNegativeTargetingClause
   */
  adGroupId: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateGlobalProductAd
 */
export interface SponsoredProductsCreateGlobalProductAd {
  /**
   * The campaign identifier.
   * @type {string}
   * @memberof SponsoredProductsCreateGlobalProductAd
   */
  campaignId: string;
  /**
   * The custom text to use for creating a custom text ad for the associated ASIN. Defined for only KDP Authors and Book Vendors
   * @type {string}
   * @memberof SponsoredProductsCreateGlobalProductAd
   */
  customText?: string;
  /**
   * Name for the product Ad
   * @type {string}
   * @memberof SponsoredProductsCreateGlobalProductAd
   */
  name?: string;
  /**
   *
   * @type {SponsoredProductsGlobalProductIdentifiers}
   * @memberof SponsoredProductsCreateGlobalProductAd
   */
  asin?: SponsoredProductsGlobalProductIdentifiers;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
   * @memberof SponsoredProductsCreateGlobalProductAd
   */
  state: SponsoredProductsCreateOrUpdateGlobalEntityState;
  /**
   *
   * @type {SponsoredProductsGlobalProductIdentifiers}
   * @memberof SponsoredProductsCreateGlobalProductAd
   */
  sku?: SponsoredProductsGlobalProductIdentifiers;
  /**
   * The ad group identifier.
   * @type {string}
   * @memberof SponsoredProductsCreateGlobalProductAd
   */
  adGroupId: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateGlobalTargetingClause
 */
export interface SponsoredProductsCreateGlobalTargetingClause {
  /**
   * The targeting expression.
   * @type {Array<SponsoredProductsGlobalTargetingExpressionPredicate>}
   * @memberof SponsoredProductsCreateGlobalTargetingClause
   */
  expression: Array<SponsoredProductsGlobalTargetingExpressionPredicate>;
  /**
   * The identifier of the campaign to which this target is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateGlobalTargetingClause
   */
  campaignId: string;
  /**
   * Name for the targeting clause
   * @type {string}
   * @memberof SponsoredProductsCreateGlobalTargetingClause
   */
  name?: string;
  /**
   *
   * @type {SponsoredProductsCreateExpressionType}
   * @memberof SponsoredProductsCreateGlobalTargetingClause
   */
  expressionType: SponsoredProductsCreateExpressionType;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
   * @memberof SponsoredProductsCreateGlobalTargetingClause
   */
  state: SponsoredProductsCreateOrUpdateGlobalEntityState;
  /**
   *
   * @type {SponsoredProductsGlobalBid}
   * @memberof SponsoredProductsCreateGlobalTargetingClause
   */
  bid?: SponsoredProductsGlobalBid;
  /**
   * The identifier of the ad group to which this target is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateGlobalTargetingClause
   */
  adGroupId: string;
}

/**
 *
 * @export
 * @interface SponsoredProductsCreateKeyword
 */
export interface SponsoredProductsCreateKeyword {
  /**
   * The unlocalized keyword text in the preferred locale of the advertiser.
   * @type {string}
   * @memberof SponsoredProductsCreateKeyword
   */
  nativeLanguageKeyword?: string;
  /**
   * The locale preference of the advertiser. For example, if the advertiser’s preferred language is Simplified Chinese, set the locale to zh_CN. Supported locales include: Simplified Chinese (locale: zh_CN) for US, UK and CA. English (locale: en_GB) for DE, FR, IT and ES.
   * @type {string}
   * @memberof SponsoredProductsCreateKeyword
   */
  nativeLanguageLocale?: string;
  /**
   * The identifer of the campaign to which the keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateKeyword
   */
  campaignId: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateMatchType}
   * @memberof SponsoredProductsCreateKeyword
   */
  matchType: SponsoredProductsCreateOrUpdateMatchType;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateEntityState}
   * @memberof SponsoredProductsCreateKeyword
   */
  state: SponsoredProductsCreateOrUpdateEntityState;
  /**
   * Bid associated with this keyword. Applicable to biddable match types only. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
   * @type {number}
   * @memberof SponsoredProductsCreateKeyword
   */
  bid?: number | null;
  /**
   * The identifier of the ad group to which this keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateKeyword
   */
  adGroupId: string;
  /**
   * The keyword text.
   * @type {string}
   * @memberof SponsoredProductsCreateKeyword
   */
  keywordText: string;
}

/**
 * A keyword target.
 * @export
 * @interface SponsoredProductsCreateKeywordTarget
 */
export interface SponsoredProductsCreateKeywordTarget {
  /**
   *
   * @type {SponsoredProductsKeywordMatchType}
   * @memberof SponsoredProductsCreateKeywordTarget
   */
  matchType: SponsoredProductsKeywordMatchType;
  /**
   * Bid associated with the target. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
   * @type {number}
   * @memberof SponsoredProductsCreateKeywordTarget
   */
  bid?: number;
  /**
   * The keyword text.
   * @type {string}
   * @memberof SponsoredProductsCreateKeywordTarget
   */
  keyword: string;
}

/**
 *
 * @export
 * @interface SponsoredProductsCreateNegativeKeyword
 */
export interface SponsoredProductsCreateNegativeKeyword {
  /**
   * The unlocalized keyword text in the preferred locale of the advertiser
   * @type {string}
   * @memberof SponsoredProductsCreateNegativeKeyword
   */
  nativeLanguageKeyword?: string;
  /**
   * The locale preference of the advertiser.
   * @type {string}
   * @memberof SponsoredProductsCreateNegativeKeyword
   */
  nativeLanguageLocale?: string;
  /**
   * The identifer of the campaign to which the keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateNegativeKeyword
   */
  campaignId: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateNegativeMatchType}
   * @memberof SponsoredProductsCreateNegativeKeyword
   */
  matchType: SponsoredProductsCreateOrUpdateNegativeMatchType;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateEntityState}
   * @memberof SponsoredProductsCreateNegativeKeyword
   */
  state: SponsoredProductsCreateOrUpdateEntityState;
  /**
   * The identifier of the ad group to which this keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateNegativeKeyword
   */
  adGroupId: string;
  /**
   * The keyword text.
   * @type {string}
   * @memberof SponsoredProductsCreateNegativeKeyword
   */
  keywordText: string;
}

/**
 *
 * @export
 * @interface SponsoredProductsCreateNegativeTargetingClause
 */
export interface SponsoredProductsCreateNegativeTargetingClause {
  /**
   * The NegativeTargeting expression.
   * @type {Array<SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate>}
   * @memberof SponsoredProductsCreateNegativeTargetingClause
   */
  expression: Array<SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate>;
  /**
   * The identifier of the campaign to which this target is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateNegativeTargetingClause
   */
  campaignId: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateEntityState}
   * @memberof SponsoredProductsCreateNegativeTargetingClause
   */
  state: SponsoredProductsCreateOrUpdateEntityState;
  /**
   * The identifier of the ad group to which this target is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateNegativeTargetingClause
   */
  adGroupId: string;
}

/**
 * The bidding strategy. `strategy` is required for create requests if dynamicBidding is provided, but is optional for update requests. | Value | Strategy name | Description | |----------------|---------------|-------------| | `LEGACY_FOR_SALES` | Dynamic bids - down only | Lowers your bids in real time when your ad may be less likely to convert to a sale. Campaigns created before the release of the bidding controls feature used this setting by default. | | `AUTO_FOR_SALES` | Dynamic bids - up and down | Increases or decreases your bids in real time by a maximum of 100%. With this setting bids increase when your ad is more likely to convert to a sale, and bids decrease when less likely to convert to a sale. | | `MANUAL` | Fixed bid | Uses your exact bid and any placement adjustments you set, and is not subject to dynamic bidding. | | `RULE_BASED` | Rule based bidding | See Rule based bidding documentation https://advertising.amazon.com/API/docs/en-us/sponsored-products/rule-based-bidding/overview |
 * @export
 * @enum {string}
 */

export const SponsoredProductsCreateOrUpdateBiddingStrategy = {
  LegacyForSales: 'LEGACY_FOR_SALES',
  AutoForSales: 'AUTO_FOR_SALES',
  Manual: 'MANUAL',
  RuleBased: 'RULE_BASED',
} as const;

export type SponsoredProductsCreateOrUpdateBiddingStrategy =
  (typeof SponsoredProductsCreateOrUpdateBiddingStrategy)[keyof typeof SponsoredProductsCreateOrUpdateBiddingStrategy];

/**
 *
 * @export
 * @interface SponsoredProductsCreateOrUpdateBudget
 */
export interface SponsoredProductsCreateOrUpdateBudget {
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateBudgetType}
   * @memberof SponsoredProductsCreateOrUpdateBudget
   */
  budgetType: SponsoredProductsCreateOrUpdateBudgetType;
  /**
   * Monetary value
   * @type {number}
   * @memberof SponsoredProductsCreateOrUpdateBudget
   */
  budget: number;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsCreateOrUpdateBudgetType = {
  Daily: 'DAILY',
} as const;

export type SponsoredProductsCreateOrUpdateBudgetType =
  (typeof SponsoredProductsCreateOrUpdateBudgetType)[keyof typeof SponsoredProductsCreateOrUpdateBudgetType];

/**
 *
 * @export
 * @interface SponsoredProductsCreateOrUpdateDraftCampaignBudget
 */
export interface SponsoredProductsCreateOrUpdateDraftCampaignBudget {
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateDraftCampaignBudgetType}
   * @memberof SponsoredProductsCreateOrUpdateDraftCampaignBudget
   */
  budgetType: SponsoredProductsCreateOrUpdateDraftCampaignBudgetType;
  /**
   * Monetary value
   * @type {number}
   * @memberof SponsoredProductsCreateOrUpdateDraftCampaignBudget
   */
  budget: number;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsCreateOrUpdateDraftCampaignBudgetType = {
  Daily: 'DAILY',
} as const;

export type SponsoredProductsCreateOrUpdateDraftCampaignBudgetType =
  (typeof SponsoredProductsCreateOrUpdateDraftCampaignBudgetType)[keyof typeof SponsoredProductsCreateOrUpdateDraftCampaignBudgetType];

/**
 *
 * @export
 * @interface SponsoredProductsCreateOrUpdateDraftCampaignDynamicBidding
 */
export interface SponsoredProductsCreateOrUpdateDraftCampaignDynamicBidding {
  /**
   *
   * @type {Array<SponsoredProductsDraftCampaignShopperCohortBidding>}
   * @memberof SponsoredProductsCreateOrUpdateDraftCampaignDynamicBidding
   */
  shopperCohortBidding?: Array<SponsoredProductsDraftCampaignShopperCohortBidding>;
  /**
   *
   * @type {Array<SponsoredProductsDraftCampaignPlacementBidding>}
   * @memberof SponsoredProductsCreateOrUpdateDraftCampaignDynamicBidding
   */
  placementBidding?: Array<SponsoredProductsDraftCampaignPlacementBidding>;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateBiddingStrategy}
   * @memberof SponsoredProductsCreateOrUpdateDraftCampaignDynamicBidding
   */
  strategy: SponsoredProductsCreateOrUpdateBiddingStrategy;
}

/**
 * Specifies bidding controls. DynamicBidding is optional for both Create and Update requests. For Create Campaign requests, if you don\'t specify dynamicBidding, default strategy of `LEGACY_FOR_SALES` will be applied.
 * @export
 * @interface SponsoredProductsCreateOrUpdateDynamicBidding
 */
export interface SponsoredProductsCreateOrUpdateDynamicBidding {
  /**
   * Specifies Shopper Cohorts based bid adjustment controls. `shopperCohortBidding` is optional for both Create and Update requests. You can enable this control to adjust your bid based on the shopper cohorts. The percentage value set is the percentage of the original bid including any other bid adjustments such as `placementBidding`. For example, a `placementBidding` with 50% adjustment on a $1.00 bid would increase the bid to $1.50, and a `shopperCohortBidding` with 100% adjustment would further increase the bid to $3.00.
   * @type {Array<SponsoredProductsShopperCohortBidding>}
   * @memberof SponsoredProductsCreateOrUpdateDynamicBidding
   */
  shopperCohortBidding?: Array<SponsoredProductsShopperCohortBidding>;
  /**
   *
   * @type {Array<SponsoredProductsPlacementBidding>}
   * @memberof SponsoredProductsCreateOrUpdateDynamicBidding
   */
  placementBidding?: Array<SponsoredProductsPlacementBidding>;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateBiddingStrategy}
   * @memberof SponsoredProductsCreateOrUpdateDynamicBidding
   */
  strategy?: SponsoredProductsCreateOrUpdateBiddingStrategy;
}

/**
 * Entity state for create or update operation
 * @export
 * @enum {string}
 */

export const SponsoredProductsCreateOrUpdateEntityState = {
  Enabled: 'ENABLED',
  Paused: 'PAUSED',
  Proposed: 'PROPOSED',
} as const;

export type SponsoredProductsCreateOrUpdateEntityState =
  (typeof SponsoredProductsCreateOrUpdateEntityState)[keyof typeof SponsoredProductsCreateOrUpdateEntityState];

/**
 *
 * @export
 * @interface SponsoredProductsCreateOrUpdateGlobalEntityState
 */
export interface SponsoredProductsCreateOrUpdateGlobalEntityState {
  /**
   *
   * @type {Array<SponsoredProductsCreateOrUpdateMarketplaceState>}
   * @memberof SponsoredProductsCreateOrUpdateGlobalEntityState
   */
  marketplaceSettings?: Array<SponsoredProductsCreateOrUpdateMarketplaceState>;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateEntityState}
   * @memberof SponsoredProductsCreateOrUpdateGlobalEntityState
   */
  state: SponsoredProductsCreateOrUpdateEntityState;
}

/**
 *
 * @export
 * @interface SponsoredProductsCreateOrUpdateMarketplaceState
 */
export interface SponsoredProductsCreateOrUpdateMarketplaceState {
  /**
   *
   * @type {SponsoredProductsMarketplace}
   * @memberof SponsoredProductsCreateOrUpdateMarketplaceState
   */
  marketplace: SponsoredProductsMarketplace;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateEntityState}
   * @memberof SponsoredProductsCreateOrUpdateMarketplaceState
   */
  state: SponsoredProductsCreateOrUpdateEntityState;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsCreateOrUpdateMatchType = {
  Exact: 'EXACT',
  Phrase: 'PHRASE',
  Broad: 'BROAD',
} as const;

export type SponsoredProductsCreateOrUpdateMatchType =
  (typeof SponsoredProductsCreateOrUpdateMatchType)[keyof typeof SponsoredProductsCreateOrUpdateMatchType];

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsCreateOrUpdateNegativeMatchType = {
  NegativeExact: 'NEGATIVE_EXACT',
  NegativePhrase: 'NEGATIVE_PHRASE',
  NegativeBroad: 'NEGATIVE_BROAD',
} as const;

export type SponsoredProductsCreateOrUpdateNegativeMatchType =
  (typeof SponsoredProductsCreateOrUpdateNegativeMatchType)[keyof typeof SponsoredProductsCreateOrUpdateNegativeMatchType];

/**
 *
 * @export
 * @interface SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate
 */
export interface SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate {
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicateType}
   * @memberof SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate
   */
  type: SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicateType;
  /**
   * The expression value
   * @type {string}
   * @memberof SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate
   */
  value?: string;
}

/**
 * The type of nagative targeting expression. You can only specify values for the following predicates: | Predicate | Description | | --- | --- | | `ASIN_BRAND_SAME_AS` | Target the brand that is the same as the brand expressed. | | `ASIN_SAME_AS` | Target an ASIN that is the same as the ASIN expressed. |
 * @export
 * @enum {string}
 */

export const SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicateType = {
  AsinBrandSameAs: 'ASIN_BRAND_SAME_AS',
  AsinSameAs: 'ASIN_SAME_AS',
} as const;

export type SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicateType =
  (typeof SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicateType)[keyof typeof SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicateType];

/**
 * The budget control strategy for ads served off Amazon . `OffAmazonBudgetControlStrategy` is optional for create and update requests. Value |  Description | |-----------|------------| | `MAXIMIZE_REACH` | Prioritize more reach using your target settings. This setting may result in more impressions and opportunities for sales off Amazon. | | `MINIMIZE_SPEND` | Optimize ad delivery to minimize spending. This setting may result in fewer impressions off Amazon, but it can help control spend. |
 * @export
 * @enum {string}
 */

export const SponsoredProductsCreateOrUpdateOffAmazonBudgetControlStrategy = {
  MaximizeReach: 'MAXIMIZE_REACH',
  MinimizeSpend: 'MINIMIZE_SPEND',
} as const;

export type SponsoredProductsCreateOrUpdateOffAmazonBudgetControlStrategy =
  (typeof SponsoredProductsCreateOrUpdateOffAmazonBudgetControlStrategy)[keyof typeof SponsoredProductsCreateOrUpdateOffAmazonBudgetControlStrategy];

/**
 * Settings that apply to ads served off Amazon. `OffAmazonSettings` is optional for both Create and Update requests. This field is upcoming and is not ready for use.
 * @export
 * @interface SponsoredProductsCreateOrUpdateOffAmazonSettings
 */
export interface SponsoredProductsCreateOrUpdateOffAmazonSettings {
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateOffAmazonBudgetControlStrategy}
   * @memberof SponsoredProductsCreateOrUpdateOffAmazonSettings
   */
  offAmazonBudgetControlStrategy?: SponsoredProductsCreateOrUpdateOffAmazonBudgetControlStrategy;
}

/**
 *
 * @export
 * @interface SponsoredProductsCreateProductAd
 */
export interface SponsoredProductsCreateProductAd {
  /**
   *
   * @type {SponsoredProductsGlobalStoreSetting}
   * @memberof SponsoredProductsCreateProductAd
   */
  globalStoreSetting?: SponsoredProductsGlobalStoreSetting;
  /**
   * The campaign identifier.
   * @type {string}
   * @memberof SponsoredProductsCreateProductAd
   */
  campaignId: string;
  /**
   * The custom text to use for creating a custom text ad for the associated ASIN. Defined only for KDP Authors and Book Vendors in US marketplace.
   * @type {string}
   * @memberof SponsoredProductsCreateProductAd
   */
  customText?: string;
  /**
   * The ASIN associated with the product. Defined for vendors only.
   * @type {string}
   * @memberof SponsoredProductsCreateProductAd
   */
  asin?: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateEntityState}
   * @memberof SponsoredProductsCreateProductAd
   */
  state: SponsoredProductsCreateOrUpdateEntityState;
  /**
   * The SKU associated with the product. Defined for seller accounts only.
   * @type {string}
   * @memberof SponsoredProductsCreateProductAd
   */
  sku?: string;
  /**
   * The ad group identifier.
   * @type {string}
   * @memberof SponsoredProductsCreateProductAd
   */
  adGroupId: string;
}

/**
 * A product target.
 * @export
 * @interface SponsoredProductsCreateProductTarget
 */
export interface SponsoredProductsCreateProductTarget {
  /**
   *
   * @type {SponsoredProductsTargetingExpressionMatchType}
   * @memberof SponsoredProductsCreateProductTarget
   */
  matchType: SponsoredProductsTargetingExpressionMatchType;
  /**
   * Bid associated with the target. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
   * @type {number}
   * @memberof SponsoredProductsCreateProductTarget
   */
  bid?: number;
  /**
   * The product ASIN of the target.
   * @type {string}
   * @memberof SponsoredProductsCreateProductTarget
   */
  target: string;
}

/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsAdGroupsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsAdGroupsRequestContent {
  /**
   * An array of adGroups.
   * @type {Array<SponsoredProductsCreateAdGroup>}
   * @memberof SponsoredProductsCreateSponsoredProductsAdGroupsRequestContent
   */
  adGroups: Array<SponsoredProductsCreateAdGroup>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsAdGroupsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsAdGroupsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkAdGroupOperationResponse}
   * @memberof SponsoredProductsCreateSponsoredProductsAdGroupsResponseContent
   */
  adGroups: SponsoredProductsBulkAdGroupOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent {
  /**
   * An array of campaignNegativeKeywords.
   * @type {Array<SponsoredProductsCreateCampaignNegativeKeyword>}
   * @memberof SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent
   */
  campaignNegativeKeywords: Array<SponsoredProductsCreateCampaignNegativeKeyword>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkCampaignNegativeKeywordOperationResponse}
   * @memberof SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsResponseContent
   */
  campaignNegativeKeywords: SponsoredProductsBulkCampaignNegativeKeywordOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent {
  /**
   * An array of Campaign Negative TargetingClauses.
   * @type {Array<SponsoredProductsCreateCampaignNegativeTargetingClause>}
   * @memberof SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent
   */
  campaignNegativeTargetingClauses: Array<SponsoredProductsCreateCampaignNegativeTargetingClause>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkCampaignNegativeTargetingClauseOperationResponse}
   * @memberof SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesResponseContent
   */
  campaignNegativeTargetingClauses: SponsoredProductsBulkCampaignNegativeTargetingClauseOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsCampaignsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsCampaignsRequestContent {
  /**
   * An array of campaigns.
   * @type {Array<SponsoredProductsCreateCampaign>}
   * @memberof SponsoredProductsCreateSponsoredProductsCampaignsRequestContent
   */
  campaigns: Array<SponsoredProductsCreateCampaign>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsCampaignsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsCampaignsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkCampaignOperationResponse}
   * @memberof SponsoredProductsCreateSponsoredProductsCampaignsResponseContent
   */
  campaigns: SponsoredProductsBulkCampaignOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsDraftAdGroupsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsDraftAdGroupsRequestContent {
  /**
   * An array of draftAdGroups.
   * @type {Array<SponsoredProductsCreateDraftAdGroup>}
   * @memberof SponsoredProductsCreateSponsoredProductsDraftAdGroupsRequestContent
   */
  adGroups: Array<SponsoredProductsCreateDraftAdGroup>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsDraftAdGroupsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsDraftAdGroupsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkDraftAdGroupOperationResponse}
   * @memberof SponsoredProductsCreateSponsoredProductsDraftAdGroupsResponseContent
   */
  adGroups: SponsoredProductsBulkDraftAdGroupOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsDraftCampaignsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsDraftCampaignsRequestContent {
  /**
   * An array of drafts.
   * @type {Array<SponsoredProductsCreateDraftCampaign>}
   * @memberof SponsoredProductsCreateSponsoredProductsDraftCampaignsRequestContent
   */
  campaigns: Array<SponsoredProductsCreateDraftCampaign>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsDraftCampaignsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsDraftCampaignsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkDraftCampaignOperationResponse}
   * @memberof SponsoredProductsCreateSponsoredProductsDraftCampaignsResponseContent
   */
  campaigns: SponsoredProductsBulkDraftCampaignOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsDraftKeywordsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsDraftKeywordsRequestContent {
  /**
   * An array of draft keywords.
   * @type {Array<SponsoredProductsCreateDraftKeyword>}
   * @memberof SponsoredProductsCreateSponsoredProductsDraftKeywordsRequestContent
   */
  keywords: Array<SponsoredProductsCreateDraftKeyword>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsDraftKeywordsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsDraftKeywordsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkDraftKeywordOperationResponse}
   * @memberof SponsoredProductsCreateSponsoredProductsDraftKeywordsResponseContent
   */
  keywords: SponsoredProductsBulkDraftKeywordOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsDraftNegativeKeywordsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsDraftNegativeKeywordsRequestContent {
  /**
   * An array of negativeKeywords.
   * @type {Array<SponsoredProductsCreateDraftNegativeKeyword>}
   * @memberof SponsoredProductsCreateSponsoredProductsDraftNegativeKeywordsRequestContent
   */
  negativeKeywords: Array<SponsoredProductsCreateDraftNegativeKeyword>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsDraftNegativeKeywordsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsDraftNegativeKeywordsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkDraftNegativeKeywordOperationResponse}
   * @memberof SponsoredProductsCreateSponsoredProductsDraftNegativeKeywordsResponseContent
   */
  negativeKeywords: SponsoredProductsBulkDraftNegativeKeywordOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsDraftNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsDraftNegativeTargetingClausesRequestContent {
  /**
   * An array of negativeTargetingClauses.
   * @type {Array<SponsoredProductsCreateDraftNegativeTargetingClause>}
   * @memberof SponsoredProductsCreateSponsoredProductsDraftNegativeTargetingClausesRequestContent
   */
  negativeTargetingClauses: Array<SponsoredProductsCreateDraftNegativeTargetingClause>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsDraftNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsDraftNegativeTargetingClausesResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkDraftNegativeTargetingClauseOperationResponse}
   * @memberof SponsoredProductsCreateSponsoredProductsDraftNegativeTargetingClausesResponseContent
   */
  negativeTargetingClauses: SponsoredProductsBulkDraftNegativeTargetingClauseOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsDraftProductAdsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsDraftProductAdsRequestContent {
  /**
   * An array of ads.
   * @type {Array<SponsoredProductsCreateDraftProductAd>}
   * @memberof SponsoredProductsCreateSponsoredProductsDraftProductAdsRequestContent
   */
  productAds?: Array<SponsoredProductsCreateDraftProductAd>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsDraftProductAdsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsDraftProductAdsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkDraftProductAdOperationResponse}
   * @memberof SponsoredProductsCreateSponsoredProductsDraftProductAdsResponseContent
   */
  draftProductAds: SponsoredProductsBulkDraftProductAdOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsDraftTargetingClausesRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsDraftTargetingClausesRequestContent {
  /**
   * An array of draftTargetingClauses.
   * @type {Array<SponsoredProductsCreateDraftTargetingClause>}
   * @memberof SponsoredProductsCreateSponsoredProductsDraftTargetingClausesRequestContent
   */
  targetingClauses: Array<SponsoredProductsCreateDraftTargetingClause>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsDraftTargetingClausesResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsDraftTargetingClausesResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkDraftTargetingClauseOperationResponse}
   * @memberof SponsoredProductsCreateSponsoredProductsDraftTargetingClausesResponseContent
   */
  targetingClauses: SponsoredProductsBulkDraftTargetingClauseOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalAdGroupsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalAdGroupsRequestContent {
  /**
   * An array of adGroups.
   * @type {Array<SponsoredProductsCreateGlobalAdGroup>}
   * @memberof SponsoredProductsCreateSponsoredProductsGlobalAdGroupsRequestContent
   */
  adGroups: Array<SponsoredProductsCreateGlobalAdGroup>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalAdGroupsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalAdGroupsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkGlobalAdGroupOperationResponse}
   * @memberof SponsoredProductsCreateSponsoredProductsGlobalAdGroupsResponseContent
   */
  adGroups: SponsoredProductsBulkGlobalAdGroupOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent {
  /**
   * An array of campaignNegativeKeywords.
   * @type {Array<SponsoredProductsCreateGlobalCampaignNegativeKeyword>}
   * @memberof SponsoredProductsCreateSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent
   */
  campaignNegativeKeywords?: Array<SponsoredProductsCreateGlobalCampaignNegativeKeyword>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkGlobalCampaignNegativeKeywordOperationResponse}
   * @memberof SponsoredProductsCreateSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent
   */
  campaignNegativeKeywords: SponsoredProductsBulkGlobalCampaignNegativeKeywordOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalCampaignsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalCampaignsRequestContent {
  /**
   * An array of campaigns.
   * @type {Array<SponsoredProductsCreateGlobalCampaign>}
   * @memberof SponsoredProductsCreateSponsoredProductsGlobalCampaignsRequestContent
   */
  campaigns: Array<SponsoredProductsCreateGlobalCampaign>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalCampaignsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalCampaignsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkGlobalCampaignOperationResponse}
   * @memberof SponsoredProductsCreateSponsoredProductsGlobalCampaignsResponseContent
   */
  campaigns: SponsoredProductsBulkGlobalCampaignOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalKeywordsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalKeywordsRequestContent {
  /**
   * An array of keywords.
   * @type {Array<SponsoredProductsCreateGlobalKeyword>}
   * @memberof SponsoredProductsCreateSponsoredProductsGlobalKeywordsRequestContent
   */
  keywords: Array<SponsoredProductsCreateGlobalKeyword>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalKeywordsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalKeywordsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkGlobalKeywordOperationResponse}
   * @memberof SponsoredProductsCreateSponsoredProductsGlobalKeywordsResponseContent
   */
  keywords: SponsoredProductsBulkGlobalKeywordOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalNegativeKeywordsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalNegativeKeywordsRequestContent {
  /**
   * An array of negativeKeywords.
   * @type {Array<SponsoredProductsCreateGlobalNegativeKeyword>}
   * @memberof SponsoredProductsCreateSponsoredProductsGlobalNegativeKeywordsRequestContent
   */
  negativeKeywords?: Array<SponsoredProductsCreateGlobalNegativeKeyword>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalNegativeKeywordsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalNegativeKeywordsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkGlobalNegativeKeywordOperationResponse}
   * @memberof SponsoredProductsCreateSponsoredProductsGlobalNegativeKeywordsResponseContent
   */
  negativeKeywords: SponsoredProductsBulkGlobalNegativeKeywordOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalNegativeTargetingClausesRequestContent {
  /**
   * An array of negativeTargeting.
   * @type {Array<SponsoredProductsCreateGlobalNegativeTargetingClause>}
   * @memberof SponsoredProductsCreateSponsoredProductsGlobalNegativeTargetingClausesRequestContent
   */
  negativeTargetingClauses?: Array<SponsoredProductsCreateGlobalNegativeTargetingClause>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalNegativeTargetingClausesResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkGlobalNegativeTargetingClauseOperationResponse}
   * @memberof SponsoredProductsCreateSponsoredProductsGlobalNegativeTargetingClausesResponseContent
   */
  negativeTargetingClauses: SponsoredProductsBulkGlobalNegativeTargetingClauseOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalProductAdsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalProductAdsRequestContent {
  /**
   * An array of ads.
   * @type {Array<SponsoredProductsCreateGlobalProductAd>}
   * @memberof SponsoredProductsCreateSponsoredProductsGlobalProductAdsRequestContent
   */
  productAds?: Array<SponsoredProductsCreateGlobalProductAd>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalProductAdsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalProductAdsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkGlobalProductAdOperationResponse}
   * @memberof SponsoredProductsCreateSponsoredProductsGlobalProductAdsResponseContent
   */
  productAds: SponsoredProductsBulkGlobalProductAdOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalTargetingClausesRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalTargetingClausesRequestContent {
  /**
   * An array of targetingClauses.
   * @type {Array<SponsoredProductsCreateGlobalTargetingClause>}
   * @memberof SponsoredProductsCreateSponsoredProductsGlobalTargetingClausesRequestContent
   */
  targetingClauses?: Array<SponsoredProductsCreateGlobalTargetingClause>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalTargetingClausesResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalTargetingClausesResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkGlobalTargetingClauseOperationResponse}
   * @memberof SponsoredProductsCreateSponsoredProductsGlobalTargetingClausesResponseContent
   */
  targetingClauses: SponsoredProductsBulkGlobalTargetingClauseOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsKeywordsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsKeywordsRequestContent {
  /**
   * An array of keywords.
   * @type {Array<SponsoredProductsCreateKeyword>}
   * @memberof SponsoredProductsCreateSponsoredProductsKeywordsRequestContent
   */
  keywords: Array<SponsoredProductsCreateKeyword>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsKeywordsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsKeywordsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkKeywordOperationResponse}
   * @memberof SponsoredProductsCreateSponsoredProductsKeywordsResponseContent
   */
  keywords: SponsoredProductsBulkKeywordOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent {
  /**
   * An array of negativeKeywords.
   * @type {Array<SponsoredProductsCreateNegativeKeyword>}
   * @memberof SponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent
   */
  negativeKeywords: Array<SponsoredProductsCreateNegativeKeyword>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsNegativeKeywordsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsNegativeKeywordsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkNegativeKeywordOperationResponse}
   * @memberof SponsoredProductsCreateSponsoredProductsNegativeKeywordsResponseContent
   */
  negativeKeywords: SponsoredProductsBulkNegativeKeywordOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent {
  /**
   * An array of negativeTargeting.
   * @type {Array<SponsoredProductsCreateNegativeTargetingClause>}
   * @memberof SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent
   */
  negativeTargetingClauses: Array<SponsoredProductsCreateNegativeTargetingClause>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkNegativeTargetingClauseOperationResponse}
   * @memberof SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesResponseContent
   */
  negativeTargetingClauses: SponsoredProductsBulkNegativeTargetingClauseOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsProductAdsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsProductAdsRequestContent {
  /**
   * An array of ads.
   * @type {Array<SponsoredProductsCreateProductAd>}
   * @memberof SponsoredProductsCreateSponsoredProductsProductAdsRequestContent
   */
  productAds: Array<SponsoredProductsCreateProductAd>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsProductAdsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsProductAdsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkProductAdOperationResponse}
   * @memberof SponsoredProductsCreateSponsoredProductsProductAdsResponseContent
   */
  productAds: SponsoredProductsBulkProductAdOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent {
  /**
   * An array of targetingClauses.
   * @type {Array<SponsoredProductsCreateTargetingClause>}
   * @memberof SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent
   */
  targetingClauses: Array<SponsoredProductsCreateTargetingClause>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkTargetingClauseOperationResponse}
   * @memberof SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent
   */
  targetingClauses: SponsoredProductsBulkTargetingClauseOperationResponse;
}
/**
 * Target created in the target promotion group.
 * @export
 * @interface SponsoredProductsCreateTarget
 */
export interface SponsoredProductsCreateTarget {
  /**
   * The id of the target promotion group.
   * @type {string}
   * @memberof SponsoredProductsCreateTarget
   */
  targetPromotionGroupId?: string;
  /**
   * The id of the target that got created.
   * @type {string}
   * @memberof SponsoredProductsCreateTarget
   */
  targetId?: string;
  /**
   * The adGroupId of the manual-targeting campaign where the target belongs.
   * @type {string}
   * @memberof SponsoredProductsCreateTarget
   */
  manualTargetingAdGroupId?: string;
}
/**
 * Response object of failed target promotion group target.
 * @export
 * @interface SponsoredProductsCreateTargetError
 */
export interface SponsoredProductsCreateTargetError {
  /**
   * The type of the error.
   * @type {string}
   * @memberof SponsoredProductsCreateTargetError
   */
  errorType?: string;
  /**
   *
   * @type {SponsoredProductsCreateTargetErrorSelector}
   * @memberof SponsoredProductsCreateTargetError
   */
  errorValue?: SponsoredProductsCreateTargetErrorSelector;
}
/**
 * @type SponsoredProductsCreateTargetErrorSelector
 * @export
 */
export type SponsoredProductsCreateTargetErrorSelector =
  | BiddingError
  | BillingError
  | DuplicateValueError
  | EntityNotFoundError
  | EntityQuotaError
  | EntityStateError
  | ExpressionTypeError
  | InternalServerError
  | InvalidInputError
  | LocaleError
  | MalformedValueError
  | MissingValueError
  | OtherError
  | ParentEntityError
  | RangeError
  | TargetingClauseSetupError
  | ThrottledError;

/**
 * Response object of failed target promotion group target.
 * @export
 * @interface SponsoredProductsCreateTargetPromotionGroupTargetsBatchError
 */
export interface SponsoredProductsCreateTargetPromotionGroupTargetsBatchError {
  /**
   * index of the item in the request.
   * @type {string}
   * @memberof SponsoredProductsCreateTargetPromotionGroupTargetsBatchError
   */
  index?: string;
  /**
   * A list of the errors encountered.
   * @type {Array<SponsoredProductsError>}
   * @memberof SponsoredProductsCreateTargetPromotionGroupTargetsBatchError
   */
  subErrors?: Array<SponsoredProductsError>;
}
/**
 * Response object of successfully created target promotion group target.
 * @export
 * @interface SponsoredProductsCreateTargetPromotionGroupTargetsBatchSuccess
 */
export interface SponsoredProductsCreateTargetPromotionGroupTargetsBatchSuccess {
  /**
   * index of the item in the request.
   * @type {string}
   * @memberof SponsoredProductsCreateTargetPromotionGroupTargetsBatchSuccess
   */
  index?: string;
  /**
   *
   * @type {SponsoredProductsTargetPromotionGroupTargetDetails}
   * @memberof SponsoredProductsCreateTargetPromotionGroupTargetsBatchSuccess
   */
  targetDetails?: SponsoredProductsTargetPromotionGroupTargetDetails;
}
/**
 * Response object of failed target promotion group target.
 * @export
 * @interface SponsoredProductsCreateTargetPromotionGroupTargetsFailureResponseItem
 */
export interface SponsoredProductsCreateTargetPromotionGroupTargetsFailureResponseItem {
  /**
   * The expression type of the target that was requested to be created.
   * @type {string}
   * @memberof SponsoredProductsCreateTargetPromotionGroupTargetsFailureResponseItem
   */
  expressionType?: string;
  /**
   * Response object of failed target promotion group target.
   * @type {Array<SponsoredProductsCreateTargetError>}
   * @memberof SponsoredProductsCreateTargetPromotionGroupTargetsFailureResponseItem
   */
  errors?: Array<SponsoredProductsCreateTargetError>;
  /**
   * The target that was requested to be created.
   * @type {string}
   * @memberof SponsoredProductsCreateTargetPromotionGroupTargetsFailureResponseItem
   */
  target?: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateTargetPromotionGroupTargetsInternalRequestContent
 */
export interface SponsoredProductsCreateTargetPromotionGroupTargetsInternalRequestContent {
  /**
   * Entity object identifier
   * @type {string}
   * @memberof SponsoredProductsCreateTargetPromotionGroupTargetsInternalRequestContent
   */
  targetPromotionGroupId: string;
  /**
   *
   * @type {SponsoredProductsApiGatewayContext}
   * @memberof SponsoredProductsCreateTargetPromotionGroupTargetsInternalRequestContent
   */
  apiGatewayContext: SponsoredProductsApiGatewayContext;
  /**
   *
   * @type {Array<SponsoredProductsCreateTargetRequest>}
   * @memberof SponsoredProductsCreateTargetPromotionGroupTargetsInternalRequestContent
   */
  targets?: Array<SponsoredProductsCreateTargetRequest>;
}
/**
 * Response object for creating target promotion group targets.
 * @export
 * @interface SponsoredProductsCreateTargetPromotionGroupTargetsInternalResponseContent
 */
export interface SponsoredProductsCreateTargetPromotionGroupTargetsInternalResponseContent {
  /**
   * List of successfully created targets.
   * @type {Array<SponsoredProductsCreateTargetPromotionGroupTargetsSuccessResponseItem>}
   * @memberof SponsoredProductsCreateTargetPromotionGroupTargetsInternalResponseContent
   */
  success?: Array<SponsoredProductsCreateTargetPromotionGroupTargetsSuccessResponseItem>;
  /**
   * List of targets that failed to create.
   * @type {Array<SponsoredProductsCreateTargetPromotionGroupTargetsFailureResponseItem>}
   * @memberof SponsoredProductsCreateTargetPromotionGroupTargetsInternalResponseContent
   */
  errors?: Array<SponsoredProductsCreateTargetPromotionGroupTargetsFailureResponseItem>;
}
/**
 * Request object for creating target promotion group targets in a target promotion group.
 * @export
 * @interface SponsoredProductsCreateTargetPromotionGroupTargetsRequestContent
 */
export interface SponsoredProductsCreateTargetPromotionGroupTargetsRequestContent {
  /**
   * The id of the target promotion group where the targets are being added.
   * @type {string}
   * @memberof SponsoredProductsCreateTargetPromotionGroupTargetsRequestContent
   */
  targetPromotionGroupId: string;
  /**
   * List of targets to be added to the target promotion group.
   * @type {Array<SponsoredProductsCreateTargetRequest>}
   * @memberof SponsoredProductsCreateTargetPromotionGroupTargetsRequestContent
   */
  targets?: Array<SponsoredProductsCreateTargetRequest>;
}
/**
 * Response object for creating target promotion group targets.
 * @export
 * @interface SponsoredProductsCreateTargetPromotionGroupTargetsResponseContent
 */
export interface SponsoredProductsCreateTargetPromotionGroupTargetsResponseContent {
  /**
   * List of successfully created targets.
   * @type {Array<SponsoredProductsCreateTargetPromotionGroupTargetsSuccessResponseItem>}
   * @memberof SponsoredProductsCreateTargetPromotionGroupTargetsResponseContent
   */
  success?: Array<SponsoredProductsCreateTargetPromotionGroupTargetsSuccessResponseItem>;
  /**
   * List of targets that failed to create.
   * @type {Array<SponsoredProductsCreateTargetPromotionGroupTargetsFailureResponseItem>}
   * @memberof SponsoredProductsCreateTargetPromotionGroupTargetsResponseContent
   */
  errors?: Array<SponsoredProductsCreateTargetPromotionGroupTargetsFailureResponseItem>;
}
/**
 * Response object of successfully created target promotion group target.
 * @export
 * @interface SponsoredProductsCreateTargetPromotionGroupTargetsSuccessResponseItem
 */
export interface SponsoredProductsCreateTargetPromotionGroupTargetsSuccessResponseItem {
  /**
   * The expression type of the target that was requested to be created.
   * @type {string}
   * @memberof SponsoredProductsCreateTargetPromotionGroupTargetsSuccessResponseItem
   */
  expressionType?: string;
  /**
   *
   * @type {SponsoredProductsCreateTarget}
   * @memberof SponsoredProductsCreateTargetPromotionGroupTargetsSuccessResponseItem
   */
  targetDetails?: SponsoredProductsCreateTarget;
  /**
   * The target that was requested to be created.
   * @type {string}
   * @memberof SponsoredProductsCreateTargetPromotionGroupTargetsSuccessResponseItem
   */
  target?: string;
}
/**
 * Request object for creating target promotion group targets in a target promotion group.
 * @export
 * @interface SponsoredProductsCreateTargetPromotionGroupTargetsV2RequestContent
 */
export interface SponsoredProductsCreateTargetPromotionGroupTargetsV2RequestContent {
  /**
   * The id of the target promotion group where the targets are being added.
   * @type {string}
   * @memberof SponsoredProductsCreateTargetPromotionGroupTargetsV2RequestContent
   */
  targetPromotionGroupId: string;
  /**
   * List of targets to be added to the target promotion group.
   * @type {Array<SponsoredProductsCreateTargetRequestV2>}
   * @memberof SponsoredProductsCreateTargetPromotionGroupTargetsV2RequestContent
   */
  targets?: Array<SponsoredProductsCreateTargetRequestV2>;
}
/**
 * Response object for creating target promotion group targets.
 * @export
 * @interface SponsoredProductsCreateTargetPromotionGroupTargetsV2ResponseContent
 */
export interface SponsoredProductsCreateTargetPromotionGroupTargetsV2ResponseContent {
  /**
   *
   * @type {Array<SponsoredProductsCreateTargetPromotionGroupTargetsBatchSuccess>}
   * @memberof SponsoredProductsCreateTargetPromotionGroupTargetsV2ResponseContent
   */
  success?: Array<SponsoredProductsCreateTargetPromotionGroupTargetsBatchSuccess>;
  /**
   *
   * @type {Array<SponsoredProductsCreateTargetPromotionGroupTargetsBatchError>}
   * @memberof SponsoredProductsCreateTargetPromotionGroupTargetsV2ResponseContent
   */
  error?: Array<SponsoredProductsCreateTargetPromotionGroupTargetsBatchError>;
}
/**
 *
 * @export
 * @interface SponsoredProductsCreateTargetPromotionGroupsInternalRequestContent
 */
export interface SponsoredProductsCreateTargetPromotionGroupsInternalRequestContent {
  /**
   *
   * @type {Array<string>}
   * @memberof SponsoredProductsCreateTargetPromotionGroupsInternalRequestContent
   */
  adIds?: Array<string>;
  /**
   *
   * @type {SponsoredProductsExistingCampaignDetails}
   * @memberof SponsoredProductsCreateTargetPromotionGroupsInternalRequestContent
   */
  existingCampaignDetails?: SponsoredProductsExistingCampaignDetails;
  /**
   *
   * @type {SponsoredProductsApiGatewayContext}
   * @memberof SponsoredProductsCreateTargetPromotionGroupsInternalRequestContent
   */
  apiGatewayContext: SponsoredProductsApiGatewayContext;
  /**
   * Entity object identifier
   * @type {string}
   * @memberof SponsoredProductsCreateTargetPromotionGroupsInternalRequestContent
   */
  adGroupId: string;
  /**
   *
   * @type {SponsoredProductsNewCampaignDetails}
   * @memberof SponsoredProductsCreateTargetPromotionGroupsInternalRequestContent
   */
  newCampaignDetails?: SponsoredProductsNewCampaignDetails;
}
/**
 * Response object for creating a target promotion group.
 * @export
 * @interface SponsoredProductsCreateTargetPromotionGroupsInternalResponseContent
 */
export interface SponsoredProductsCreateTargetPromotionGroupsInternalResponseContent {
  /**
   *
   * @type {SponsoredProductsTargetPromotionGroup}
   * @memberof SponsoredProductsCreateTargetPromotionGroupsInternalResponseContent
   */
  targetPromotionGroup?: SponsoredProductsTargetPromotionGroup;
}
/**
 * Request object for creating a Target Promotion Group.
 * @export
 * @interface SponsoredProductsCreateTargetPromotionGroupsRequestContent
 */
export interface SponsoredProductsCreateTargetPromotionGroupsRequestContent {
  /**
   * The list of adIds (optional) of the Ad Group of the Auto-Targeting campaign, that will be part of the Target Promotion Group. If this     list is empty, all the Product Ads under the Ad Group will be part of the Target Promotion Group.
   * @type {Array<string>}
   * @memberof SponsoredProductsCreateTargetPromotionGroupsRequestContent
   */
  adIds?: Array<string>;
  /**
   *
   * @type {SponsoredProductsExistingCampaignDetails}
   * @memberof SponsoredProductsCreateTargetPromotionGroupsRequestContent
   */
  existingCampaignDetails?: SponsoredProductsExistingCampaignDetails;
  /**
   * The adGroupId of the Ad Group of an Auto-Targeting campaign that will be part of the Target Promotion Group.
   * @type {string}
   * @memberof SponsoredProductsCreateTargetPromotionGroupsRequestContent
   */
  adGroupId: string;
  /**
   *
   * @type {SponsoredProductsNewCampaignDetails}
   * @memberof SponsoredProductsCreateTargetPromotionGroupsRequestContent
   */
  newCampaignDetails?: SponsoredProductsNewCampaignDetails;
}
/**
 * Response object for creating a target promotion group.
 * @export
 * @interface SponsoredProductsCreateTargetPromotionGroupsResponseContent
 */
export interface SponsoredProductsCreateTargetPromotionGroupsResponseContent {
  /**
   *
   * @type {SponsoredProductsTargetPromotionGroup}
   * @memberof SponsoredProductsCreateTargetPromotionGroupsResponseContent
   */
  targetPromotionGroup?: SponsoredProductsTargetPromotionGroup;
}
/**
 * Request object for creating a Target Promotion Group.
 * @export
 * @interface SponsoredProductsCreateTargetPromotionGroupsV2RequestContent
 */
export interface SponsoredProductsCreateTargetPromotionGroupsV2RequestContent {
  /**
   * The list of adIds (optional) of the source Ad Group, that will be part of the Target Promotion Group. If this     list is not provided, all the Product Ads under the source Ad Group will be part of the Target Promotion Group.
   * @type {Array<string>}
   * @memberof SponsoredProductsCreateTargetPromotionGroupsV2RequestContent
   */
  adIds?: Array<string>;
  /**
   * List of existing manual campaign ad groups to be added in the Target Promotion Group. It must contain one keyword ad group, or one     product ad group, or both. The request will fail if this field is provided alongside newCampaignDetails.
   * @type {Array<SponsoredProductsExistingAdGroup>}
   * @memberof SponsoredProductsCreateTargetPromotionGroupsV2RequestContent
   */
  existingCampaignDetails?: Array<SponsoredProductsExistingAdGroup>;
  /**
   * The name of the target promotion group that will be created.
   * @type {string}
   * @memberof SponsoredProductsCreateTargetPromotionGroupsV2RequestContent
   */
  targetPromotionGroupName: string;
  /**
   * The adGroupId of the source Ad Group that will be part of the Target Promotion Group.
   * @type {string}
   * @memberof SponsoredProductsCreateTargetPromotionGroupsV2RequestContent
   */
  adGroupId: string;
  /**
   * List of new destination manual campaigns to be created as part of the Target Promotion Group. It must contain setting for the creation of      one keyword ad group, or one product ad group, or both. The request will fail if this field is provided alongside existingCampaignDetails.
   * @type {Array<SponsoredProductsNewCampaign>}
   * @memberof SponsoredProductsCreateTargetPromotionGroupsV2RequestContent
   */
  newCampaignDetails?: Array<SponsoredProductsNewCampaign>;
}
/**
 * Response object for creating a target promotion group.
 * @export
 * @interface SponsoredProductsCreateTargetPromotionGroupsV2ResponseContent
 */
export interface SponsoredProductsCreateTargetPromotionGroupsV2ResponseContent {
  /**
   *
   * @type {SponsoredProductsTargetPromotionGroupV2}
   * @memberof SponsoredProductsCreateTargetPromotionGroupsV2ResponseContent
   */
  targetPromotionGroup?: SponsoredProductsTargetPromotionGroupV2;
}
/**
 * Request object for the target promotion group\'s target.
 * @export
 * @interface SponsoredProductsCreateTargetRequest
 */
export interface SponsoredProductsCreateTargetRequest {
  /**
   * The match type (for KEYWORDs) or the expression type (for PRODUCT). One of QUERY_BROAD_MATCHES,     QUERY_EXACT_MATCHES, QUERY_PHRASE_MATCHES, ASIN_SAME_AS, ASIN_EXPANDED_FROM
   * @type {string}
   * @memberof SponsoredProductsCreateTargetRequest
   */
  expressionType: string;
  /**
   * Bid associated with the target. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
   * @type {number}
   * @memberof SponsoredProductsCreateTargetRequest
   */
  bid?: number;
  /**
   * The keyword or the product ASIN to be targeted.
   * @type {string}
   * @memberof SponsoredProductsCreateTargetRequest
   */
  target: string;
}
/**
 * @type SponsoredProductsCreateTargetRequestV2
 * Request object for target promotion group\'s target.
 * @export
 */
export type SponsoredProductsCreateTargetRequestV2 = KeywordTarget | ProductTarget;

/**
 *
 * @export
 * @interface SponsoredProductsCreateTargetingClause
 */
export interface SponsoredProductsCreateTargetingClause {
  /**
   * The targeting expression.
   * @type {Array<SponsoredProductsCreateTargetingExpressionPredicate>}
   * @memberof SponsoredProductsCreateTargetingClause
   */
  expression: Array<SponsoredProductsCreateTargetingExpressionPredicate>;
  /**
   * The identifier of the campaign to which this target is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateTargetingClause
   */
  campaignId: string;
  /**
   *
   * @type {SponsoredProductsCreateExpressionType}
   * @memberof SponsoredProductsCreateTargetingClause
   */
  expressionType: SponsoredProductsCreateExpressionType;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateEntityState}
   * @memberof SponsoredProductsCreateTargetingClause
   */
  state: SponsoredProductsCreateOrUpdateEntityState;
  /**
   * The bid for ads sourced using the target. Targets that do not have bid values in listTargetingClauses will inherit the defaultBid from the adGroup level. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
   * @type {number}
   * @memberof SponsoredProductsCreateTargetingClause
   */
  bid?: number | null;
  /**
   * The identifier of the ad group to which this target is associated.
   * @type {string}
   * @memberof SponsoredProductsCreateTargetingClause
   */
  adGroupId: string;
}

/**
 *
 * @export
 * @interface SponsoredProductsCreateTargetingExpressionPredicate
 */
export interface SponsoredProductsCreateTargetingExpressionPredicate {
  /**
   *
   * @type {SponsoredProductsCreateTargetingExpressionPredicateType}
   * @memberof SponsoredProductsCreateTargetingExpressionPredicate
   */
  type: SponsoredProductsCreateTargetingExpressionPredicateType;
  /**
   * The expression value
   * @type {string}
   * @memberof SponsoredProductsCreateTargetingExpressionPredicate
   */
  value?: string;
}

/**
 * The type of targeting expression. You can specify values for the following predicates: | Predicate | Description | | --- | --- | | `ASIN_CATEGORY_SAME_AS` | Target the category that is the same as the category expressed. | | `ASIN_BRAND_SAME_AS` | Target the brand that is the same as the brand expressed. | | `ASIN_PRICE_LESS_THAN` | Target a price that is less than the price expressed. | | `ASIN_PRICE_BETWEEN` | Target a price that is between the prices expressed. | | `ASIN_PRICE_GREATER_THAN` | Target a price that is greater than the price expressed. | | `ASIN_REVIEW_RATING_LESS_THAN` | Target a review rating less than the review rating that is expressed. | | `ASIN_REVIEW_RATING_BETWEEN` | Target a review rating that is between the review ratings expressed. | | `ASIN_REVIEW_RATING_GREATER_THAN` | Target a review rating that is greater than the review rating expressed. | | `ASIN_SAME_AS` | Target an ASIN that is the same as the ASIN expressed. | | `ASIN_IS_PRIME_SHIPPING_ELIGIBLE` | Target products that are Prime Shipping Eligible. This refinement can be applied at a category or brand level only. | | `ASIN_AGE_RANGE_SAME_AS` | Target an age range that is in the expressed range. This refinement can be applied for toys and games categories only. | | `ASIN_GENRE_SAME_AS` | Target products related to the expressed genre. This refinement can be applied for Books and eBooks categories only.   | | `ASIN_EXPANDED_FROM` | Target products similar in performance to the ASIN expressed.   | | `KEYWORD_GROUP_SAME_AS` | Target the keyword group that is the same as the keyword group expressed (Beta coming soon). |
 * @export
 * @enum {string}
 */

export const SponsoredProductsCreateTargetingExpressionPredicateType = {
  AsinCategorySameAs: 'ASIN_CATEGORY_SAME_AS',
  AsinBrandSameAs: 'ASIN_BRAND_SAME_AS',
  AsinPriceLessThan: 'ASIN_PRICE_LESS_THAN',
  AsinPriceBetween: 'ASIN_PRICE_BETWEEN',
  AsinPriceGreaterThan: 'ASIN_PRICE_GREATER_THAN',
  AsinReviewRatingLessThan: 'ASIN_REVIEW_RATING_LESS_THAN',
  AsinReviewRatingBetween: 'ASIN_REVIEW_RATING_BETWEEN',
  AsinReviewRatingGreaterThan: 'ASIN_REVIEW_RATING_GREATER_THAN',
  AsinSameAs: 'ASIN_SAME_AS',
  AsinAgeRangeSameAs: 'ASIN_AGE_RANGE_SAME_AS',
  AsinGenreSameAs: 'ASIN_GENRE_SAME_AS',
  AsinIsPrimeShippingEligible: 'ASIN_IS_PRIME_SHIPPING_ELIGIBLE',
  AsinExpandedFrom: 'ASIN_EXPANDED_FROM',
  KeywordGroupSameAs: 'KEYWORD_GROUP_SAME_AS',
} as const;

export type SponsoredProductsCreateTargetingExpressionPredicateType =
  (typeof SponsoredProductsCreateTargetingExpressionPredicateType)[keyof typeof SponsoredProductsCreateTargetingExpressionPredicateType];

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsCurrency = {
  Usd: 'USD',
  Eur: 'EUR',
  Gbp: 'GBP',
  Mxn: 'MXN',
  Jpy: 'JPY',
  Inr: 'INR',
  Pln: 'PLN',
  Sgd: 'SGD',
  Aud: 'AUD',
  Cad: 'CAD',
  Brl: 'BRL',
  Sek: 'SEK',
  Try: 'TRY',
  Aed: 'AED',
  Sar: 'SAR',
  Egp: 'EGP',
} as const;

export type SponsoredProductsCurrency = (typeof SponsoredProductsCurrency)[keyof typeof SponsoredProductsCurrency];

/**
 * Errors related to currency
 * @export
 * @interface SponsoredProductsCurrencyError
 */
export interface SponsoredProductsCurrencyError {
  /**
   *
   * @type {SponsoredProductsCurrencyErrorReason}
   * @memberof SponsoredProductsCurrencyError
   */
  reason: SponsoredProductsCurrencyErrorReason;
  /**
   *
   * @type {SponsoredProductsErrorCause}
   * @memberof SponsoredProductsCurrencyError
   */
  cause?: SponsoredProductsErrorCause;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsCurrencyError
   */
  message: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsCurrencyErrorReason = {
  PreferredCurrencyNotSet: 'PREFERRED_CURRENCY_NOT_SET',
  CurrencyNotSupported: 'CURRENCY_NOT_SUPPORTED',
  CannotUpdateCurrency: 'CANNOT_UPDATE_CURRENCY',
  CurrencyNotMatchingPreferredCurrency: 'CURRENCY_NOT_MATCHING_PREFERRED_CURRENCY',
} as const;

export type SponsoredProductsCurrencyErrorReason = (typeof SponsoredProductsCurrencyErrorReason)[keyof typeof SponsoredProductsCurrencyErrorReason];

/**
 *
 * @export
 * @interface SponsoredProductsDateError
 */
export interface SponsoredProductsDateError {
  /**
   *
   * @type {SponsoredProductsDateErrorReason}
   * @memberof SponsoredProductsDateError
   */
  reason: SponsoredProductsDateErrorReason;
  /**
   *
   * @type {SponsoredProductsErrorCause}
   * @memberof SponsoredProductsDateError
   */
  cause?: SponsoredProductsErrorCause;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsDateError
   */
  message: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsDateErrorReason = {
  InvalidDate: 'INVALID_DATE',
  StartDateEarlierThanToday: 'START_DATE_EARLIER_THAN_TODAY',
  EndDateEarlierThanToday: 'END_DATE_EARLIER_THAN_TODAY',
  StartDateLaterThanMaximum: 'START_DATE_LATER_THAN_MAXIMUM',
  EndDateLaterThanMaximum: 'END_DATE_LATER_THAN_MAXIMUM',
  StartDateAfterEndDate: 'START_DATE_AFTER_END_DATE',
  UpdatingReadOnlyStartDate: 'UPDATING_READ_ONLY_START_DATE',
  UpdatingReadOnlyEndDate: 'UPDATING_READ_ONLY_END_DATE',
  UpdatingEndedCampaignWithoutExtension: 'UPDATING_ENDED_CAMPAIGN_WITHOUT_EXTENSION',
} as const;

export type SponsoredProductsDateErrorReason = (typeof SponsoredProductsDateErrorReason)[keyof typeof SponsoredProductsDateErrorReason];

/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent
   */
  adGroupIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsAdGroupsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsAdGroupsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkAdGroupOperationResponse}
   * @memberof SponsoredProductsDeleteSponsoredProductsAdGroupsResponseContent
   */
  adGroups: SponsoredProductsBulkAdGroupOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent
   */
  campaignNegativeKeywordIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkCampaignNegativeKeywordOperationResponse}
   * @memberof SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsResponseContent
   */
  campaignNegativeKeywords: SponsoredProductsBulkCampaignNegativeKeywordOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent
   */
  campaignNegativeTargetIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkCampaignNegativeTargetingClauseOperationResponse}
   * @memberof SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesResponseContent
   */
  campaignNegativeTargetingClauses: SponsoredProductsBulkCampaignNegativeTargetingClauseOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsCampaignsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsCampaignsRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsDeleteSponsoredProductsCampaignsRequestContent
   */
  campaignIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsCampaignsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsCampaignsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkCampaignOperationResponse}
   * @memberof SponsoredProductsDeleteSponsoredProductsCampaignsResponseContent
   */
  campaigns: SponsoredProductsBulkCampaignOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftAdGroupsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftAdGroupsRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsDeleteSponsoredProductsDraftAdGroupsRequestContent
   */
  adGroupIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftAdGroupsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftAdGroupsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkDraftAdGroupOperationResponse}
   * @memberof SponsoredProductsDeleteSponsoredProductsDraftAdGroupsResponseContent
   */
  draftAdGroups: SponsoredProductsBulkDraftAdGroupOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftCampaignNegativeKeywordsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftCampaignNegativeKeywordsRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsDeleteSponsoredProductsDraftCampaignNegativeKeywordsRequestContent
   */
  campaignNegativeKeywordIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftCampaignNegativeKeywordsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftCampaignNegativeKeywordsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkDraftCampaignNegativeKeywordOperationResponse}
   * @memberof SponsoredProductsDeleteSponsoredProductsDraftCampaignNegativeKeywordsResponseContent
   */
  campaignNegativeKeywords: SponsoredProductsBulkDraftCampaignNegativeKeywordOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftCampaignsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftCampaignsRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsDeleteSponsoredProductsDraftCampaignsRequestContent
   */
  campaignIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftCampaignsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftCampaignsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkDraftCampaignOperationResponse}
   * @memberof SponsoredProductsDeleteSponsoredProductsDraftCampaignsResponseContent
   */
  campaigns: SponsoredProductsBulkDraftCampaignOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftKeywordsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftKeywordsRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsDeleteSponsoredProductsDraftKeywordsRequestContent
   */
  keywordIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftKeywordsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftKeywordsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkDraftKeywordOperationResponse}
   * @memberof SponsoredProductsDeleteSponsoredProductsDraftKeywordsResponseContent
   */
  keywords: SponsoredProductsBulkDraftKeywordOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftNegativeKeywordsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftNegativeKeywordsRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsDeleteSponsoredProductsDraftNegativeKeywordsRequestContent
   */
  negativeKeywordIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftNegativeKeywordsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftNegativeKeywordsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkDraftNegativeKeywordOperationResponse}
   * @memberof SponsoredProductsDeleteSponsoredProductsDraftNegativeKeywordsResponseContent
   */
  negativeKeywords: SponsoredProductsBulkDraftNegativeKeywordOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftNegativeTargetingClausesRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsDeleteSponsoredProductsDraftNegativeTargetingClausesRequestContent
   */
  negativeTargetIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftNegativeTargetingClausesResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkDraftNegativeTargetingClauseOperationResponse}
   * @memberof SponsoredProductsDeleteSponsoredProductsDraftNegativeTargetingClausesResponseContent
   */
  negativeTargetingClauses: SponsoredProductsBulkDraftNegativeTargetingClauseOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftProductAdsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftProductAdsRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsDeleteSponsoredProductsDraftProductAdsRequestContent
   */
  adIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftProductAdsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftProductAdsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkDraftProductAdOperationResponse}
   * @memberof SponsoredProductsDeleteSponsoredProductsDraftProductAdsResponseContent
   */
  productAds: SponsoredProductsBulkDraftProductAdOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftTargetingClausesRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftTargetingClausesRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsDeleteSponsoredProductsDraftTargetingClausesRequestContent
   */
  targetIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftTargetingClausesResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftTargetingClausesResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkDraftTargetingClauseOperationResponse}
   * @memberof SponsoredProductsDeleteSponsoredProductsDraftTargetingClausesResponseContent
   */
  targetingClauses: SponsoredProductsBulkDraftTargetingClauseOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalAdGroupsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalAdGroupsRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsDeleteSponsoredProductsGlobalAdGroupsRequestContent
   */
  adGroupIdFilter?: SponsoredProductsObjectIdFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalAdGroupsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalAdGroupsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkGlobalAdGroupOperationResponse}
   * @memberof SponsoredProductsDeleteSponsoredProductsGlobalAdGroupsResponseContent
   */
  adGroups: SponsoredProductsBulkGlobalAdGroupOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsDeleteSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent
   */
  campaignNegativeKeywordIdFilter?: SponsoredProductsObjectIdFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkGlobalCampaignNegativeKeywordOperationResponse}
   * @memberof SponsoredProductsDeleteSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent
   */
  campaignNegativeKeywords: SponsoredProductsBulkGlobalCampaignNegativeKeywordOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalCampaignsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalCampaignsRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsDeleteSponsoredProductsGlobalCampaignsRequestContent
   */
  campaignIdFilter?: SponsoredProductsObjectIdFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalCampaignsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalCampaignsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkGlobalCampaignOperationResponse}
   * @memberof SponsoredProductsDeleteSponsoredProductsGlobalCampaignsResponseContent
   */
  campaigns: SponsoredProductsBulkGlobalCampaignOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalKeywordsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalKeywordsRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsDeleteSponsoredProductsGlobalKeywordsRequestContent
   */
  keywordIdFilter?: SponsoredProductsObjectIdFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalKeywordsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalKeywordsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkGlobalKeywordOperationResponse}
   * @memberof SponsoredProductsDeleteSponsoredProductsGlobalKeywordsResponseContent
   */
  keywords: SponsoredProductsBulkGlobalKeywordOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalNegativeKeywordsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalNegativeKeywordsRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsDeleteSponsoredProductsGlobalNegativeKeywordsRequestContent
   */
  negativeKeywordIdFilter?: SponsoredProductsObjectIdFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalNegativeKeywordsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalNegativeKeywordsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkGlobalNegativeKeywordOperationResponse}
   * @memberof SponsoredProductsDeleteSponsoredProductsGlobalNegativeKeywordsResponseContent
   */
  negativeKeywords: SponsoredProductsBulkGlobalNegativeKeywordOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalNegativeTargetingClausesRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsDeleteSponsoredProductsGlobalNegativeTargetingClausesRequestContent
   */
  negativeTargetIdFilter?: SponsoredProductsObjectIdFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalNegativeTargetingClausesResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkGlobalNegativeTargetingClauseOperationResponse}
   * @memberof SponsoredProductsDeleteSponsoredProductsGlobalNegativeTargetingClausesResponseContent
   */
  negativeTargetingClauses: SponsoredProductsBulkGlobalNegativeTargetingClauseOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalProductAdsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalProductAdsRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsDeleteSponsoredProductsGlobalProductAdsRequestContent
   */
  adIdFilter?: SponsoredProductsObjectIdFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalProductAdsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalProductAdsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkGlobalProductAdOperationResponse}
   * @memberof SponsoredProductsDeleteSponsoredProductsGlobalProductAdsResponseContent
   */
  productAds: SponsoredProductsBulkGlobalProductAdOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalTargetingClausesRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalTargetingClausesRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsDeleteSponsoredProductsGlobalTargetingClausesRequestContent
   */
  targetIdFilter?: SponsoredProductsObjectIdFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalTargetingClausesResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalTargetingClausesResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkGlobalTargetingClauseOperationResponse}
   * @memberof SponsoredProductsDeleteSponsoredProductsGlobalTargetingClausesResponseContent
   */
  targetingClauses: SponsoredProductsBulkGlobalTargetingClauseOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsKeywordsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsKeywordsRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsDeleteSponsoredProductsKeywordsRequestContent
   */
  keywordIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsKeywordsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsKeywordsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkKeywordOperationResponse}
   * @memberof SponsoredProductsDeleteSponsoredProductsKeywordsResponseContent
   */
  keywords: SponsoredProductsBulkKeywordOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent
   */
  negativeKeywordIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsNegativeKeywordsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsNegativeKeywordsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkNegativeKeywordOperationResponse}
   * @memberof SponsoredProductsDeleteSponsoredProductsNegativeKeywordsResponseContent
   */
  negativeKeywords: SponsoredProductsBulkNegativeKeywordOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent
   */
  negativeTargetIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkNegativeTargetingClauseOperationResponse}
   * @memberof SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesResponseContent
   */
  negativeTargetingClauses: SponsoredProductsBulkNegativeTargetingClauseOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent
   */
  adIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkProductAdOperationResponse}
   * @memberof SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent
   */
  productAds: SponsoredProductsBulkProductAdOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent
   */
  targetIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkTargetingClauseOperationResponse}
   * @memberof SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent
   */
  targetingClauses: SponsoredProductsBulkTargetingClauseOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteTargetPromotionGroupTargetsInternalRequestContent
 */
export interface SponsoredProductsDeleteTargetPromotionGroupTargetsInternalRequestContent {
  /**
   *
   * @type {SponsoredProductsApiGatewayContext}
   * @memberof SponsoredProductsDeleteTargetPromotionGroupTargetsInternalRequestContent
   */
  apiGatewayContext: SponsoredProductsApiGatewayContext;
  /**
   *
   * @type {Array<SponsoredProductsDeleteTargetRequest>}
   * @memberof SponsoredProductsDeleteTargetPromotionGroupTargetsInternalRequestContent
   */
  targetPromotionGroupTargets?: Array<SponsoredProductsDeleteTargetRequest>;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteTargetPromotionGroupsInternalRequestContent
 */
export interface SponsoredProductsDeleteTargetPromotionGroupsInternalRequestContent {
  /**
   *
   * @type {SponsoredProductsApiGatewayContext}
   * @memberof SponsoredProductsDeleteTargetPromotionGroupsInternalRequestContent
   */
  apiGatewayContext: SponsoredProductsApiGatewayContext;
  /**
   *
   * @type {Array<SponsoredProductsTargetPromotionGroup>}
   * @memberof SponsoredProductsDeleteTargetPromotionGroupsInternalRequestContent
   */
  targetPromotionGroups?: Array<SponsoredProductsTargetPromotionGroup>;
}
/**
 *
 * @export
 * @interface SponsoredProductsDeleteTargetRequest
 */
export interface SponsoredProductsDeleteTargetRequest {
  /**
   * Entity object identifier
   * @type {string}
   * @memberof SponsoredProductsDeleteTargetRequest
   */
  targetPromotionGroupId: string;
  /**
   * Entity object identifier
   * @type {string}
   * @memberof SponsoredProductsDeleteTargetRequest
   */
  targetId: string;
  /**
   * Entity object identifier
   * @type {string}
   * @memberof SponsoredProductsDeleteTargetRequest
   */
  manualTargetingAdGroupId: string;
  /**
   * Entity object identifier
   * @type {string}
   * @memberof SponsoredProductsDeleteTargetRequest
   */
  autoTargetingCampaignAdGroupId: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftAdGroup
 */
export interface SponsoredProductsDraftAdGroup {
  /**
   * The identifier of the campaign to which the keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsDraftAdGroup
   */
  campaignId: string;
  /**
   * The name of the ad group.
   * @type {string}
   * @memberof SponsoredProductsDraftAdGroup
   */
  name: string;
  /**
   * The identifier of the keyword.
   * @type {string}
   * @memberof SponsoredProductsDraftAdGroup
   */
  adGroupId: string;
  /**
   * A bid value for use when no bid is specified for keywords in the ad group. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
   * @type {number}
   * @memberof SponsoredProductsDraftAdGroup
   */
  defaultBid: number;
  /**
   *
   * @type {SponsoredProductsDraftAdGroupExtendedData}
   * @memberof SponsoredProductsDraftAdGroup
   */
  extendedData?: SponsoredProductsDraftAdGroupExtendedData;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftAdGroupAccessError
 */
export interface SponsoredProductsDraftAdGroupAccessError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsDraftAdGroupAccessError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsDraftAdGroupAccessErrorSelector}
   * @memberof SponsoredProductsDraftAdGroupAccessError
   */
  errorValue: SponsoredProductsDraftAdGroupAccessErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftAdGroupAccessErrorSelector
 */
export interface SponsoredProductsDraftAdGroupAccessErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsDraftAdGroupAccessErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsDraftAdGroupAccessErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsDraftAdGroupAccessErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsDraftAdGroupAccessErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsDraftAdGroupAccessErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsDraftAdGroupAccessErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsDraftAdGroupAccessErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in accessing campaign management entities
 * @export
 * @interface SponsoredProductsDraftAdGroupAccessExceptionResponseContent
 */
export interface SponsoredProductsDraftAdGroupAccessExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsDraftAdGroupAccessExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsDraftAdGroupAccessExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsDraftAdGroupAccessError>}
   * @memberof SponsoredProductsDraftAdGroupAccessExceptionResponseContent
   */
  errors?: Array<SponsoredProductsDraftAdGroupAccessError>;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftAdGroupExtendedData
 */
export interface SponsoredProductsDraftAdGroupExtendedData {
  /**
   * Last updated date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsDraftAdGroupExtendedData
   */
  lastUpdateDateTime?: string;
  /**
   *
   * @type {SponsoredProductsAdGroupServingStatus}
   * @memberof SponsoredProductsDraftAdGroupExtendedData
   */
  servingStatus?: SponsoredProductsAdGroupServingStatus;
  /**
   * Creation date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsDraftAdGroupExtendedData
   */
  creationDateTime?: string;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftAdGroupFailureResponseItem
 */
export interface SponsoredProductsDraftAdGroupFailureResponseItem {
  /**
   * the index of the adGroup in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsDraftAdGroupFailureResponseItem
   */
  index: number;
  /**
   * A list of validation errors
   * @type {Array<SponsoredProductsDraftAdGroupMutationError>}
   * @memberof SponsoredProductsDraftAdGroupFailureResponseItem
   */
  errors?: Array<SponsoredProductsDraftAdGroupMutationError>;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftAdGroupMutationError
 */
export interface SponsoredProductsDraftAdGroupMutationError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsDraftAdGroupMutationError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsDraftAdGroupMutationErrorSelector}
   * @memberof SponsoredProductsDraftAdGroupMutationError
   */
  errorValue: SponsoredProductsDraftAdGroupMutationErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftAdGroupMutationErrorSelector
 */
export interface SponsoredProductsDraftAdGroupMutationErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsDraftAdGroupMutationErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsEntityStateError}
   * @memberof SponsoredProductsDraftAdGroupMutationErrorSelector
   */
  entityStateError?: SponsoredProductsEntityStateError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsDraftAdGroupMutationErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsBiddingError}
   * @memberof SponsoredProductsDraftAdGroupMutationErrorSelector
   */
  biddingError?: SponsoredProductsBiddingError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsDraftAdGroupMutationErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsDuplicateValueError}
   * @memberof SponsoredProductsDraftAdGroupMutationErrorSelector
   */
  duplicateValueError?: SponsoredProductsDuplicateValueError;
  /**
   *
   * @type {SponsoredProductsBillingError}
   * @memberof SponsoredProductsDraftAdGroupMutationErrorSelector
   */
  billingError?: SponsoredProductsBillingError;
  /**
   *
   * @type {SponsoredProductsEntityQuotaError}
   * @memberof SponsoredProductsDraftAdGroupMutationErrorSelector
   */
  entityQuotaError?: SponsoredProductsEntityQuotaError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsDraftAdGroupMutationErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsDraftAdGroupMutationErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsDraftAdGroupMutationErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsDraftAdGroupMutationErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in mutating campaign management entities
 * @export
 * @interface SponsoredProductsDraftAdGroupMutationExceptionResponseContent
 */
export interface SponsoredProductsDraftAdGroupMutationExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsDraftAdGroupMutationExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsDraftAdGroupMutationExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsDraftAdGroupMutationError>}
   * @memberof SponsoredProductsDraftAdGroupMutationExceptionResponseContent
   */
  errors?: Array<SponsoredProductsDraftAdGroupMutationError>;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftAdGroupSuccessResponseItem
 */
export interface SponsoredProductsDraftAdGroupSuccessResponseItem {
  /**
   *
   * @type {SponsoredProductsDraftAdGroup}
   * @memberof SponsoredProductsDraftAdGroupSuccessResponseItem
   */
  adGroup?: SponsoredProductsDraftAdGroup;
  /**
   * the index of the draftAdGroup in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsDraftAdGroupSuccessResponseItem
   */
  index: number;
  /**
   * the adGroup ID
   * @type {string}
   * @memberof SponsoredProductsDraftAdGroupSuccessResponseItem
   */
  adGroupId?: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftCampaign
 */
export interface SponsoredProductsDraftCampaign {
  /**
   * Restrict the ad to a particular site. If the value is absent (ie null), it means no site restrictions and defaults to current Sponsored Products campaign behavior. This field is coming up and is not ready for use at the moment.
   * @type {Array<SponsoredProductsSiteRestriction>}
   * @memberof SponsoredProductsDraftCampaign
   */
  siteRestrictions?: Array<SponsoredProductsSiteRestriction>;
  /**
   * The identifier of an existing portfolio to which the draft is associated.
   * @type {string}
   * @memberof SponsoredProductsDraftCampaign
   */
  portfolioId?: string;
  /**
   * The format of the date is YYYY-MM-DD.
   * @type {string}
   * @memberof SponsoredProductsDraftCampaign
   */
  endDate?: string | null;
  /**
   * The identifier of the draft.
   * @type {string}
   * @memberof SponsoredProductsDraftCampaign
   */
  campaignId: string;
  /**
   * The name of the draft.
   * @type {string}
   * @memberof SponsoredProductsDraftCampaign
   */
  name: string;
  /**
   *
   * @type {SponsoredProductsTargetingType}
   * @memberof SponsoredProductsDraftCampaign
   */
  targetingType: SponsoredProductsTargetingType;
  /**
   *
   * @type {SponsoredProductsDraftCampaignDynamicBidding}
   * @memberof SponsoredProductsDraftCampaign
   */
  dynamicBidding?: SponsoredProductsDraftCampaignDynamicBidding;
  /**
   * The format of the date is YYYY-MM-DD.
   * @type {string}
   * @memberof SponsoredProductsDraftCampaign
   */
  startDate?: string;
  /**
   *
   * @type {SponsoredProductsDraftCampaignBudget}
   * @memberof SponsoredProductsDraftCampaign
   */
  budget: SponsoredProductsDraftCampaignBudget;
  /**
   * A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.
   * @type {{ [key: string]: string; }}
   * @memberof SponsoredProductsDraftCampaign
   */
  tags?: { [key: string]: string };
  /**
   *
   * @type {SponsoredProductsDraftCampaignExtendedData}
   * @memberof SponsoredProductsDraftCampaign
   */
  extendedData?: SponsoredProductsDraftCampaignExtendedData;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftCampaignAccessError
 */
export interface SponsoredProductsDraftCampaignAccessError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsDraftCampaignAccessError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsDraftCampaignAccessErrorSelector}
   * @memberof SponsoredProductsDraftCampaignAccessError
   */
  errorValue: SponsoredProductsDraftCampaignAccessErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftCampaignAccessErrorSelector
 */
export interface SponsoredProductsDraftCampaignAccessErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsDraftCampaignAccessErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsDraftCampaignAccessErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsDateError}
   * @memberof SponsoredProductsDraftCampaignAccessErrorSelector
   */
  dateError?: SponsoredProductsDateError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsDraftCampaignAccessErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsDraftCampaignAccessErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsDraftCampaignAccessErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsDraftCampaignAccessErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsDraftCampaignAccessErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in accessing draft management entities
 * @export
 * @interface SponsoredProductsDraftCampaignAccessExceptionResponseContent
 */
export interface SponsoredProductsDraftCampaignAccessExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsDraftCampaignAccessExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsDraftCampaignAccessExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsDraftCampaignAccessError>}
   * @memberof SponsoredProductsDraftCampaignAccessExceptionResponseContent
   */
  errors?: Array<SponsoredProductsDraftCampaignAccessError>;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftCampaignBudget
 */
export interface SponsoredProductsDraftCampaignBudget {
  /**
   *
   * @type {SponsoredProductsDraftCampaignBudgetType}
   * @memberof SponsoredProductsDraftCampaignBudget
   */
  budgetType: SponsoredProductsDraftCampaignBudgetType;
  /**
   * Monetary value
   * @type {number}
   * @memberof SponsoredProductsDraftCampaignBudget
   */
  budget: number;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsDraftCampaignBudgetType = {
  Daily: 'DAILY',
  Other: 'OTHER',
} as const;

export type SponsoredProductsDraftCampaignBudgetType =
  (typeof SponsoredProductsDraftCampaignBudgetType)[keyof typeof SponsoredProductsDraftCampaignBudgetType];

/**
 *
 * @export
 * @interface SponsoredProductsDraftCampaignDynamicBidding
 */
export interface SponsoredProductsDraftCampaignDynamicBidding {
  /**
   *
   * @type {Array<SponsoredProductsDraftCampaignShopperCohortBidding>}
   * @memberof SponsoredProductsDraftCampaignDynamicBidding
   */
  shopperCohortBidding?: Array<SponsoredProductsDraftCampaignShopperCohortBidding>;
  /**
   *
   * @type {Array<SponsoredProductsDraftCampaignPlacementBidding>}
   * @memberof SponsoredProductsDraftCampaignDynamicBidding
   */
  placementBidding?: Array<SponsoredProductsDraftCampaignPlacementBidding>;
  /**
   *
   * @type {SponsoredProductsBiddingStrategy}
   * @memberof SponsoredProductsDraftCampaignDynamicBidding
   */
  strategy: SponsoredProductsBiddingStrategy;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftCampaignExtendedData
 */
export interface SponsoredProductsDraftCampaignExtendedData {
  /**
   * Last updated date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsDraftCampaignExtendedData
   */
  lastUpdateDateTime?: string;
  /**
   *
   * @type {SponsoredProductsCampaignServingStatus}
   * @memberof SponsoredProductsDraftCampaignExtendedData
   */
  servingStatus?: SponsoredProductsCampaignServingStatus;
  /**
   * Creation date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsDraftCampaignExtendedData
   */
  creationDateTime?: string;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftCampaignMutationError
 */
export interface SponsoredProductsDraftCampaignMutationError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsDraftCampaignMutationError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsDraftCampaignMutationErrorSelector}
   * @memberof SponsoredProductsDraftCampaignMutationError
   */
  errorValue: SponsoredProductsDraftCampaignMutationErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftCampaignMutationErrorSelector
 */
export interface SponsoredProductsDraftCampaignMutationErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityStateError}
   * @memberof SponsoredProductsDraftCampaignMutationErrorSelector
   */
  entityStateError?: SponsoredProductsEntityStateError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsDraftCampaignMutationErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsDateError}
   * @memberof SponsoredProductsDraftCampaignMutationErrorSelector
   */
  dateError?: SponsoredProductsDateError;
  /**
   *
   * @type {SponsoredProductsBiddingError}
   * @memberof SponsoredProductsDraftCampaignMutationErrorSelector
   */
  biddingError?: SponsoredProductsBiddingError;
  /**
   *
   * @type {SponsoredProductsDuplicateValueError}
   * @memberof SponsoredProductsDraftCampaignMutationErrorSelector
   */
  duplicateValueError?: SponsoredProductsDuplicateValueError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsDraftCampaignMutationErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsDraftCampaignMutationErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsDraftCampaignMutationErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsDraftCampaignMutationErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsDraftCampaignMutationErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsBudgetError}
   * @memberof SponsoredProductsDraftCampaignMutationErrorSelector
   */
  budgetError?: SponsoredProductsBudgetError;
  /**
   *
   * @type {SponsoredProductsBillingError}
   * @memberof SponsoredProductsDraftCampaignMutationErrorSelector
   */
  billingError?: SponsoredProductsBillingError;
  /**
   *
   * @type {SponsoredProductsEntityQuotaError}
   * @memberof SponsoredProductsDraftCampaignMutationErrorSelector
   */
  entityQuotaError?: SponsoredProductsEntityQuotaError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsDraftCampaignMutationErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
}
/**
 * Exception resulting in mutating draft management entities
 * @export
 * @interface SponsoredProductsDraftCampaignMutationExceptionResponseContent
 */
export interface SponsoredProductsDraftCampaignMutationExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsDraftCampaignMutationExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsDraftCampaignMutationExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsDraftCampaignMutationError>}
   * @memberof SponsoredProductsDraftCampaignMutationExceptionResponseContent
   */
  errors?: Array<SponsoredProductsDraftCampaignMutationError>;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftCampaignMutationFailureResponseItem
 */
export interface SponsoredProductsDraftCampaignMutationFailureResponseItem {
  /**
   * the index of the draft in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsDraftCampaignMutationFailureResponseItem
   */
  index: number;
  /**
   * A list of validation errors
   * @type {Array<SponsoredProductsDraftCampaignMutationError>}
   * @memberof SponsoredProductsDraftCampaignMutationFailureResponseItem
   */
  errors?: Array<SponsoredProductsDraftCampaignMutationError>;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftCampaignMutationSuccessResponseItem
 */
export interface SponsoredProductsDraftCampaignMutationSuccessResponseItem {
  /**
   * the draft ID
   * @type {string}
   * @memberof SponsoredProductsDraftCampaignMutationSuccessResponseItem
   */
  campaignId?: string;
  /**
   * the index of the draft in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsDraftCampaignMutationSuccessResponseItem
   */
  index: number;
  /**
   *
   * @type {SponsoredProductsDraftCampaign}
   * @memberof SponsoredProductsDraftCampaignMutationSuccessResponseItem
   */
  campaign?: SponsoredProductsDraftCampaign;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftCampaignNegativeKeyword
 */
export interface SponsoredProductsDraftCampaignNegativeKeyword {
  /**
   * The identifier of the keyword.
   * @type {string}
   * @memberof SponsoredProductsDraftCampaignNegativeKeyword
   */
  keywordId: string;
  /**
   * The identifier of the draft to which the keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsDraftCampaignNegativeKeyword
   */
  campaignId: string;
  /**
   *
   * @type {SponsoredProductsNegativeMatchType}
   * @memberof SponsoredProductsDraftCampaignNegativeKeyword
   */
  matchType: SponsoredProductsNegativeMatchType;
  /**
   * The keyword text.
   * @type {string}
   * @memberof SponsoredProductsDraftCampaignNegativeKeyword
   */
  keywordText: string;
  /**
   *
   * @type {SponsoredProductsDraftCampaignNegativeKeywordExtendedData}
   * @memberof SponsoredProductsDraftCampaignNegativeKeyword
   */
  extendedData?: SponsoredProductsDraftCampaignNegativeKeywordExtendedData;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftCampaignNegativeKeywordAccessError
 */
export interface SponsoredProductsDraftCampaignNegativeKeywordAccessError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordAccessError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsDraftCampaignNegativeKeywordAccessErrorSelector}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordAccessError
   */
  errorValue: SponsoredProductsDraftCampaignNegativeKeywordAccessErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftCampaignNegativeKeywordAccessErrorSelector
 */
export interface SponsoredProductsDraftCampaignNegativeKeywordAccessErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordAccessErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordAccessErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordAccessErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordAccessErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordAccessErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordAccessErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordAccessErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in accessing draft management entities
 * @export
 * @interface SponsoredProductsDraftCampaignNegativeKeywordAccessExceptionResponseContent
 */
export interface SponsoredProductsDraftCampaignNegativeKeywordAccessExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordAccessExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordAccessExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsDraftCampaignNegativeKeywordAccessError>}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordAccessExceptionResponseContent
   */
  errors?: Array<SponsoredProductsDraftCampaignNegativeKeywordAccessError>;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftCampaignNegativeKeywordExtendedData
 */
export interface SponsoredProductsDraftCampaignNegativeKeywordExtendedData {
  /**
   * Last updated date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordExtendedData
   */
  lastUpdateDateTime?: string;
  /**
   *
   * @type {SponsoredProductsKeywordServingStatus}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordExtendedData
   */
  servingStatus?: SponsoredProductsKeywordServingStatus;
  /**
   * Creation date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordExtendedData
   */
  creationDateTime?: string;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftCampaignNegativeKeywordFailureResponseItem
 */
export interface SponsoredProductsDraftCampaignNegativeKeywordFailureResponseItem {
  /**
   * the index of the draft in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordFailureResponseItem
   */
  index: number;
  /**
   * A list of validation errors
   * @type {Array<SponsoredProductsDraftCampaignNegativeKeywordMutationError>}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordFailureResponseItem
   */
  errors?: Array<SponsoredProductsDraftCampaignNegativeKeywordMutationError>;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftCampaignNegativeKeywordMutationError
 */
export interface SponsoredProductsDraftCampaignNegativeKeywordMutationError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationError
   */
  errorValue: SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector
 */
export interface SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsEntityStateError}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector
   */
  entityStateError?: SponsoredProductsEntityStateError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsDuplicateValueError}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector
   */
  duplicateValueError?: SponsoredProductsDuplicateValueError;
  /**
   *
   * @type {SponsoredProductsBillingError}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector
   */
  billingError?: SponsoredProductsBillingError;
  /**
   *
   * @type {SponsoredProductsEntityQuotaError}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector
   */
  entityQuotaError?: SponsoredProductsEntityQuotaError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in mutating draft management entities
 * @export
 * @interface SponsoredProductsDraftCampaignNegativeKeywordMutationExceptionResponseContent
 */
export interface SponsoredProductsDraftCampaignNegativeKeywordMutationExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsDraftCampaignNegativeKeywordMutationError>}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationExceptionResponseContent
   */
  errors?: Array<SponsoredProductsDraftCampaignNegativeKeywordMutationError>;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftCampaignNegativeKeywordSuccessResponseItem
 */
export interface SponsoredProductsDraftCampaignNegativeKeywordSuccessResponseItem {
  /**
   *
   * @type {SponsoredProductsDraftCampaignNegativeKeyword}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordSuccessResponseItem
   */
  campaignNegativeKeyword?: SponsoredProductsDraftCampaignNegativeKeyword;
  /**
   * the negativeKeyword ID
   * @type {string}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordSuccessResponseItem
   */
  campaignNegativeKeywordId?: string;
  /**
   * the index of the draft in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsDraftCampaignNegativeKeywordSuccessResponseItem
   */
  index: number;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftCampaignPlacementBidding
 */
export interface SponsoredProductsDraftCampaignPlacementBidding {
  /**
   *
   * @type {number}
   * @memberof SponsoredProductsDraftCampaignPlacementBidding
   */
  percentage?: number;
  /**
   *
   * @type {SponsoredProductsPlacement}
   * @memberof SponsoredProductsDraftCampaignPlacementBidding
   */
  placement?: SponsoredProductsPlacement;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftCampaignPromotionError
 */
export interface SponsoredProductsDraftCampaignPromotionError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsDraftCampaignPromotionError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsDraftCampaignPromotionErrorSelector}
   * @memberof SponsoredProductsDraftCampaignPromotionError
   */
  errorValue: SponsoredProductsDraftCampaignPromotionErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftCampaignPromotionErrorSelector
 */
export interface SponsoredProductsDraftCampaignPromotionErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityStateError}
   * @memberof SponsoredProductsDraftCampaignPromotionErrorSelector
   */
  entityStateError?: SponsoredProductsEntityStateError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsDraftCampaignPromotionErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsDateError}
   * @memberof SponsoredProductsDraftCampaignPromotionErrorSelector
   */
  dateError?: SponsoredProductsDateError;
  /**
   *
   * @type {SponsoredProductsBiddingError}
   * @memberof SponsoredProductsDraftCampaignPromotionErrorSelector
   */
  biddingError?: SponsoredProductsBiddingError;
  /**
   *
   * @type {SponsoredProductsDuplicateValueError}
   * @memberof SponsoredProductsDraftCampaignPromotionErrorSelector
   */
  duplicateValueError?: SponsoredProductsDuplicateValueError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsDraftCampaignPromotionErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsDraftCampaignPromotionErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsDraftCampaignPromotionErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsDraftCampaignPromotionErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsDraftCampaignPromotionErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsBudgetError}
   * @memberof SponsoredProductsDraftCampaignPromotionErrorSelector
   */
  budgetError?: SponsoredProductsBudgetError;
  /**
   *
   * @type {SponsoredProductsBillingError}
   * @memberof SponsoredProductsDraftCampaignPromotionErrorSelector
   */
  billingError?: SponsoredProductsBillingError;
  /**
   *
   * @type {SponsoredProductsEntityQuotaError}
   * @memberof SponsoredProductsDraftCampaignPromotionErrorSelector
   */
  entityQuotaError?: SponsoredProductsEntityQuotaError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsDraftCampaignPromotionErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
}
/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsDraftCampaignPromotionState = {
  InProgress: 'IN_PROGRESS',
  Failed: 'FAILED',
  Succeeded: 'SUCCEEDED',
} as const;

export type SponsoredProductsDraftCampaignPromotionState =
  (typeof SponsoredProductsDraftCampaignPromotionState)[keyof typeof SponsoredProductsDraftCampaignPromotionState];

/**
 *
 * @export
 * @interface SponsoredProductsDraftCampaignPromotionStatus
 */
export interface SponsoredProductsDraftCampaignPromotionStatus {
  /**
   *
   * @type {SponsoredProductsDraftCampaignPromotionState}
   * @memberof SponsoredProductsDraftCampaignPromotionStatus
   */
  promotionState: SponsoredProductsDraftCampaignPromotionState;
  /**
   * entity object identifier
   * @type {string}
   * @memberof SponsoredProductsDraftCampaignPromotionStatus
   */
  campaignId: string;
  /**
   * entity object identifier
   * @type {string}
   * @memberof SponsoredProductsDraftCampaignPromotionStatus
   */
  destinationId: string;
  /**
   *
   * @type {Array<SponsoredProductsDraftCampaignPromotionError>}
   * @memberof SponsoredProductsDraftCampaignPromotionStatus
   */
  errors?: Array<SponsoredProductsDraftCampaignPromotionError>;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftCampaignShopperCohortBidding
 */
export interface SponsoredProductsDraftCampaignShopperCohortBidding {
  /**
   *
   * @type {SponsoredProductsShopperCohortType}
   * @memberof SponsoredProductsDraftCampaignShopperCohortBidding
   */
  shopperCohortType: SponsoredProductsShopperCohortType;
  /**
   *
   * @type {number}
   * @memberof SponsoredProductsDraftCampaignShopperCohortBidding
   */
  percentage?: number;
  /**
   * Required when \"AUDIENCE_SEGMENT\" is used for shopperCohortType.
   * @type {Array<SponsoredProductsAudienceSegment>}
   * @memberof SponsoredProductsDraftCampaignShopperCohortBidding
   */
  audienceSegments?: Array<SponsoredProductsAudienceSegment>;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftKeyword
 */
export interface SponsoredProductsDraftKeyword {
  /**
   * The identifier of the draft keyword.
   * @type {string}
   * @memberof SponsoredProductsDraftKeyword
   */
  keywordId: string;
  /**
   * The locale preference of the advertiser. For example, if the advertiser’s preferred language is Simplified Chinese, set the locale to zh_CN. Supported locales include: Simplified Chinese (locale: zh_CN) for US, UK and CA. English (locale: en_GB) for DE, FR, IT and ES.
   * @type {string}
   * @memberof SponsoredProductsDraftKeyword
   */
  nativeLanguageLocale?: string;
  /**
   * The identifier of the campaign to which the draft keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsDraftKeyword
   */
  campaignId: string;
  /**
   *
   * @type {SponsoredProductsMatchType}
   * @memberof SponsoredProductsDraftKeyword
   */
  matchType: SponsoredProductsMatchType;
  /**
   * The unlocalized draft keyword text in the preferred locale of the advertiser.
   * @type {string}
   * @memberof SponsoredProductsDraftKeyword
   */
  nativeLanguageDraftKeyword?: string;
  /**
   * Bid associated with this draft keyword. Applicable to biddable match types only. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
   * @type {number}
   * @memberof SponsoredProductsDraftKeyword
   */
  bid?: number | null;
  /**
   * The identifier of the ad group to which this draft keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsDraftKeyword
   */
  adGroupId: string;
  /**
   * The draft keyword text.
   * @type {string}
   * @memberof SponsoredProductsDraftKeyword
   */
  keywordText: string;
  /**
   *
   * @type {SponsoredProductsDraftKeywordExtendedData}
   * @memberof SponsoredProductsDraftKeyword
   */
  extendedData?: SponsoredProductsDraftKeywordExtendedData;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftKeywordAccessError
 */
export interface SponsoredProductsDraftKeywordAccessError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsDraftKeywordAccessError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsDraftKeywordAccessErrorSelector}
   * @memberof SponsoredProductsDraftKeywordAccessError
   */
  errorValue: SponsoredProductsDraftKeywordAccessErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftKeywordAccessErrorSelector
 */
export interface SponsoredProductsDraftKeywordAccessErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsDraftKeywordAccessErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsDraftKeywordAccessErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsLocaleError}
   * @memberof SponsoredProductsDraftKeywordAccessErrorSelector
   */
  localeError?: SponsoredProductsLocaleError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsDraftKeywordAccessErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsDraftKeywordAccessErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsDraftKeywordAccessErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsDraftKeywordAccessErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsDraftKeywordAccessErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in accessing campaign management entities
 * @export
 * @interface SponsoredProductsDraftKeywordAccessExceptionResponseContent
 */
export interface SponsoredProductsDraftKeywordAccessExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsDraftKeywordAccessExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsDraftKeywordAccessExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsDraftKeywordAccessError>}
   * @memberof SponsoredProductsDraftKeywordAccessExceptionResponseContent
   */
  errors?: Array<SponsoredProductsDraftKeywordAccessError>;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftKeywordExtendedData
 */
export interface SponsoredProductsDraftKeywordExtendedData {
  /**
   * Last updated date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsDraftKeywordExtendedData
   */
  lastUpdateDateTime?: string;
  /**
   *
   * @type {SponsoredProductsKeywordServingStatus}
   * @memberof SponsoredProductsDraftKeywordExtendedData
   */
  servingStatus?: SponsoredProductsKeywordServingStatus;
  /**
   * Creation date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsDraftKeywordExtendedData
   */
  creationDateTime?: string;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftKeywordFailureResponseItem
 */
export interface SponsoredProductsDraftKeywordFailureResponseItem {
  /**
   * the index of the draft keyword in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsDraftKeywordFailureResponseItem
   */
  index: number;
  /**
   * A list of validation errors
   * @type {Array<SponsoredProductsDraftKeywordMutationError>}
   * @memberof SponsoredProductsDraftKeywordFailureResponseItem
   */
  errors?: Array<SponsoredProductsDraftKeywordMutationError>;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftKeywordMutationError
 */
export interface SponsoredProductsDraftKeywordMutationError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsDraftKeywordMutationError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsDraftKeywordMutationErrorSelector}
   * @memberof SponsoredProductsDraftKeywordMutationError
   */
  errorValue: SponsoredProductsDraftKeywordMutationErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftKeywordMutationErrorSelector
 */
export interface SponsoredProductsDraftKeywordMutationErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityStateError}
   * @memberof SponsoredProductsDraftKeywordMutationErrorSelector
   */
  entityStateError?: SponsoredProductsEntityStateError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsDraftKeywordMutationErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsBiddingError}
   * @memberof SponsoredProductsDraftKeywordMutationErrorSelector
   */
  biddingError?: SponsoredProductsBiddingError;
  /**
   *
   * @type {SponsoredProductsDuplicateValueError}
   * @memberof SponsoredProductsDraftKeywordMutationErrorSelector
   */
  duplicateValueError?: SponsoredProductsDuplicateValueError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsDraftKeywordMutationErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsDraftKeywordMutationErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsDraftKeywordMutationErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsDraftKeywordMutationErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsLocaleError}
   * @memberof SponsoredProductsDraftKeywordMutationErrorSelector
   */
  localeError?: SponsoredProductsLocaleError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsDraftKeywordMutationErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsBillingError}
   * @memberof SponsoredProductsDraftKeywordMutationErrorSelector
   */
  billingError?: SponsoredProductsBillingError;
  /**
   *
   * @type {SponsoredProductsEntityQuotaError}
   * @memberof SponsoredProductsDraftKeywordMutationErrorSelector
   */
  entityQuotaError?: SponsoredProductsEntityQuotaError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsDraftKeywordMutationErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
}
/**
 * Exception resulting in mutating campaign management entities
 * @export
 * @interface SponsoredProductsDraftKeywordMutationExceptionResponseContent
 */
export interface SponsoredProductsDraftKeywordMutationExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsDraftKeywordMutationExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsDraftKeywordMutationExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsDraftKeywordMutationError>}
   * @memberof SponsoredProductsDraftKeywordMutationExceptionResponseContent
   */
  errors?: Array<SponsoredProductsDraftKeywordMutationError>;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftKeywordSuccessResponseItem
 */
export interface SponsoredProductsDraftKeywordSuccessResponseItem {
  /**
   * the draft keyword ID
   * @type {string}
   * @memberof SponsoredProductsDraftKeywordSuccessResponseItem
   */
  keywordId?: string;
  /**
   * the index of the draft keyword in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsDraftKeywordSuccessResponseItem
   */
  index: number;
  /**
   *
   * @type {SponsoredProductsDraftKeyword}
   * @memberof SponsoredProductsDraftKeywordSuccessResponseItem
   */
  keyword?: SponsoredProductsDraftKeyword;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftNegativeKeyword
 */
export interface SponsoredProductsDraftNegativeKeyword {
  /**
   * The identifier of the keyword.
   * @type {string}
   * @memberof SponsoredProductsDraftNegativeKeyword
   */
  keywordId: string;
  /**
   * The unlocalized keyword text in the preferred locale of the advertiser
   * @type {string}
   * @memberof SponsoredProductsDraftNegativeKeyword
   */
  nativeLanguageKeyword?: string;
  /**
   * The locale preference of the advertiser.
   * @type {string}
   * @memberof SponsoredProductsDraftNegativeKeyword
   */
  nativeLanguageLocale?: string;
  /**
   * The identifier of the campaign to which the keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsDraftNegativeKeyword
   */
  campaignId: string;
  /**
   *
   * @type {SponsoredProductsNegativeMatchType}
   * @memberof SponsoredProductsDraftNegativeKeyword
   */
  matchType: SponsoredProductsNegativeMatchType;
  /**
   * The identifier of the ad group to which this keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsDraftNegativeKeyword
   */
  adGroupId: string;
  /**
   * The keyword text.
   * @type {string}
   * @memberof SponsoredProductsDraftNegativeKeyword
   */
  keywordText: string;
  /**
   *
   * @type {SponsoredProductsDraftNegativeKeywordExtendedData}
   * @memberof SponsoredProductsDraftNegativeKeyword
   */
  extendedData?: SponsoredProductsDraftNegativeKeywordExtendedData;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftNegativeKeywordAccessError
 */
export interface SponsoredProductsDraftNegativeKeywordAccessError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsDraftNegativeKeywordAccessError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsDraftNegativeKeywordAccessErrorSelector}
   * @memberof SponsoredProductsDraftNegativeKeywordAccessError
   */
  errorValue: SponsoredProductsDraftNegativeKeywordAccessErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftNegativeKeywordAccessErrorSelector
 */
export interface SponsoredProductsDraftNegativeKeywordAccessErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsDraftNegativeKeywordAccessErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsDraftNegativeKeywordAccessErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsDraftNegativeKeywordAccessErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsDraftNegativeKeywordAccessErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsDraftNegativeKeywordAccessErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsDraftNegativeKeywordAccessErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsDraftNegativeKeywordAccessErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in accessing campaign management entities
 * @export
 * @interface SponsoredProductsDraftNegativeKeywordAccessExceptionResponseContent
 */
export interface SponsoredProductsDraftNegativeKeywordAccessExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsDraftNegativeKeywordAccessExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsDraftNegativeKeywordAccessExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsDraftNegativeKeywordAccessError>}
   * @memberof SponsoredProductsDraftNegativeKeywordAccessExceptionResponseContent
   */
  errors?: Array<SponsoredProductsDraftNegativeKeywordAccessError>;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftNegativeKeywordExtendedData
 */
export interface SponsoredProductsDraftNegativeKeywordExtendedData {
  /**
   * Last updated date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsDraftNegativeKeywordExtendedData
   */
  lastUpdateDateTime?: string;
  /**
   *
   * @type {SponsoredProductsKeywordServingStatus}
   * @memberof SponsoredProductsDraftNegativeKeywordExtendedData
   */
  servingStatus?: SponsoredProductsKeywordServingStatus;
  /**
   * Creation date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsDraftNegativeKeywordExtendedData
   */
  creationDateTime?: string;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftNegativeKeywordFailureResponseItem
 */
export interface SponsoredProductsDraftNegativeKeywordFailureResponseItem {
  /**
   * the index of the draftNegativeKeyword in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsDraftNegativeKeywordFailureResponseItem
   */
  index: number;
  /**
   * A list of validation errors
   * @type {Array<SponsoredProductsDraftNegativeKeywordMutationError>}
   * @memberof SponsoredProductsDraftNegativeKeywordFailureResponseItem
   */
  errors?: Array<SponsoredProductsDraftNegativeKeywordMutationError>;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftNegativeKeywordMutationError
 */
export interface SponsoredProductsDraftNegativeKeywordMutationError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsDraftNegativeKeywordMutationError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsDraftNegativeKeywordMutationErrorSelector}
   * @memberof SponsoredProductsDraftNegativeKeywordMutationError
   */
  errorValue: SponsoredProductsDraftNegativeKeywordMutationErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftNegativeKeywordMutationErrorSelector
 */
export interface SponsoredProductsDraftNegativeKeywordMutationErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsDraftNegativeKeywordMutationErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsEntityStateError}
   * @memberof SponsoredProductsDraftNegativeKeywordMutationErrorSelector
   */
  entityStateError?: SponsoredProductsEntityStateError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsDraftNegativeKeywordMutationErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsDraftNegativeKeywordMutationErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsDuplicateValueError}
   * @memberof SponsoredProductsDraftNegativeKeywordMutationErrorSelector
   */
  duplicateValueError?: SponsoredProductsDuplicateValueError;
  /**
   *
   * @type {SponsoredProductsBillingError}
   * @memberof SponsoredProductsDraftNegativeKeywordMutationErrorSelector
   */
  billingError?: SponsoredProductsBillingError;
  /**
   *
   * @type {SponsoredProductsEntityQuotaError}
   * @memberof SponsoredProductsDraftNegativeKeywordMutationErrorSelector
   */
  entityQuotaError?: SponsoredProductsEntityQuotaError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsDraftNegativeKeywordMutationErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsDraftNegativeKeywordMutationErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsDraftNegativeKeywordMutationErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsDraftNegativeKeywordMutationErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in mutating campaign management entities
 * @export
 * @interface SponsoredProductsDraftNegativeKeywordMutationExceptionResponseContent
 */
export interface SponsoredProductsDraftNegativeKeywordMutationExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsDraftNegativeKeywordMutationExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsDraftNegativeKeywordMutationExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsDraftNegativeKeywordMutationError>}
   * @memberof SponsoredProductsDraftNegativeKeywordMutationExceptionResponseContent
   */
  errors?: Array<SponsoredProductsDraftNegativeKeywordMutationError>;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftNegativeKeywordSuccessResponseItem
 */
export interface SponsoredProductsDraftNegativeKeywordSuccessResponseItem {
  /**
   * the index of the negativeKeyword in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsDraftNegativeKeywordSuccessResponseItem
   */
  index: number;
  /**
   *
   * @type {SponsoredProductsDraftNegativeKeyword}
   * @memberof SponsoredProductsDraftNegativeKeywordSuccessResponseItem
   */
  negativeKeyword?: SponsoredProductsDraftNegativeKeyword;
  /**
   * the negativeKeyword ID
   * @type {string}
   * @memberof SponsoredProductsDraftNegativeKeywordSuccessResponseItem
   */
  negativeKeywordId?: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftNegativeTargetAccessError
 */
export interface SponsoredProductsDraftNegativeTargetAccessError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsDraftNegativeTargetAccessError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsDraftNegativeTargetAccessErrorSelector}
   * @memberof SponsoredProductsDraftNegativeTargetAccessError
   */
  errorValue: SponsoredProductsDraftNegativeTargetAccessErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftNegativeTargetAccessErrorSelector
 */
export interface SponsoredProductsDraftNegativeTargetAccessErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsDraftNegativeTargetAccessErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsDraftNegativeTargetAccessErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsDraftNegativeTargetAccessErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsDraftNegativeTargetAccessErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsDraftNegativeTargetAccessErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsDraftNegativeTargetAccessErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsDraftNegativeTargetAccessErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in accessing campaign management entities
 * @export
 * @interface SponsoredProductsDraftNegativeTargetAccessExceptionResponseContent
 */
export interface SponsoredProductsDraftNegativeTargetAccessExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsDraftNegativeTargetAccessExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsDraftNegativeTargetAccessExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsDraftNegativeTargetAccessError>}
   * @memberof SponsoredProductsDraftNegativeTargetAccessExceptionResponseContent
   */
  errors?: Array<SponsoredProductsDraftNegativeTargetAccessError>;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftNegativeTargetMutationError
 */
export interface SponsoredProductsDraftNegativeTargetMutationError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsDraftNegativeTargetMutationError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsDraftNegativeTargetMutationErrorSelector}
   * @memberof SponsoredProductsDraftNegativeTargetMutationError
   */
  errorValue: SponsoredProductsDraftNegativeTargetMutationErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftNegativeTargetMutationErrorSelector
 */
export interface SponsoredProductsDraftNegativeTargetMutationErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsDraftNegativeTargetMutationErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsEntityStateError}
   * @memberof SponsoredProductsDraftNegativeTargetMutationErrorSelector
   */
  entityStateError?: SponsoredProductsEntityStateError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsDraftNegativeTargetMutationErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsDraftNegativeTargetMutationErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsDuplicateValueError}
   * @memberof SponsoredProductsDraftNegativeTargetMutationErrorSelector
   */
  duplicateValueError?: SponsoredProductsDuplicateValueError;
  /**
   *
   * @type {SponsoredProductsBillingError}
   * @memberof SponsoredProductsDraftNegativeTargetMutationErrorSelector
   */
  billingError?: SponsoredProductsBillingError;
  /**
   *
   * @type {SponsoredProductsEntityQuotaError}
   * @memberof SponsoredProductsDraftNegativeTargetMutationErrorSelector
   */
  entityQuotaError?: SponsoredProductsEntityQuotaError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsDraftNegativeTargetMutationErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsDraftNegativeTargetMutationErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsDraftNegativeTargetMutationErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsDraftNegativeTargetMutationErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in mutating campaign management entities
 * @export
 * @interface SponsoredProductsDraftNegativeTargetMutationExceptionResponseContent
 */
export interface SponsoredProductsDraftNegativeTargetMutationExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsDraftNegativeTargetMutationExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsDraftNegativeTargetMutationExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsDraftNegativeTargetMutationError>}
   * @memberof SponsoredProductsDraftNegativeTargetMutationExceptionResponseContent
   */
  errors?: Array<SponsoredProductsDraftNegativeTargetMutationError>;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftNegativeTargetingClause
 */
export interface SponsoredProductsDraftNegativeTargetingClause {
  /**
   * The DraftNegativeTargeting expression.
   * @type {Array<SponsoredProductsNegativeTargetingExpressionPredicate>}
   * @memberof SponsoredProductsDraftNegativeTargetingClause
   */
  expression: Array<SponsoredProductsNegativeTargetingExpressionPredicate>;
  /**
   * The target identifier
   * @type {string}
   * @memberof SponsoredProductsDraftNegativeTargetingClause
   */
  targetId: string;
  /**
   * The resolved DraftNegativeTargeting expression.
   * @type {Array<SponsoredProductsNegativeTargetingExpressionPredicate>}
   * @memberof SponsoredProductsDraftNegativeTargetingClause
   */
  resolvedExpression: Array<SponsoredProductsNegativeTargetingExpressionPredicate>;
  /**
   * The identifier of the campaign to which this target is associated.
   * @type {string}
   * @memberof SponsoredProductsDraftNegativeTargetingClause
   */
  campaignId: string;
  /**
   * The identifier of the ad group to which this target is associated.
   * @type {string}
   * @memberof SponsoredProductsDraftNegativeTargetingClause
   */
  adGroupId: string;
  /**
   *
   * @type {SponsoredProductsDraftNegativeTargetingClauseExtendedData}
   * @memberof SponsoredProductsDraftNegativeTargetingClause
   */
  extendedData?: SponsoredProductsDraftNegativeTargetingClauseExtendedData;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftNegativeTargetingClauseExtendedData
 */
export interface SponsoredProductsDraftNegativeTargetingClauseExtendedData {
  /**
   * Last updated date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsDraftNegativeTargetingClauseExtendedData
   */
  lastUpdateDateTime?: string;
  /**
   *
   * @type {SponsoredProductsKeywordServingStatus}
   * @memberof SponsoredProductsDraftNegativeTargetingClauseExtendedData
   */
  servingStatus?: SponsoredProductsKeywordServingStatus;
  /**
   * Creation date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsDraftNegativeTargetingClauseExtendedData
   */
  creationDateTime?: string;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftNegativeTargetingClauseFailureResponseItem
 */
export interface SponsoredProductsDraftNegativeTargetingClauseFailureResponseItem {
  /**
   * the index of the DraftNegativeTargetingClause in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsDraftNegativeTargetingClauseFailureResponseItem
   */
  index: number;
  /**
   * A list of validation errors
   * @type {Array<SponsoredProductsDraftNegativeTargetMutationError>}
   * @memberof SponsoredProductsDraftNegativeTargetingClauseFailureResponseItem
   */
  errors?: Array<SponsoredProductsDraftNegativeTargetMutationError>;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftNegativeTargetingClauseSuccessResponseItem
 */
export interface SponsoredProductsDraftNegativeTargetingClauseSuccessResponseItem {
  /**
   * the DraftNegativeTargetingClause ID
   * @type {string}
   * @memberof SponsoredProductsDraftNegativeTargetingClauseSuccessResponseItem
   */
  targetId?: string;
  /**
   * the index of the DraftNegativeTargetingClause in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsDraftNegativeTargetingClauseSuccessResponseItem
   */
  index: number;
  /**
   *
   * @type {SponsoredProductsDraftNegativeTargetingClause}
   * @memberof SponsoredProductsDraftNegativeTargetingClauseSuccessResponseItem
   */
  negativeTargetingClause?: SponsoredProductsDraftNegativeTargetingClause;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftProductAd
 */
export interface SponsoredProductsDraftProductAd {
  /**
   *
   * @type {SponsoredProductsGlobalStoreSetting}
   * @memberof SponsoredProductsDraftProductAd
   */
  globalStoreSetting?: SponsoredProductsGlobalStoreSetting;
  /**
   * The product ad identifier.
   * @type {string}
   * @memberof SponsoredProductsDraftProductAd
   */
  adId: string;
  /**
   * The campaign identifier.
   * @type {string}
   * @memberof SponsoredProductsDraftProductAd
   */
  campaignId: string;
  /**
   * The custom text that is associated with this ad. Defined for custom text ads only.
   * @type {string}
   * @memberof SponsoredProductsDraftProductAd
   */
  customText?: string;
  /**
   * The ASIN associated with the product. Defined for vendors only.
   * @type {string}
   * @memberof SponsoredProductsDraftProductAd
   */
  asin?: string;
  /**
   * The SKU associated with the product. Defined for seller accounts only.
   * @type {string}
   * @memberof SponsoredProductsDraftProductAd
   */
  sku?: string;
  /**
   * The ad group identifier.
   * @type {string}
   * @memberof SponsoredProductsDraftProductAd
   */
  adGroupId: string;
  /**
   *
   * @type {SponsoredProductsDraftProductAdExtendedData}
   * @memberof SponsoredProductsDraftProductAd
   */
  extendedData?: SponsoredProductsDraftProductAdExtendedData;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftProductAdAccessError
 */
export interface SponsoredProductsDraftProductAdAccessError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsDraftProductAdAccessError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsDraftProductAdAccessErrorSelector}
   * @memberof SponsoredProductsDraftProductAdAccessError
   */
  errorValue: SponsoredProductsDraftProductAdAccessErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftProductAdAccessErrorSelector
 */
export interface SponsoredProductsDraftProductAdAccessErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsDraftProductAdAccessErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsDraftProductAdAccessErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsDraftProductAdAccessErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsDraftProductAdAccessErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsDraftProductAdAccessErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsDraftProductAdAccessErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsDraftProductAdAccessErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in accessing campaign management entities
 * @export
 * @interface SponsoredProductsDraftProductAdAccessExceptionResponseContent
 */
export interface SponsoredProductsDraftProductAdAccessExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsDraftProductAdAccessExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsDraftProductAdAccessExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsDraftProductAdAccessError>}
   * @memberof SponsoredProductsDraftProductAdAccessExceptionResponseContent
   */
  errors?: Array<SponsoredProductsDraftProductAdAccessError>;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftProductAdExtendedData
 */
export interface SponsoredProductsDraftProductAdExtendedData {
  /**
   * Last updated date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsDraftProductAdExtendedData
   */
  lastUpdateDateTime?: string;
  /**
   *
   * @type {SponsoredProductsAdServingStatus}
   * @memberof SponsoredProductsDraftProductAdExtendedData
   */
  servingStatus?: SponsoredProductsAdServingStatus;
  /**
   * Creation date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsDraftProductAdExtendedData
   */
  creationDateTime?: string;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftProductAdFailureResponseItem
 */
export interface SponsoredProductsDraftProductAdFailureResponseItem {
  /**
   * the index of the campaign in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsDraftProductAdFailureResponseItem
   */
  index: number;
  /**
   * A list of validation errors
   * @type {Array<SponsoredProductsDraftProductAdMutationError>}
   * @memberof SponsoredProductsDraftProductAdFailureResponseItem
   */
  errors?: Array<SponsoredProductsDraftProductAdMutationError>;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftProductAdMutationError
 */
export interface SponsoredProductsDraftProductAdMutationError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsDraftProductAdMutationError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsDraftProductAdMutationErrorSelector}
   * @memberof SponsoredProductsDraftProductAdMutationError
   */
  errorValue: SponsoredProductsDraftProductAdMutationErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftProductAdMutationErrorSelector
 */
export interface SponsoredProductsDraftProductAdMutationErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityStateError}
   * @memberof SponsoredProductsDraftProductAdMutationErrorSelector
   */
  entityStateError?: SponsoredProductsEntityStateError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsDraftProductAdMutationErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsAsinOwnershipError}
   * @memberof SponsoredProductsDraftProductAdMutationErrorSelector
   */
  asinOwnershipError?: SponsoredProductsAsinOwnershipError;
  /**
   *
   * @type {SponsoredProductsDuplicateValueError}
   * @memberof SponsoredProductsDraftProductAdMutationErrorSelector
   */
  duplicateValueError?: SponsoredProductsDuplicateValueError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsDraftProductAdMutationErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsDraftProductAdMutationErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsDraftProductAdMutationErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsDraftProductAdMutationErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsDraftProductAdMutationErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsAdEligibilityError}
   * @memberof SponsoredProductsDraftProductAdMutationErrorSelector
   */
  adEligibilityError?: SponsoredProductsAdEligibilityError;
  /**
   *
   * @type {SponsoredProductsBillingError}
   * @memberof SponsoredProductsDraftProductAdMutationErrorSelector
   */
  billingError?: SponsoredProductsBillingError;
  /**
   *
   * @type {SponsoredProductsEntityQuotaError}
   * @memberof SponsoredProductsDraftProductAdMutationErrorSelector
   */
  entityQuotaError?: SponsoredProductsEntityQuotaError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsDraftProductAdMutationErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
}
/**
 * Exception resulting in mutating campaign management entities
 * @export
 * @interface SponsoredProductsDraftProductAdMutationExceptionResponseContent
 */
export interface SponsoredProductsDraftProductAdMutationExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsDraftProductAdMutationExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsDraftProductAdMutationExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsDraftProductAdMutationError>}
   * @memberof SponsoredProductsDraftProductAdMutationExceptionResponseContent
   */
  errors?: Array<SponsoredProductsDraftProductAdMutationError>;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftProductAdSuccessResponseItem
 */
export interface SponsoredProductsDraftProductAdSuccessResponseItem {
  /**
   * the DraftProductAd ID
   * @type {string}
   * @memberof SponsoredProductsDraftProductAdSuccessResponseItem
   */
  adId?: string;
  /**
   * The index in the original list from the request.
   * @type {number}
   * @memberof SponsoredProductsDraftProductAdSuccessResponseItem
   */
  index: number;
  /**
   *
   * @type {SponsoredProductsDraftProductAd}
   * @memberof SponsoredProductsDraftProductAdSuccessResponseItem
   */
  productAd?: SponsoredProductsDraftProductAd;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftTargetMutationError
 */
export interface SponsoredProductsDraftTargetMutationError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsDraftTargetMutationError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsDraftTargetMutationErrorSelector}
   * @memberof SponsoredProductsDraftTargetMutationError
   */
  errorValue: SponsoredProductsDraftTargetMutationErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftTargetMutationErrorSelector
 */
export interface SponsoredProductsDraftTargetMutationErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsDraftTargetMutationErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsEntityStateError}
   * @memberof SponsoredProductsDraftTargetMutationErrorSelector
   */
  entityStateError?: SponsoredProductsEntityStateError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsDraftTargetMutationErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsBiddingError}
   * @memberof SponsoredProductsDraftTargetMutationErrorSelector
   */
  biddingError?: SponsoredProductsBiddingError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsDraftTargetMutationErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsDuplicateValueError}
   * @memberof SponsoredProductsDraftTargetMutationErrorSelector
   */
  duplicateValueError?: SponsoredProductsDuplicateValueError;
  /**
   *
   * @type {SponsoredProductsBillingError}
   * @memberof SponsoredProductsDraftTargetMutationErrorSelector
   */
  billingError?: SponsoredProductsBillingError;
  /**
   *
   * @type {SponsoredProductsEntityQuotaError}
   * @memberof SponsoredProductsDraftTargetMutationErrorSelector
   */
  entityQuotaError?: SponsoredProductsEntityQuotaError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsDraftTargetMutationErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsDraftTargetMutationErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsDraftTargetMutationErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsDraftTargetMutationErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftTargetingClause
 */
export interface SponsoredProductsDraftTargetingClause {
  /**
   * The targeting expression.
   * @type {Array<SponsoredProductsTargetingExpressionPredicate>}
   * @memberof SponsoredProductsDraftTargetingClause
   */
  expression: Array<SponsoredProductsTargetingExpressionPredicate>;
  /**
   * The target identifier
   * @type {string}
   * @memberof SponsoredProductsDraftTargetingClause
   */
  targetId: string;
  /**
   * The resolved targeting expression.
   * @type {Array<SponsoredProductsTargetingExpressionPredicate>}
   * @memberof SponsoredProductsDraftTargetingClause
   */
  resolvedExpression: Array<SponsoredProductsTargetingExpressionPredicate>;
  /**
   * The identifier of the campaign to which this target is associated.
   * @type {string}
   * @memberof SponsoredProductsDraftTargetingClause
   */
  campaignId: string;
  /**
   *
   * @type {SponsoredProductsExpressionType}
   * @memberof SponsoredProductsDraftTargetingClause
   */
  expressionType: SponsoredProductsExpressionType;
  /**
   *
   * @type {SponsoredProductsEntityState}
   * @memberof SponsoredProductsDraftTargetingClause
   */
  state?: SponsoredProductsEntityState;
  /**
   * The bid for ads sourced using the target. Targets that do not have bid values in listTargetingClauses will inherit the defaultBid from the adGroup level. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
   * @type {number}
   * @memberof SponsoredProductsDraftTargetingClause
   */
  bid?: number | null;
  /**
   * The identifier of the ad group to which this target is associated.
   * @type {string}
   * @memberof SponsoredProductsDraftTargetingClause
   */
  adGroupId: string;
  /**
   *
   * @type {SponsoredProductsDraftTargetingClauseExtendedData}
   * @memberof SponsoredProductsDraftTargetingClause
   */
  extendedData?: SponsoredProductsDraftTargetingClauseExtendedData;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftTargetingClauseExtendedData
 */
export interface SponsoredProductsDraftTargetingClauseExtendedData {
  /**
   * Last updated date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsDraftTargetingClauseExtendedData
   */
  lastUpdateDateTime?: string;
  /**
   *
   * @type {SponsoredProductsKeywordServingStatus}
   * @memberof SponsoredProductsDraftTargetingClauseExtendedData
   */
  servingStatus?: SponsoredProductsKeywordServingStatus;
  /**
   * Creation date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsDraftTargetingClauseExtendedData
   */
  creationDateTime?: string;
}

/**
 *
 * @export
 * @interface SponsoredProductsDraftTargetingClauseFailureResponseItem
 */
export interface SponsoredProductsDraftTargetingClauseFailureResponseItem {
  /**
   * the index of the draftTargetingClause in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsDraftTargetingClauseFailureResponseItem
   */
  index: number;
  /**
   * A list of validation errors
   * @type {Array<SponsoredProductsDraftTargetMutationError>}
   * @memberof SponsoredProductsDraftTargetingClauseFailureResponseItem
   */
  errors?: Array<SponsoredProductsDraftTargetMutationError>;
}
/**
 *
 * @export
 * @interface SponsoredProductsDraftTargetingClauseSuccessResponseItem
 */
export interface SponsoredProductsDraftTargetingClauseSuccessResponseItem {
  /**
   *
   * @type {SponsoredProductsDraftTargetingClause}
   * @memberof SponsoredProductsDraftTargetingClauseSuccessResponseItem
   */
  targetingClause?: SponsoredProductsDraftTargetingClause;
  /**
   * the draftTargetingClause ID
   * @type {string}
   * @memberof SponsoredProductsDraftTargetingClauseSuccessResponseItem
   */
  targetId?: string;
  /**
   * the index of the draftTargetingClause in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsDraftTargetingClauseSuccessResponseItem
   */
  index: number;
}
/**
 *
 * @export
 * @interface SponsoredProductsDuplicateValueError
 */
export interface SponsoredProductsDuplicateValueError {
  /**
   *
   * @type {SponsoredProductsDuplicateValueErrorReason}
   * @memberof SponsoredProductsDuplicateValueError
   */
  reason: SponsoredProductsDuplicateValueErrorReason;
  /**
   *
   * @type {SponsoredProductsMarketplace}
   * @memberof SponsoredProductsDuplicateValueError
   */
  marketplace?: SponsoredProductsMarketplace;
  /**
   *
   * @type {SponsoredProductsErrorCause}
   * @memberof SponsoredProductsDuplicateValueError
   */
  cause?: SponsoredProductsErrorCause;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsDuplicateValueError
   */
  message: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsDuplicateValueErrorReason = {
  DuplicateValue: 'DUPLICATE_VALUE',
  NameNotUnique: 'NAME_NOT_UNIQUE',
  MarketplaceAttributesRepeated: 'MARKETPLACE_ATTRIBUTES_REPEATED',
} as const;

export type SponsoredProductsDuplicateValueErrorReason =
  (typeof SponsoredProductsDuplicateValueErrorReason)[keyof typeof SponsoredProductsDuplicateValueErrorReason];

/**
 *
 * @export
 * @interface SponsoredProductsDynamicBidding
 */
export interface SponsoredProductsDynamicBidding {
  /**
   * Specifies Shopper Cohorts based bid adjustment controls. `shopperCohortBidding` is optional for both Create and Update requests. You can enable this control to adjust your bid based on the shopper cohorts. The percentage value set is the percentage of the original bid including any other bid adjustments such as `placementBidding`. For example, a `placementBidding` with 50% adjustment on a $1.00 bid would increase the bid to $1.50, and a `shopperCohortBidding` with 100% adjustment would further increase the bid to $3.00.
   * @type {Array<SponsoredProductsShopperCohortBidding>}
   * @memberof SponsoredProductsDynamicBidding
   */
  shopperCohortBidding?: Array<SponsoredProductsShopperCohortBidding>;
  /**
   *
   * @type {Array<SponsoredProductsPlacementBidding>}
   * @memberof SponsoredProductsDynamicBidding
   */
  placementBidding?: Array<SponsoredProductsPlacementBidding>;
  /**
   *
   * @type {SponsoredProductsBiddingStrategy}
   * @memberof SponsoredProductsDynamicBidding
   */
  strategy: SponsoredProductsBiddingStrategy;
}

/**
 *
 * @export
 * @interface SponsoredProductsEntityNotFoundError
 */
export interface SponsoredProductsEntityNotFoundError {
  /**
   *
   * @type {SponsoredProductsEntityNotFoundErrorReason}
   * @memberof SponsoredProductsEntityNotFoundError
   */
  reason: SponsoredProductsEntityNotFoundErrorReason;
  /**
   *
   * @type {SponsoredProductsEntityType}
   * @memberof SponsoredProductsEntityNotFoundError
   */
  entityType: SponsoredProductsEntityType;
  /**
   *
   * @type {SponsoredProductsErrorCause}
   * @memberof SponsoredProductsEntityNotFoundError
   */
  cause?: SponsoredProductsErrorCause;
  /**
   * The entity id in the request
   * @type {string}
   * @memberof SponsoredProductsEntityNotFoundError
   */
  entityId: string;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsEntityNotFoundError
   */
  message: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsEntityNotFoundErrorReason = {
  EntityNotFound: 'ENTITY_NOT_FOUND',
} as const;

export type SponsoredProductsEntityNotFoundErrorReason =
  (typeof SponsoredProductsEntityNotFoundErrorReason)[keyof typeof SponsoredProductsEntityNotFoundErrorReason];

/**
 * Errors related to exceeding quota in campaign management service
 * @export
 * @interface SponsoredProductsEntityQuotaError
 */
export interface SponsoredProductsEntityQuotaError {
  /**
   *
   * @type {SponsoredProductsQuotaErrorReason}
   * @memberof SponsoredProductsEntityQuotaError
   */
  reason: SponsoredProductsQuotaErrorReason;
  /**
   *
   * @type {SponsoredProductsQuotaScope}
   * @memberof SponsoredProductsEntityQuotaError
   */
  quotaScope?: SponsoredProductsQuotaScope;
  /**
   *
   * @type {SponsoredProductsEntityType}
   * @memberof SponsoredProductsEntityQuotaError
   */
  entityType: SponsoredProductsEntityType;
  /**
   * optional current quota
   * @type {string}
   * @memberof SponsoredProductsEntityQuotaError
   */
  quota?: string;
  /**
   *
   * @type {SponsoredProductsErrorCause}
   * @memberof SponsoredProductsEntityQuotaError
   */
  cause?: SponsoredProductsErrorCause;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsEntityQuotaError
   */
  message: string;
}

/**
 * The current resource state. | State | Description | | --- | --- | | `ENABLED` | Enabled State | | `PAUSED` | Paused State | | `PROPOSED` | Proposed State (Upcoming Feature) | | `ARCHIVED` | ARCHIVED State | | `ENABLING` | State for Draft Entity Only | | `USER_DELETED` | State for Draft Entity Only | | `OTHER` | Read Only |
 * @export
 * @enum {string}
 */

export const SponsoredProductsEntityState = {
  Enabled: 'ENABLED',
  Paused: 'PAUSED',
  Proposed: 'PROPOSED',
  Archived: 'ARCHIVED',
  Enabling: 'ENABLING',
  UserDeleted: 'USER_DELETED',
  Other: 'OTHER',
} as const;

export type SponsoredProductsEntityState = (typeof SponsoredProductsEntityState)[keyof typeof SponsoredProductsEntityState];

/**
 * entity state update errors
 * @export
 * @interface SponsoredProductsEntityStateError
 */
export interface SponsoredProductsEntityStateError {
  /**
   *
   * @type {SponsoredProductsEntityStateErrorReason}
   * @memberof SponsoredProductsEntityStateError
   */
  reason: SponsoredProductsEntityStateErrorReason;
  /**
   *
   * @type {SponsoredProductsMarketplace}
   * @memberof SponsoredProductsEntityStateError
   */
  marketplace?: SponsoredProductsMarketplace;
  /**
   *
   * @type {SponsoredProductsEntityType}
   * @memberof SponsoredProductsEntityStateError
   */
  entityType: SponsoredProductsEntityType;
  /**
   *
   * @type {SponsoredProductsErrorCause}
   * @memberof SponsoredProductsEntityStateError
   */
  cause?: SponsoredProductsErrorCause;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsEntityStateError
   */
  message: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsEntityStateErrorReason = {
  InvalidTargetState: 'INVALID_TARGET_STATE',
  ParentEntityForbidsCreation: 'PARENT_ENTITY_FORBIDS_CREATION',
  MarketplaceStateCannotBeArchived: 'MARKETPLACE_STATE_CANNOT_BE_ARCHIVED',
  AutoTargetingClauseCannotBeArchivedManually: 'AUTO_TARGETING_CLAUSE_CANNOT_BE_ARCHIVED_MANUALLY',
  ArchivedEntityCannotBeModified: 'ARCHIVED_ENTITY_CANNOT_BE_MODIFIED',
  ParentArchivedForbidsUpdates: 'PARENT_ARCHIVED_FORBIDS_UPDATES',
  ParentStatusForbidsUpdatesAndCreates: 'PARENT_STATUS_FORBIDS_UPDATES_AND_CREATES',
} as const;

export type SponsoredProductsEntityStateErrorReason =
  (typeof SponsoredProductsEntityStateErrorReason)[keyof typeof SponsoredProductsEntityStateErrorReason];

/**
 * Filter entities by state. To filter live entities, only \'ENABLED\', \'PAUSED\' and \'ARCHIVED\' can be used
 * @export
 * @interface SponsoredProductsEntityStateFilter
 */
export interface SponsoredProductsEntityStateFilter {
  /**
   *
   * @type {Array<SponsoredProductsEntityState>}
   * @memberof SponsoredProductsEntityStateFilter
   */
  include: Array<SponsoredProductsEntityState>;
}
/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsEntityType = {
  Campaign: 'CAMPAIGN',
  AdGroup: 'AD_GROUP',
  Keyword: 'KEYWORD',
  ProductAd: 'PRODUCT_AD',
  CampaignNegativeKeyword: 'CAMPAIGN_NEGATIVE_KEYWORD',
  NegativeKeyword: 'NEGATIVE_KEYWORD',
  TargetingClause: 'TARGETING_CLAUSE',
  NegativeTargetingClause: 'NEGATIVE_TARGETING_CLAUSE',
  CampaignNegativeTargetingClause: 'CAMPAIGN_NEGATIVE_TARGETING_CLAUSE',
} as const;

export type SponsoredProductsEntityType = (typeof SponsoredProductsEntityType)[keyof typeof SponsoredProductsEntityType];

/**
 *
 * @export
 * @interface SponsoredProductsError
 */
export interface SponsoredProductsError {
  /**
   *
   * @type {string}
   * @memberof SponsoredProductsError
   */
  errorMessage?: string;
  /**
   *
   * @type {string}
   * @memberof SponsoredProductsError
   */
  errorCode?: string;
}
/**
 * Structure describing error cause - location in the payload and data causing error
 * @export
 * @interface SponsoredProductsErrorCause
 */
export interface SponsoredProductsErrorCause {
  /**
   * Error location, JSON Path expression specifying element of API payload causing error
   * @type {string}
   * @memberof SponsoredProductsErrorCause
   */
  location: string;
  /**
   * optional value causing error
   * @type {string}
   * @memberof SponsoredProductsErrorCause
   */
  trigger?: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsExistingAdGroup
 */
export interface SponsoredProductsExistingAdGroup {
  /**
   * The id of the Ad Group.
   * @type {string}
   * @memberof SponsoredProductsExistingAdGroup
   */
  adGroupId: string;
}
/**
 * The request object for creating a new target promotion group with existing campaigns. Please note that the adGroupIds provided need to contain the same Ad ASINs/SKUs combination as the Auto-Targeting adGroup for the target promotion group.
 * @export
 * @interface SponsoredProductsExistingCampaignDetails
 */
export interface SponsoredProductsExistingCampaignDetails {
  /**
   * AdGroupIds of existing manual campaigns to be used as part of the Target Promotion Group for     promoting product targets.
   * @type {Array<string>}
   * @memberof SponsoredProductsExistingCampaignDetails
   */
  productCampaignAdGroupIds?: Array<string>;
  /**
   * AdGroupIds of existing manual campaigns to be used as part of the Target Promotion Group for     promoting keyword targets.
   * @type {Array<string>}
   * @memberof SponsoredProductsExistingCampaignDetails
   */
  keywordCampaignAdGroupIds?: Array<string>;
}
/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsExpressionType = {
  Auto: 'AUTO',
  Manual: 'MANUAL',
  Other: 'OTHER',
} as const;

export type SponsoredProductsExpressionType = (typeof SponsoredProductsExpressionType)[keyof typeof SponsoredProductsExpressionType];

/**
 *
 * @export
 * @interface SponsoredProductsExpressionTypeError
 */
export interface SponsoredProductsExpressionTypeError {
  /**
   *
   * @type {SponsoredProductsExpressionTypeErrorReason}
   * @memberof SponsoredProductsExpressionTypeError
   */
  reason: SponsoredProductsExpressionTypeErrorReason;
  /**
   *
   * @type {SponsoredProductsErrorCause}
   * @memberof SponsoredProductsExpressionTypeError
   */
  cause?: SponsoredProductsErrorCause;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsExpressionTypeError
   */
  message: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsExpressionTypeErrorReason = {
  UnsupportedExpressionType: 'UNSUPPORTED_EXPRESSION_TYPE',
} as const;

export type SponsoredProductsExpressionTypeErrorReason =
  (typeof SponsoredProductsExpressionTypeErrorReason)[keyof typeof SponsoredProductsExpressionTypeErrorReason];

/**
 * Filter entities by ExpressionType
 * @export
 * @interface SponsoredProductsExpressionTypeFilter
 */
export interface SponsoredProductsExpressionTypeFilter {
  /**
   *
   * @type {Array<SponsoredProductsExpressionType>}
   * @memberof SponsoredProductsExpressionTypeFilter
   */
  include: Array<SponsoredProductsExpressionType>;
}
/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsExpressionTypeWithoutOther = {
  Auto: 'AUTO',
  Manual: 'MANUAL',
} as const;

export type SponsoredProductsExpressionTypeWithoutOther =
  (typeof SponsoredProductsExpressionTypeWithoutOther)[keyof typeof SponsoredProductsExpressionTypeWithoutOther];

/**
 *
 * @export
 * @interface SponsoredProductsGetTargetPromotionGroupsRecommendationsInternalRequestContent
 */
export interface SponsoredProductsGetTargetPromotionGroupsRecommendationsInternalRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsGetTargetPromotionGroupsRecommendationsInternalRequestContent
   */
  campaignIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   *
   * @type {string}
   * @memberof SponsoredProductsGetTargetPromotionGroupsRecommendationsInternalRequestContent
   */
  clientId?: string;
  /**
   *
   * @type {string}
   * @memberof SponsoredProductsGetTargetPromotionGroupsRecommendationsInternalRequestContent
   */
  apiScope?: string;
  /**
   *
   * @type {number}
   * @memberof SponsoredProductsGetTargetPromotionGroupsRecommendationsInternalRequestContent
   */
  maxResults?: number;
  /**
   * Token for fetching different pages in the response
   * @type {string}
   * @memberof SponsoredProductsGetTargetPromotionGroupsRecommendationsInternalRequestContent
   */
  nextToken?: string;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsGetTargetPromotionGroupsRecommendationsInternalRequestContent
   */
  adIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsGetTargetPromotionGroupsRecommendationsInternalRequestContent
   */
  adGroupIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsApiGatewayContext}
   * @memberof SponsoredProductsGetTargetPromotionGroupsRecommendationsInternalRequestContent
   */
  apiGatewayContext: SponsoredProductsApiGatewayContext;
}
/**
 *
 * @export
 * @interface SponsoredProductsGetTargetPromotionGroupsRecommendationsInternalResponseContent
 */
export interface SponsoredProductsGetTargetPromotionGroupsRecommendationsInternalResponseContent {
  /**
   * Total number of records available
   * @type {number}
   * @memberof SponsoredProductsGetTargetPromotionGroupsRecommendationsInternalResponseContent
   */
  totalResults: number;
  /**
   * Token for fetching the next page
   * @type {string}
   * @memberof SponsoredProductsGetTargetPromotionGroupsRecommendationsInternalResponseContent
   */
  nextToken?: string;
  /**
   * List of optimized targets for the request, as recommended by Amazon heuristics
   * @type {Array<SponsoredProductsRecommendedTarget>}
   * @memberof SponsoredProductsGetTargetPromotionGroupsRecommendationsInternalResponseContent
   */
  targets: Array<SponsoredProductsRecommendedTarget>;
}
/**
 *
 * @export
 * @interface SponsoredProductsGetTargetPromotionGroupsRecommendationsRequestContent
 */
export interface SponsoredProductsGetTargetPromotionGroupsRecommendationsRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsGetTargetPromotionGroupsRecommendationsRequestContent
   */
  campaignIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   * Number of records to include in the paginated response. Defaults to 1000.
   * @type {number}
   * @memberof SponsoredProductsGetTargetPromotionGroupsRecommendationsRequestContent
   */
  maxResults?: number;
  /**
   * Token for fetching the next page
   * @type {string}
   * @memberof SponsoredProductsGetTargetPromotionGroupsRecommendationsRequestContent
   */
  nextToken?: string;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsGetTargetPromotionGroupsRecommendationsRequestContent
   */
  adIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsGetTargetPromotionGroupsRecommendationsRequestContent
   */
  adGroupIdFilter?: SponsoredProductsObjectIdFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsGetTargetPromotionGroupsRecommendationsResponseContent
 */
export interface SponsoredProductsGetTargetPromotionGroupsRecommendationsResponseContent {
  /**
   * Total number of records available
   * @type {number}
   * @memberof SponsoredProductsGetTargetPromotionGroupsRecommendationsResponseContent
   */
  totalResults: number;
  /**
   * Token for fetching the next page
   * @type {string}
   * @memberof SponsoredProductsGetTargetPromotionGroupsRecommendationsResponseContent
   */
  nextToken?: string;
  /**
   * List of optimized targets for the request, as recommended by Amazon heuristics
   * @type {Array<SponsoredProductsRecommendedTarget>}
   * @memberof SponsoredProductsGetTargetPromotionGroupsRecommendationsResponseContent
   */
  targets: Array<SponsoredProductsRecommendedTarget>;
}
/**
 *
 * @export
 * @interface SponsoredProductsGlobalAdGroup
 */
export interface SponsoredProductsGlobalAdGroup {
  /**
   * The identifier of the campaign to which the keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsGlobalAdGroup
   */
  campaignId: string;
  /**
   *
   * @type {Array<string>}
   * @memberof SponsoredProductsGlobalAdGroup
   */
  applicableMarketplaces?: Array<string>;
  /**
   * The name of the ad group.
   * @type {string}
   * @memberof SponsoredProductsGlobalAdGroup
   */
  name: string;
  /**
   *
   * @type {SponsoredProductsGlobalEntityState}
   * @memberof SponsoredProductsGlobalAdGroup
   */
  state: SponsoredProductsGlobalEntityState;
  /**
   * The identifier of the keyword.
   * @type {string}
   * @memberof SponsoredProductsGlobalAdGroup
   */
  adGroupId: string;
  /**
   *
   * @type {SponsoredProductsGlobalBid}
   * @memberof SponsoredProductsGlobalAdGroup
   */
  defaultBid: SponsoredProductsGlobalBid;
  /**
   *
   * @type {SponsoredProductsGlobalAdGroupExtendedData}
   * @memberof SponsoredProductsGlobalAdGroup
   */
  extendedData?: SponsoredProductsGlobalAdGroupExtendedData;
}
/**
 *
 * @export
 * @interface SponsoredProductsGlobalAdGroupExtendedData
 */
export interface SponsoredProductsGlobalAdGroupExtendedData {
  /**
   *
   * @type {SponsoredProductsGlobalAdGroupServingStatus}
   * @memberof SponsoredProductsGlobalAdGroupExtendedData
   */
  servingStatus?: SponsoredProductsGlobalAdGroupServingStatus;
}
/**
 *
 * @export
 * @interface SponsoredProductsGlobalAdGroupFailureResponseItem
 */
export interface SponsoredProductsGlobalAdGroupFailureResponseItem {
  /**
   * the index of the adGroup in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsGlobalAdGroupFailureResponseItem
   */
  index: number;
  /**
   * A list of validation errors
   * @type {Array<SponsoredProductsAdGroupMutationError>}
   * @memberof SponsoredProductsGlobalAdGroupFailureResponseItem
   */
  errors?: Array<SponsoredProductsAdGroupMutationError>;
}
/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsGlobalAdGroupMarketplaceServingReason = {
  AdGroupStatusEnabledDetail: 'AD_GROUP_STATUS_ENABLED_DETAIL',
  AdGroupPausedDetail: 'AD_GROUP_PAUSED_DETAIL',
  AdGroupArchivedDetail: 'AD_GROUP_ARCHIVED_DETAIL',
  AdGroupIncompleteDetail: 'AD_GROUP_INCOMPLETE_DETAIL',
  AdGroupPolicingPendingReviewDetail: 'AD_GROUP_POLICING_PENDING_REVIEW_DETAIL',
  AdGroupPolicingCreativeRejectedDetail: 'AD_GROUP_POLICING_CREATIVE_REJECTED_DETAIL',
  AdGroupLowBidDetail: 'AD_GROUP_LOW_BID_DETAIL',
  CampaignStatusEnabledDetail: 'CAMPAIGN_STATUS_ENABLED_DETAIL',
  CampaignPausedDetail: 'CAMPAIGN_PAUSED_DETAIL',
  CampaignArchivedDetail: 'CAMPAIGN_ARCHIVED_DETAIL',
  PendingReviewDetail: 'PENDING_REVIEW_DETAIL',
  RejectedDetail: 'REJECTED_DETAIL',
  PendingStartDateDetail: 'PENDING_START_DATE_DETAIL',
  EndedDetail: 'ENDED_DETAIL',
  CampaignOutOfBudgetDetail: 'CAMPAIGN_OUT_OF_BUDGET_DETAIL',
  CampaignIncompleteDetail: 'CAMPAIGN_INCOMPLETE_DETAIL',
  AdvertiserPolicingSuspendedDetail: 'ADVERTISER_POLICING_SUSPENDED_DETAIL',
  AdvertiserPolicingPendingReviewDetail: 'ADVERTISER_POLICING_PENDING_REVIEW_DETAIL',
  AdvertiserArchivedDetail: 'ADVERTISER_ARCHIVED_DETAIL',
  AdvertiserPausedDetail: 'ADVERTISER_PAUSED_DETAIL',
  AdvertiserOutOfBudgetDetail: 'ADVERTISER_OUT_OF_BUDGET_DETAIL',
  AdvertiserPaymentFailureDetail: 'ADVERTISER_PAYMENT_FAILURE_DETAIL',
  AdvertiserStatusEnabledDetail: 'ADVERTISER_STATUS_ENABLED_DETAIL',
} as const;

export type SponsoredProductsGlobalAdGroupMarketplaceServingReason =
  (typeof SponsoredProductsGlobalAdGroupMarketplaceServingReason)[keyof typeof SponsoredProductsGlobalAdGroupMarketplaceServingReason];

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsGlobalAdGroupMarketplaceServingStatus = {
  AdGroupStatusEnabled: 'AD_GROUP_STATUS_ENABLED',
  AdGroupPaused: 'AD_GROUP_PAUSED',
  AdGroupArchived: 'AD_GROUP_ARCHIVED',
  AdGroupIncomplete: 'AD_GROUP_INCOMPLETE',
  AdGroupPolicingPendingReview: 'AD_GROUP_POLICING_PENDING_REVIEW',
  AdGroupPolicingCreativeRejected: 'AD_GROUP_POLICING_CREATIVE_REJECTED',
  AdGroupLowBid: 'AD_GROUP_LOW_BID',
  CampaignStatusEnabled: 'CAMPAIGN_STATUS_ENABLED',
  CampaignPaused: 'CAMPAIGN_PAUSED',
  CampaignArchived: 'CAMPAIGN_ARCHIVED',
  PendingReview: 'PENDING_REVIEW',
  Rejected: 'REJECTED',
  PendingStartDate: 'PENDING_START_DATE',
  Ended: 'ENDED',
  CampaignOutOfBudget: 'CAMPAIGN_OUT_OF_BUDGET',
  CampaignIncomplete: 'CAMPAIGN_INCOMPLETE',
  AdvertiserPolicingSuspended: 'ADVERTISER_POLICING_SUSPENDED',
  AdvertiserPolicingPendingReview: 'ADVERTISER_POLICING_PENDING_REVIEW',
  AdvertiserArchived: 'ADVERTISER_ARCHIVED',
  AdvertiserPaused: 'ADVERTISER_PAUSED',
  AdvertiserPaymentFailure: 'ADVERTISER_PAYMENT_FAILURE',
  AdvertiserStatusEnabled: 'ADVERTISER_STATUS_ENABLED',
} as const;

export type SponsoredProductsGlobalAdGroupMarketplaceServingStatus =
  (typeof SponsoredProductsGlobalAdGroupMarketplaceServingStatus)[keyof typeof SponsoredProductsGlobalAdGroupMarketplaceServingStatus];

/**
 *
 * @export
 * @interface SponsoredProductsGlobalAdGroupServingStatus
 */
export interface SponsoredProductsGlobalAdGroupServingStatus {
  /**
   * Serving status details of adgroup
   * @type {Array<SponsoredProductsGlobalAdGroupServingStatusReason>}
   * @memberof SponsoredProductsGlobalAdGroupServingStatus
   */
  statusReasons?: Array<SponsoredProductsGlobalAdGroupServingStatusReason>;
  /**
   *
   * @type {SponsoredProductsGlobalEntityServingStatus}
   * @memberof SponsoredProductsGlobalAdGroupServingStatus
   */
  adGroupServingStatus?: SponsoredProductsGlobalEntityServingStatus;
  /**
   * The marketplace serving statuses.
   * @type {Array<SponsoredProductsMarketplaceAdGroupServingStatus>}
   * @memberof SponsoredProductsGlobalAdGroupServingStatus
   */
  marketplaceAdGroupServingStatus?: Array<SponsoredProductsMarketplaceAdGroupServingStatus>;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsGlobalAdGroupServingStatusReason = {
  AdGroupDeliveringInAllMarketplaces: 'AD_GROUP_DELIVERING_IN_ALL_MARKETPLACES',
  AdGroupPausedInAtLeastOneMarketplace: 'AD_GROUP_PAUSED_IN_AT_LEAST_ONE_MARKETPLACE',
  AdGroupIncompleteInAtLeastOneMarketplace: 'AD_GROUP_INCOMPLETE_IN_AT_LEAST_ONE_MARKETPLACE',
  AdGroupArchived: 'AD_GROUP_ARCHIVED',
  AdGroupPolicingPendingReviewInAtLeastOneMarketplace: 'AD_GROUP_POLICING_PENDING_REVIEW_IN_AT_LEAST_ONE_MARKETPLACE',
  AdGroupPolicingCreativeRejectedInAtLeastOneMarketplace: 'AD_GROUP_POLICING_CREATIVE_REJECTED_IN_AT_LEAST_ONE_MARKETPLACE',
  AdGroupLowBidInAtLeastOneMarketplace: 'AD_GROUP_LOW_BID_IN_AT_LEAST_ONE_MARKETPLACE',
  CampaignArchived: 'CAMPAIGN_ARCHIVED',
  CampaignPausedInAtLeastOneMarketplace: 'CAMPAIGN_PAUSED_IN_AT_LEAST_ONE_MARKETPLACE',
  CampaignIncompleteInAtLeastOneMarketplace: 'CAMPAIGN_INCOMPLETE_IN_AT_LEAST_ONE_MARKETPLACE',
  CampaignPendingStart: 'CAMPAIGN_PENDING_START',
  CampaignEnded: 'CAMPAIGN_ENDED',
  CampaignOutOfBudgetInAtLeastOneMarketplace: 'CAMPAIGN_OUT_OF_BUDGET_IN_AT_LEAST_ONE_MARKETPLACE',
  PaymentFailedInAtleastOneMarketplace: 'PAYMENT_FAILED_IN_ATLEAST_ONE_MARKETPLACE',
  AdvertiserPolicingPendingReviewInAtleastOneMarketplaces: 'ADVERTISER_POLICING_PENDING_REVIEW_IN_ATLEAST_ONE_MARKETPLACES',
  AdvertiserPolicingSuspendedInAtleastOneMarketplaces: 'ADVERTISER_POLICING_SUSPENDED_IN_ATLEAST_ONE_MARKETPLACES',
  AdvertiserPausedInAtleastOneMarketplaces: 'ADVERTISER_PAUSED_IN_ATLEAST_ONE_MARKETPLACES',
  AdvertiserArchivedInAtleastOneMarketplaces: 'ADVERTISER_ARCHIVED_IN_ATLEAST_ONE_MARKETPLACES',
} as const;

export type SponsoredProductsGlobalAdGroupServingStatusReason =
  (typeof SponsoredProductsGlobalAdGroupServingStatusReason)[keyof typeof SponsoredProductsGlobalAdGroupServingStatusReason];

/**
 *
 * @export
 * @interface SponsoredProductsGlobalAdGroupSuccessResponseItem
 */
export interface SponsoredProductsGlobalAdGroupSuccessResponseItem {
  /**
   *
   * @type {SponsoredProductsGlobalAdGroup}
   * @memberof SponsoredProductsGlobalAdGroupSuccessResponseItem
   */
  adGroup?: SponsoredProductsGlobalAdGroup;
  /**
   * the index of the adGroup in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsGlobalAdGroupSuccessResponseItem
   */
  index: number;
  /**
   * the adGroup ID
   * @type {string}
   * @memberof SponsoredProductsGlobalAdGroupSuccessResponseItem
   */
  adGroupId?: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsGlobalBid
 */
export interface SponsoredProductsGlobalBid {
  /**
   * marketplace bid settings.
   * @type {Array<SponsoredProductsMarketplaceBid>}
   * @memberof SponsoredProductsGlobalBid
   */
  marketplaceSettings?: Array<SponsoredProductsMarketplaceBid>;
  /**
   *
   * @type {SponsoredProductsCurrency}
   * @memberof SponsoredProductsGlobalBid
   */
  currency?: SponsoredProductsCurrency;
}

/**
 *
 * @export
 * @interface SponsoredProductsGlobalBudget
 */
export interface SponsoredProductsGlobalBudget {
  /**
   *
   * @type {SponsoredProductsBudgetType}
   * @memberof SponsoredProductsGlobalBudget
   */
  budgetType: SponsoredProductsBudgetType;
  /**
   * marketplace budget settings.
   * @type {Array<SponsoredProductsMarketplaceBudget>}
   * @memberof SponsoredProductsGlobalBudget
   */
  marketplaceSettings?: Array<SponsoredProductsMarketplaceBudget>;
  /**
   *
   * @type {SponsoredProductsCurrency}
   * @memberof SponsoredProductsGlobalBudget
   */
  currency: SponsoredProductsCurrency;
}

/**
 *
 * @export
 * @interface SponsoredProductsGlobalCampaign
 */
export interface SponsoredProductsGlobalCampaign {
  /**
   * The format of the date is YYYY-MM-DD.
   * @type {string}
   * @memberof SponsoredProductsGlobalCampaign
   */
  endDate?: string;
  /**
   * The identifier of the campaign.
   * @type {string}
   * @memberof SponsoredProductsGlobalCampaign
   */
  campaignId: string;
  /**
   *
   * @type {Array<string>}
   * @memberof SponsoredProductsGlobalCampaign
   */
  applicableMarketplaces?: Array<string>;
  /**
   * The name of the campaign.
   * @type {string}
   * @memberof SponsoredProductsGlobalCampaign
   */
  name: string;
  /**
   *
   * @type {SponsoredProductsTargetingType}
   * @memberof SponsoredProductsGlobalCampaign
   */
  targetingType: SponsoredProductsTargetingType;
  /**
   *
   * @type {SponsoredProductsGlobalEntityState}
   * @memberof SponsoredProductsGlobalCampaign
   */
  state: SponsoredProductsGlobalEntityState;
  /**
   *
   * @type {SponsoredProductsDynamicBidding}
   * @memberof SponsoredProductsGlobalCampaign
   */
  dynamicBidding?: SponsoredProductsDynamicBidding;
  /**
   * The format of the date is YYYY-MM-DD.
   * @type {string}
   * @memberof SponsoredProductsGlobalCampaign
   */
  startDate?: string;
  /**
   *
   * @type {SponsoredProductsGlobalBudget}
   * @memberof SponsoredProductsGlobalCampaign
   */
  budget: SponsoredProductsGlobalBudget;
  /**
   * A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.
   * @type {{ [key: string]: string; }}
   * @memberof SponsoredProductsGlobalCampaign
   */
  tags?: { [key: string]: string };
  /**
   *
   * @type {SponsoredProductsGlobalCampaignExtendedData}
   * @memberof SponsoredProductsGlobalCampaign
   */
  extendedData?: SponsoredProductsGlobalCampaignExtendedData;
}

/**
 *
 * @export
 * @interface SponsoredProductsGlobalCampaignExtendedData
 */
export interface SponsoredProductsGlobalCampaignExtendedData {
  /**
   *
   * @type {SponsoredProductsGlobalCampaignServingStatus}
   * @memberof SponsoredProductsGlobalCampaignExtendedData
   */
  servingStatus?: SponsoredProductsGlobalCampaignServingStatus;
}
/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsGlobalCampaignMarketplaceServingReason = {
  CampaignStatusEnabledDetail: 'CAMPAIGN_STATUS_ENABLED_DETAIL',
  CampaignPausedDetail: 'CAMPAIGN_PAUSED_DETAIL',
  CampaignArchivedDetail: 'CAMPAIGN_ARCHIVED_DETAIL',
  PendingReviewDetail: 'PENDING_REVIEW_DETAIL',
  RejectedDetail: 'REJECTED_DETAIL',
  PendingStartDateDetail: 'PENDING_START_DATE_DETAIL',
  EndedDetail: 'ENDED_DETAIL',
  CampaignOutOfBudgetDetail: 'CAMPAIGN_OUT_OF_BUDGET_DETAIL',
  CampaignIncompleteDetail: 'CAMPAIGN_INCOMPLETE_DETAIL',
  AdvertiserPolicingSuspendedDetail: 'ADVERTISER_POLICING_SUSPENDED_DETAIL',
  AdvertiserPolicingPendingReviewDetail: 'ADVERTISER_POLICING_PENDING_REVIEW_DETAIL',
  AdvertiserArchivedDetail: 'ADVERTISER_ARCHIVED_DETAIL',
  AdvertiserPausedDetail: 'ADVERTISER_PAUSED_DETAIL',
  AdvertiserOutOfBudgetDetail: 'ADVERTISER_OUT_OF_BUDGET_DETAIL',
  AdvertiserPaymentFailureDetail: 'ADVERTISER_PAYMENT_FAILURE_DETAIL',
} as const;

export type SponsoredProductsGlobalCampaignMarketplaceServingReason =
  (typeof SponsoredProductsGlobalCampaignMarketplaceServingReason)[keyof typeof SponsoredProductsGlobalCampaignMarketplaceServingReason];

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsGlobalCampaignMarketplaceServingStatus = {
  CampaignStatusEnabled: 'CAMPAIGN_STATUS_ENABLED',
  CampaignPaused: 'CAMPAIGN_PAUSED',
  CampaignArchived: 'CAMPAIGN_ARCHIVED',
  PendingReview: 'PENDING_REVIEW',
  Rejected: 'REJECTED',
  PendingStartDate: 'PENDING_START_DATE',
  Ended: 'ENDED',
  CampaignOutOfBudget: 'CAMPAIGN_OUT_OF_BUDGET',
  CampaignIncomplete: 'CAMPAIGN_INCOMPLETE',
  AdvertiserPolicingSuspended: 'ADVERTISER_POLICING_SUSPENDED',
  AdvertiserPolicingPendingReview: 'ADVERTISER_POLICING_PENDING_REVIEW',
  AdvertiserArchived: 'ADVERTISER_ARCHIVED',
  AdvertiserPaused: 'ADVERTISER_PAUSED',
  AdvertiserPaymentFailure: 'ADVERTISER_PAYMENT_FAILURE',
} as const;

export type SponsoredProductsGlobalCampaignMarketplaceServingStatus =
  (typeof SponsoredProductsGlobalCampaignMarketplaceServingStatus)[keyof typeof SponsoredProductsGlobalCampaignMarketplaceServingStatus];

/**
 *
 * @export
 * @interface SponsoredProductsGlobalCampaignMutationFailureResponseItem
 */
export interface SponsoredProductsGlobalCampaignMutationFailureResponseItem {
  /**
   * the index of the campaign in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsGlobalCampaignMutationFailureResponseItem
   */
  index: number;
  /**
   * A list of validation errors
   * @type {Array<SponsoredProductsCampaignMutationError>}
   * @memberof SponsoredProductsGlobalCampaignMutationFailureResponseItem
   */
  errors?: Array<SponsoredProductsCampaignMutationError>;
}
/**
 *
 * @export
 * @interface SponsoredProductsGlobalCampaignMutationSuccessResponseItem
 */
export interface SponsoredProductsGlobalCampaignMutationSuccessResponseItem {
  /**
   * the campaign ID
   * @type {string}
   * @memberof SponsoredProductsGlobalCampaignMutationSuccessResponseItem
   */
  campaignId?: string;
  /**
   * the index of the campaign in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsGlobalCampaignMutationSuccessResponseItem
   */
  index: number;
  /**
   *
   * @type {SponsoredProductsGlobalCampaign}
   * @memberof SponsoredProductsGlobalCampaignMutationSuccessResponseItem
   */
  campaign?: SponsoredProductsGlobalCampaign;
}
/**
 *
 * @export
 * @interface SponsoredProductsGlobalCampaignNegativeKeyword
 */
export interface SponsoredProductsGlobalCampaignNegativeKeyword {
  /**
   * The identifier of the keyword.
   * @type {string}
   * @memberof SponsoredProductsGlobalCampaignNegativeKeyword
   */
  keywordId: string;
  /**
   * The identifier of the campaign to which the keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsGlobalCampaignNegativeKeyword
   */
  campaignId: string;
  /**
   *
   * @type {SponsoredProductsNegativeMatchType}
   * @memberof SponsoredProductsGlobalCampaignNegativeKeyword
   */
  matchType: SponsoredProductsNegativeMatchType;
  /**
   * Name for the keyword
   * @type {string}
   * @memberof SponsoredProductsGlobalCampaignNegativeKeyword
   */
  name?: string;
  /**
   *
   * @type {SponsoredProductsGlobalEntityState}
   * @memberof SponsoredProductsGlobalCampaignNegativeKeyword
   */
  state: SponsoredProductsGlobalEntityState;
  /**
   *
   * @type {SponsoredProductsGlobalNegativeKeywordText}
   * @memberof SponsoredProductsGlobalCampaignNegativeKeyword
   */
  keywordText: SponsoredProductsGlobalNegativeKeywordText;
  /**
   *
   * @type {SponsoredProductsGlobalCampaignNegativeKeywordExtendedData}
   * @memberof SponsoredProductsGlobalCampaignNegativeKeyword
   */
  extendedData?: SponsoredProductsGlobalCampaignNegativeKeywordExtendedData;
}

/**
 *
 * @export
 * @interface SponsoredProductsGlobalCampaignNegativeKeywordExtendedData
 */
export interface SponsoredProductsGlobalCampaignNegativeKeywordExtendedData {
  /**
   *
   * @type {SponsoredProductsGlobalKeywordServingStatus}
   * @memberof SponsoredProductsGlobalCampaignNegativeKeywordExtendedData
   */
  servingStatus?: SponsoredProductsGlobalKeywordServingStatus;
}
/**
 *
 * @export
 * @interface SponsoredProductsGlobalCampaignNegativeKeywordFailureResponseItem
 */
export interface SponsoredProductsGlobalCampaignNegativeKeywordFailureResponseItem {
  /**
   * the index of the campaign in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsGlobalCampaignNegativeKeywordFailureResponseItem
   */
  index: number;
  /**
   * A list of validation errors
   * @type {Array<SponsoredProductsCampaignNegativeKeywordMutationError>}
   * @memberof SponsoredProductsGlobalCampaignNegativeKeywordFailureResponseItem
   */
  errors?: Array<SponsoredProductsCampaignNegativeKeywordMutationError>;
}
/**
 *
 * @export
 * @interface SponsoredProductsGlobalCampaignNegativeKeywordSuccessResponseItem
 */
export interface SponsoredProductsGlobalCampaignNegativeKeywordSuccessResponseItem {
  /**
   *
   * @type {SponsoredProductsGlobalCampaignNegativeKeyword}
   * @memberof SponsoredProductsGlobalCampaignNegativeKeywordSuccessResponseItem
   */
  campaignNegativeKeyword?: SponsoredProductsGlobalCampaignNegativeKeyword;
  /**
   * the campaignNegativeKeyword ID
   * @type {string}
   * @memberof SponsoredProductsGlobalCampaignNegativeKeywordSuccessResponseItem
   */
  campaignNegativeKeywordId?: string;
  /**
   * the index of the campaign in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsGlobalCampaignNegativeKeywordSuccessResponseItem
   */
  index: number;
}
/**
 *
 * @export
 * @interface SponsoredProductsGlobalCampaignServingStatus
 */
export interface SponsoredProductsGlobalCampaignServingStatus {
  /**
   * Serving status details of campaign
   * @type {Array<SponsoredProductsGlobalCampaignServingStatusReason>}
   * @memberof SponsoredProductsGlobalCampaignServingStatus
   */
  statusReasons?: Array<SponsoredProductsGlobalCampaignServingStatusReason>;
  /**
   * The marketplace serving statuses.
   * @type {Array<SponsoredProductsMarketplaceCampaignServingStatus>}
   * @memberof SponsoredProductsGlobalCampaignServingStatus
   */
  marketplaceCampaignServingStatus?: Array<SponsoredProductsMarketplaceCampaignServingStatus>;
  /**
   *
   * @type {SponsoredProductsGlobalEntityServingStatus}
   * @memberof SponsoredProductsGlobalCampaignServingStatus
   */
  campaignServingStatus?: SponsoredProductsGlobalEntityServingStatus;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsGlobalCampaignServingStatusReason = {
  CampaignDeliveringInAllMarketplaces: 'CAMPAIGN_DELIVERING_IN_ALL_MARKETPLACES',
  AdvertiserPaymentFailureInAtLeastOneMarketplace: 'ADVERTISER_PAYMENT_FAILURE_IN_AT_LEAST_ONE_MARKETPLACE',
  AdvertiserPolicingPendingReviewInAtleastOneMarketplaces: 'ADVERTISER_POLICING_PENDING_REVIEW_IN_ATLEAST_ONE_MARKETPLACES',
  AdvertiserPolicingSuspendedInAtleastOneMarketplaces: 'ADVERTISER_POLICING_SUSPENDED_IN_ATLEAST_ONE_MARKETPLACES',
  AdvertiserPausedInAtleastOneMarketplaces: 'ADVERTISER_PAUSED_IN_ATLEAST_ONE_MARKETPLACES',
  AdvertiserArchivedInAtleastOneMarketplaces: 'ADVERTISER_ARCHIVED_IN_ATLEAST_ONE_MARKETPLACES',
  CampaignOutOfBudgetInAtLeastOneMarketplace: 'CAMPAIGN_OUT_OF_BUDGET_IN_AT_LEAST_ONE_MARKETPLACE',
  CampaignPausedInAtLeastOneMarketplace: 'CAMPAIGN_PAUSED_IN_AT_LEAST_ONE_MARKETPLACE',
  CampaignArchived: 'CAMPAIGN_ARCHIVED',
  CampaignIncompleteInAtLeastOneMarketplace: 'CAMPAIGN_INCOMPLETE_IN_AT_LEAST_ONE_MARKETPLACE',
  CampaignPendingStartDate: 'CAMPAIGN_PENDING_START_DATE',
  CampaignEnded: 'CAMPAIGN_ENDED',
} as const;

export type SponsoredProductsGlobalCampaignServingStatusReason =
  (typeof SponsoredProductsGlobalCampaignServingStatusReason)[keyof typeof SponsoredProductsGlobalCampaignServingStatusReason];

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsGlobalEntityServingStatus = {
  Active: 'ACTIVE',
  Inactive: 'INACTIVE',
  ActiveWithExceptions: 'ACTIVE_WITH_EXCEPTIONS',
  Archived: 'ARCHIVED',
} as const;

export type SponsoredProductsGlobalEntityServingStatus =
  (typeof SponsoredProductsGlobalEntityServingStatus)[keyof typeof SponsoredProductsGlobalEntityServingStatus];

/**
 *
 * @export
 * @interface SponsoredProductsGlobalEntityState
 */
export interface SponsoredProductsGlobalEntityState {
  /**
   *
   * @type {Array<SponsoredProductsMarketplaceState>}
   * @memberof SponsoredProductsGlobalEntityState
   */
  marketplaceSettings?: Array<SponsoredProductsMarketplaceState>;
  /**
   *
   * @type {SponsoredProductsEntityState}
   * @memberof SponsoredProductsGlobalEntityState
   */
  state: SponsoredProductsEntityState;
}

/**
 *
 * @export
 * @interface SponsoredProductsGlobalKeyword
 */
export interface SponsoredProductsGlobalKeyword {
  /**
   * The identifier of the keyword.
   * @type {string}
   * @memberof SponsoredProductsGlobalKeyword
   */
  keywordId: string;
  /**
   * The identifier of the campaign to which the keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsGlobalKeyword
   */
  campaignId: string;
  /**
   *
   * @type {SponsoredProductsMatchType}
   * @memberof SponsoredProductsGlobalKeyword
   */
  matchType: SponsoredProductsMatchType;
  /**
   * Name for the Keyword
   * @type {string}
   * @memberof SponsoredProductsGlobalKeyword
   */
  name?: string;
  /**
   *
   * @type {SponsoredProductsGlobalEntityState}
   * @memberof SponsoredProductsGlobalKeyword
   */
  state: SponsoredProductsGlobalEntityState;
  /**
   *
   * @type {SponsoredProductsGlobalBid}
   * @memberof SponsoredProductsGlobalKeyword
   */
  bid: SponsoredProductsGlobalBid;
  /**
   * The identifier of the ad group to which this keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsGlobalKeyword
   */
  adGroupId: string;
  /**
   *
   * @type {SponsoredProductsGlobalKeywordText}
   * @memberof SponsoredProductsGlobalKeyword
   */
  keywordText: SponsoredProductsGlobalKeywordText;
  /**
   *
   * @type {SponsoredProductsGlobalKeywordExtendedData}
   * @memberof SponsoredProductsGlobalKeyword
   */
  extendedData?: SponsoredProductsGlobalKeywordExtendedData;
}

/**
 *
 * @export
 * @interface SponsoredProductsGlobalKeywordExtendedData
 */
export interface SponsoredProductsGlobalKeywordExtendedData {
  /**
   *
   * @type {SponsoredProductsGlobalKeywordServingStatus}
   * @memberof SponsoredProductsGlobalKeywordExtendedData
   */
  servingStatus?: SponsoredProductsGlobalKeywordServingStatus;
}
/**
 *
 * @export
 * @interface SponsoredProductsGlobalKeywordFailureResponseItem
 */
export interface SponsoredProductsGlobalKeywordFailureResponseItem {
  /**
   * the index of the keyword in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsGlobalKeywordFailureResponseItem
   */
  index: number;
  /**
   * A list of validation errors
   * @type {Array<SponsoredProductsKeywordMutationError>}
   * @memberof SponsoredProductsGlobalKeywordFailureResponseItem
   */
  errors?: Array<SponsoredProductsKeywordMutationError>;
}
/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsGlobalKeywordMarketplaceServingStatus = {
  TargetingClauseStatusLive: 'TARGETING_CLAUSE_STATUS_LIVE',
  TargetingClausePolicingSuspended: 'TARGETING_CLAUSE_POLICING_SUSPENDED',
  TargetingClausePaused: 'TARGETING_CLAUSE_PAUSED',
  TargetingClauseArchived: 'TARGETING_CLAUSE_ARCHIVED',
  TargetingClauseBlocked: 'TARGETING_CLAUSE_BLOCKED',
  AdGroupStatusEnabled: 'AD_GROUP_STATUS_ENABLED',
  AdGroupPaused: 'AD_GROUP_PAUSED',
  AdGroupArchived: 'AD_GROUP_ARCHIVED',
  AdGroupIncomplete: 'AD_GROUP_INCOMPLETE',
  AdGroupPolicingPendingReview: 'AD_GROUP_POLICING_PENDING_REVIEW',
  AdGroupPolicingCreativeRejected: 'AD_GROUP_POLICING_CREATIVE_REJECTED',
  AdGroupLowBid: 'AD_GROUP_LOW_BID',
  CampaignStatusEnabled: 'CAMPAIGN_STATUS_ENABLED',
  CampaignPaused: 'CAMPAIGN_PAUSED',
  CampaignArchived: 'CAMPAIGN_ARCHIVED',
  PendingReview: 'PENDING_REVIEW',
  Rejected: 'REJECTED',
  PendingStartDate: 'PENDING_START_DATE',
  Ended: 'ENDED',
  CampaignOutOfBudget: 'CAMPAIGN_OUT_OF_BUDGET',
  CampaignIncomplete: 'CAMPAIGN_INCOMPLETE',
  PortfolioStatusEnabled: 'PORTFOLIO_STATUS_ENABLED',
  AdvertiserPolicingSuspended: 'ADVERTISER_POLICING_SUSPENDED',
  AdvertiserPolicingPendingReview: 'ADVERTISER_POLICING_PENDING_REVIEW',
  AdvertiserArchived: 'ADVERTISER_ARCHIVED',
  AdvertiserPaused: 'ADVERTISER_PAUSED',
  AdvertiserOutOfBudget: 'ADVERTISER_OUT_OF_BUDGET',
  AdvertiserPaymentFailure: 'ADVERTISER_PAYMENT_FAILURE',
} as const;

export type SponsoredProductsGlobalKeywordMarketplaceServingStatus =
  (typeof SponsoredProductsGlobalKeywordMarketplaceServingStatus)[keyof typeof SponsoredProductsGlobalKeywordMarketplaceServingStatus];

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsGlobalKeywordMarketplaceServingStatusReason = {
  TargetingClauseStatusLiveDetail: 'TARGETING_CLAUSE_STATUS_LIVE_DETAIL',
  TargetingClausePolicingSuspendedDetail: 'TARGETING_CLAUSE_POLICING_SUSPENDED_DETAIL',
  TargetingClausePausedDetail: 'TARGETING_CLAUSE_PAUSED_DETAIL',
  TargetingClauseArchivedDetail: 'TARGETING_CLAUSE_ARCHIVED_DETAIL',
  TargetingClauseBlockedDetail: 'TARGETING_CLAUSE_BLOCKED_DETAIL',
  AdGroupStatusEnabledDetail: 'AD_GROUP_STATUS_ENABLED_DETAIL',
  AdGroupPausedDetail: 'AD_GROUP_PAUSED_DETAIL',
  AdGroupArchivedDetail: 'AD_GROUP_ARCHIVED_DETAIL',
  AdGroupIncompleteDetail: 'AD_GROUP_INCOMPLETE_DETAIL',
  AdGroupPolicingPendingReviewDetail: 'AD_GROUP_POLICING_PENDING_REVIEW_DETAIL',
  AdGroupPolicingCreativeRejectedDetail: 'AD_GROUP_POLICING_CREATIVE_REJECTED_DETAIL',
  AdGroupLowBidDetail: 'AD_GROUP_LOW_BID_DETAIL',
  CampaignStatusEnabledDetail: 'CAMPAIGN_STATUS_ENABLED_DETAIL',
  CampaignPausedDetail: 'CAMPAIGN_PAUSED_DETAIL',
  CampaignArchivedDetail: 'CAMPAIGN_ARCHIVED_DETAIL',
  PendingReviewDetail: 'PENDING_REVIEW_DETAIL',
  RejectedDetail: 'REJECTED_DETAIL',
  PendingStartDateDetail: 'PENDING_START_DATE_DETAIL',
  EndedDetail: 'ENDED_DETAIL',
  CampaignOutOfBudgetDetail: 'CAMPAIGN_OUT_OF_BUDGET_DETAIL',
  CampaignIncompleteDetail: 'CAMPAIGN_INCOMPLETE_DETAIL',
  AdvertiserPolicingSuspendedDetail: 'ADVERTISER_POLICING_SUSPENDED_DETAIL',
  AdvertiserPolicingPendingReviewDetail: 'ADVERTISER_POLICING_PENDING_REVIEW_DETAIL',
  AdvertiserArchivedDetail: 'ADVERTISER_ARCHIVED_DETAIL',
  AdvertiserPausedDetail: 'ADVERTISER_PAUSED_DETAIL',
  AdvertiserOutOfBudgetDetail: 'ADVERTISER_OUT_OF_BUDGET_DETAIL',
  AdvertiserPaymentFailureDetail: 'ADVERTISER_PAYMENT_FAILURE_DETAIL',
} as const;

export type SponsoredProductsGlobalKeywordMarketplaceServingStatusReason =
  (typeof SponsoredProductsGlobalKeywordMarketplaceServingStatusReason)[keyof typeof SponsoredProductsGlobalKeywordMarketplaceServingStatusReason];

/**
 *
 * @export
 * @interface SponsoredProductsGlobalKeywordServingStatus
 */
export interface SponsoredProductsGlobalKeywordServingStatus {
  /**
   * Serving status details of Keyword
   * @type {Array<SponsoredProductsGlobalKeywordServingStatusReason>}
   * @memberof SponsoredProductsGlobalKeywordServingStatus
   */
  statusReasons?: Array<SponsoredProductsGlobalKeywordServingStatusReason>;
  /**
   * The marketplace serving statuses.
   * @type {Array<SponsoredProductsMarketplaceLevelKeywordServingStatus>}
   * @memberof SponsoredProductsGlobalKeywordServingStatus
   */
  marketplaceKeywordServingStatus?: Array<SponsoredProductsMarketplaceLevelKeywordServingStatus>;
  /**
   *
   * @type {SponsoredProductsGlobalEntityServingStatus}
   * @memberof SponsoredProductsGlobalKeywordServingStatus
   */
  keywordServingStatus?: SponsoredProductsGlobalEntityServingStatus;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsGlobalKeywordServingStatusReason = {
  TargetingClauseDeliveringInAllMarketplaces: 'TARGETING_CLAUSE_DELIVERING_IN_ALL_MARKETPLACES',
  AdvertiserPaymentFailureInAtLeastOneMarketplace: 'ADVERTISER_PAYMENT_FAILURE_IN_AT_LEAST_ONE_MARKETPLACE',
  AccountOutOfBudgetInAtLeastOneMarketplace: 'ACCOUNT_OUT_OF_BUDGET_IN_AT_LEAST_ONE_MARKETPLACE',
  AdvertiserPolicingPendingReviewInAtleastOneMarketplaces: 'ADVERTISER_POLICING_PENDING_REVIEW_IN_ATLEAST_ONE_MARKETPLACES',
  AdvertiserPolicingSuspendedInAtleastOneMarketplaces: 'ADVERTISER_POLICING_SUSPENDED_IN_ATLEAST_ONE_MARKETPLACES',
  AdvertiserPausedInAtleastOneMarketplaces: 'ADVERTISER_PAUSED_IN_ATLEAST_ONE_MARKETPLACES',
  AdvertiserArchivedInAtleastOneMarketplaces: 'ADVERTISER_ARCHIVED_IN_ATLEAST_ONE_MARKETPLACES',
  CampaignOutOfBudgetInAtLeastOneMarketplace: 'CAMPAIGN_OUT_OF_BUDGET_IN_AT_LEAST_ONE_MARKETPLACE',
  CampaignPausedInAtLeastOneMarketplace: 'CAMPAIGN_PAUSED_IN_AT_LEAST_ONE_MARKETPLACE',
  CampaignArchived: 'CAMPAIGN_ARCHIVED',
  CampaignIncompleteInAtLeastOneMarketplace: 'CAMPAIGN_INCOMPLETE_IN_AT_LEAST_ONE_MARKETPLACE',
  CampaignCreationFailedInAtLeastOneMarketplace: 'CAMPAIGN_CREATION_FAILED_IN_AT_LEAST_ONE_MARKETPLACE',
  CampaignPendingStartDate: 'CAMPAIGN_PENDING_START_DATE',
  CampaignEnded: 'CAMPAIGN_ENDED',
  AdGroupPausedInAtLeastOneMarketplace: 'AD_GROUP_PAUSED_IN_AT_LEAST_ONE_MARKETPLACE',
  AdGroupArchived: 'AD_GROUP_ARCHIVED',
  AdGroupIncompleteInAtLeastOneMarketplace: 'AD_GROUP_INCOMPLETE_IN_AT_LEAST_ONE_MARKETPLACE',
  AdGroupCreationInProgressInAtLeastOneMarketplace: 'AD_GROUP_CREATION_IN_PROGRESS_IN_AT_LEAST_ONE_MARKETPLACE',
  AdGroupCreationFailedInAtLeastOneMarketplace: 'AD_GROUP_CREATION_FAILED_IN_AT_LEAST_ONE_MARKETPLACE',
  AdGroupPolicingPendingReviewInAtLeastOneMarketplace: 'AD_GROUP_POLICING_PENDING_REVIEW_IN_AT_LEAST_ONE_MARKETPLACE',
  AdGroupPolicingCreativeRejectedInAtLeastOneMarketplace: 'AD_GROUP_POLICING_CREATIVE_REJECTED_IN_AT_LEAST_ONE_MARKETPLACE',
  AdGroupLowBidInAtLeastOneMarketplace: 'AD_GROUP_LOW_BID_IN_AT_LEAST_ONE_MARKETPLACE',
  TargetingClausePausedInAtLeastOneMarketplace: 'TARGETING_CLAUSE_PAUSED_IN_AT_LEAST_ONE_MARKETPLACE',
  TargetingClauseArchived: 'TARGETING_CLAUSE_ARCHIVED',
  TargetingClausePolicingSuspendedInAtLeastOneMarketplace: 'TARGETING_CLAUSE_POLICING_SUSPENDED_IN_AT_LEAST_ONE_MARKETPLACE',
  TargetingClauseCreationFailedInAtLeastOneMarketplace: 'TARGETING_CLAUSE_CREATION_FAILED_IN_AT_LEAST_ONE_MARKETPLACE',
  TargetingClauseBlockedInAtLeastOneMarketplace: 'TARGETING_CLAUSE_BLOCKED_IN_AT_LEAST_ONE_MARKETPLACE',
} as const;

export type SponsoredProductsGlobalKeywordServingStatusReason =
  (typeof SponsoredProductsGlobalKeywordServingStatusReason)[keyof typeof SponsoredProductsGlobalKeywordServingStatusReason];

/**
 *
 * @export
 * @interface SponsoredProductsGlobalKeywordSuccessResponseItem
 */
export interface SponsoredProductsGlobalKeywordSuccessResponseItem {
  /**
   * the keyword ID
   * @type {string}
   * @memberof SponsoredProductsGlobalKeywordSuccessResponseItem
   */
  keywordId?: string;
  /**
   * the index of the keyword in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsGlobalKeywordSuccessResponseItem
   */
  index: number;
  /**
   *
   * @type {SponsoredProductsGlobalKeyword}
   * @memberof SponsoredProductsGlobalKeywordSuccessResponseItem
   */
  keyword?: SponsoredProductsGlobalKeyword;
}
/**
 *
 * @export
 * @interface SponsoredProductsGlobalKeywordText
 */
export interface SponsoredProductsGlobalKeywordText {
  /**
   * The marketplace settings for keyword text to be overridden for marketplace.
   * @type {Array<SponsoredProductsKeywordTextMarketplaceSettings>}
   * @memberof SponsoredProductsGlobalKeywordText
   */
  marketplaceSettings?: Array<SponsoredProductsKeywordTextMarketplaceSettings>;
  /**
   *
   * @type {SponsoredProductsLocale}
   * @memberof SponsoredProductsGlobalKeywordText
   */
  locale?: SponsoredProductsLocale;
  /**
   *
   * @type {string}
   * @memberof SponsoredProductsGlobalKeywordText
   */
  value: string;
}

/**
 *
 * @export
 * @interface SponsoredProductsGlobalNegativeKeyword
 */
export interface SponsoredProductsGlobalNegativeKeyword {
  /**
   * The identifier of the keyword.
   * @type {string}
   * @memberof SponsoredProductsGlobalNegativeKeyword
   */
  keywordId: string;
  /**
   * The identifier of the campaign to which the keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsGlobalNegativeKeyword
   */
  campaignId: string;
  /**
   *
   * @type {SponsoredProductsNegativeMatchType}
   * @memberof SponsoredProductsGlobalNegativeKeyword
   */
  matchType: SponsoredProductsNegativeMatchType;
  /**
   * Name for the keyword
   * @type {string}
   * @memberof SponsoredProductsGlobalNegativeKeyword
   */
  name?: string;
  /**
   *
   * @type {SponsoredProductsGlobalEntityState}
   * @memberof SponsoredProductsGlobalNegativeKeyword
   */
  state: SponsoredProductsGlobalEntityState;
  /**
   * The identifier of the ad group to which this keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsGlobalNegativeKeyword
   */
  adGroupId: string;
  /**
   *
   * @type {SponsoredProductsGlobalNegativeKeywordText}
   * @memberof SponsoredProductsGlobalNegativeKeyword
   */
  keywordText: SponsoredProductsGlobalNegativeKeywordText;
  /**
   *
   * @type {SponsoredProductsGlobalNegativeKeywordExtendedData}
   * @memberof SponsoredProductsGlobalNegativeKeyword
   */
  extendedData?: SponsoredProductsGlobalNegativeKeywordExtendedData;
}

/**
 *
 * @export
 * @interface SponsoredProductsGlobalNegativeKeywordExtendedData
 */
export interface SponsoredProductsGlobalNegativeKeywordExtendedData {
  /**
   *
   * @type {SponsoredProductsGlobalKeywordServingStatus}
   * @memberof SponsoredProductsGlobalNegativeKeywordExtendedData
   */
  servingStatus?: SponsoredProductsGlobalKeywordServingStatus;
}
/**
 *
 * @export
 * @interface SponsoredProductsGlobalNegativeKeywordFailureResponseItem
 */
export interface SponsoredProductsGlobalNegativeKeywordFailureResponseItem {
  /**
   * the index of the negativeKeyword in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsGlobalNegativeKeywordFailureResponseItem
   */
  index: number;
  /**
   * A list of validation errors
   * @type {Array<SponsoredProductsNegativeKeywordMutationError>}
   * @memberof SponsoredProductsGlobalNegativeKeywordFailureResponseItem
   */
  errors?: Array<SponsoredProductsNegativeKeywordMutationError>;
}
/**
 *
 * @export
 * @interface SponsoredProductsGlobalNegativeKeywordSuccessResponseItem
 */
export interface SponsoredProductsGlobalNegativeKeywordSuccessResponseItem {
  /**
   * the index of the negativeKeyword in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsGlobalNegativeKeywordSuccessResponseItem
   */
  index: number;
  /**
   *
   * @type {SponsoredProductsGlobalNegativeKeyword}
   * @memberof SponsoredProductsGlobalNegativeKeywordSuccessResponseItem
   */
  negativeKeyword?: SponsoredProductsGlobalNegativeKeyword;
  /**
   * the negativeKeyword ID
   * @type {string}
   * @memberof SponsoredProductsGlobalNegativeKeywordSuccessResponseItem
   */
  negativeKeywordId?: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsGlobalNegativeKeywordText
 */
export interface SponsoredProductsGlobalNegativeKeywordText {
  /**
   * The marketplace settings for keyword text to be overridden for marketplace.
   * @type {Array<SponsoredProductsKeywordTextMarketplaceSettings>}
   * @memberof SponsoredProductsGlobalNegativeKeywordText
   */
  marketplaceSettings?: Array<SponsoredProductsKeywordTextMarketplaceSettings>;
  /**
   *
   * @type {string}
   * @memberof SponsoredProductsGlobalNegativeKeywordText
   */
  value: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsGlobalNegativeTargetingClause
 */
export interface SponsoredProductsGlobalNegativeTargetingClause {
  /**
   * The NegativeTargeting expression.
   * @type {Array<SponsoredProductsGlobalTargetingExpressionPredicate>}
   * @memberof SponsoredProductsGlobalNegativeTargetingClause
   */
  expression: Array<SponsoredProductsGlobalTargetingExpressionPredicate>;
  /**
   * The target identifier
   * @type {string}
   * @memberof SponsoredProductsGlobalNegativeTargetingClause
   */
  targetId: string;
  /**
   * The resolved NegativeTargeting expression.
   * @type {Array<SponsoredProductsGlobalTargetingExpressionPredicate>}
   * @memberof SponsoredProductsGlobalNegativeTargetingClause
   */
  resolvedExpression: Array<SponsoredProductsGlobalTargetingExpressionPredicate>;
  /**
   * The identifier of the campaign to which this target is associated.
   * @type {string}
   * @memberof SponsoredProductsGlobalNegativeTargetingClause
   */
  campaignId: string;
  /**
   * Name for the negative targeting clause
   * @type {string}
   * @memberof SponsoredProductsGlobalNegativeTargetingClause
   */
  name: string;
  /**
   *
   * @type {SponsoredProductsGlobalEntityState}
   * @memberof SponsoredProductsGlobalNegativeTargetingClause
   */
  state: SponsoredProductsGlobalEntityState;
  /**
   * The identifier of the ad group to which this target is associated.
   * @type {string}
   * @memberof SponsoredProductsGlobalNegativeTargetingClause
   */
  adGroupId: string;
  /**
   *
   * @type {SponsoredProductsGlobalNegativeTargetingClauseExtendedData}
   * @memberof SponsoredProductsGlobalNegativeTargetingClause
   */
  extendedData?: SponsoredProductsGlobalNegativeTargetingClauseExtendedData;
}
/**
 *
 * @export
 * @interface SponsoredProductsGlobalNegativeTargetingClauseExtendedData
 */
export interface SponsoredProductsGlobalNegativeTargetingClauseExtendedData {
  /**
   *
   * @type {SponsoredProductsGlobalTargetingClauseServingStatus}
   * @memberof SponsoredProductsGlobalNegativeTargetingClauseExtendedData
   */
  servingStatus?: SponsoredProductsGlobalTargetingClauseServingStatus;
}
/**
 *
 * @export
 * @interface SponsoredProductsGlobalNegativeTargetingClauseFailureResponseItem
 */
export interface SponsoredProductsGlobalNegativeTargetingClauseFailureResponseItem {
  /**
   * the index of the NegativeTargetingClause in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsGlobalNegativeTargetingClauseFailureResponseItem
   */
  index: number;
  /**
   * A list of validation errors
   * @type {Array<SponsoredProductsNegativeTargetMutationError>}
   * @memberof SponsoredProductsGlobalNegativeTargetingClauseFailureResponseItem
   */
  errors?: Array<SponsoredProductsNegativeTargetMutationError>;
}
/**
 *
 * @export
 * @interface SponsoredProductsGlobalNegativeTargetingClauseSuccessResponseItem
 */
export interface SponsoredProductsGlobalNegativeTargetingClauseSuccessResponseItem {
  /**
   * the NegativeTargetingClause ID
   * @type {string}
   * @memberof SponsoredProductsGlobalNegativeTargetingClauseSuccessResponseItem
   */
  targetId?: string;
  /**
   * the index of the NegativeTargetingClause in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsGlobalNegativeTargetingClauseSuccessResponseItem
   */
  index: number;
  /**
   *
   * @type {SponsoredProductsGlobalNegativeTargetingClause}
   * @memberof SponsoredProductsGlobalNegativeTargetingClauseSuccessResponseItem
   */
  negativeTargetingClause?: SponsoredProductsGlobalNegativeTargetingClause;
}
/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsGlobalProductAServingStatusReason = {
  ProductAdDeliveringInAllMarketplaces: 'PRODUCT_AD_DELIVERING_IN_ALL_MARKETPLACES',
  AdvertiserPaymentFailureInAtLeastOneMarketplace: 'ADVERTISER_PAYMENT_FAILURE_IN_AT_LEAST_ONE_MARKETPLACE',
  AdvertiserPolicingPendingReviewInAtleastOneMarketplaces: 'ADVERTISER_POLICING_PENDING_REVIEW_IN_ATLEAST_ONE_MARKETPLACES',
  AdvertiserPolicingSuspendedInAtleastOneMarketplaces: 'ADVERTISER_POLICING_SUSPENDED_IN_ATLEAST_ONE_MARKETPLACES',
  AdvertiserPausedInAtleastOneMarketplaces: 'ADVERTISER_PAUSED_IN_ATLEAST_ONE_MARKETPLACES',
  AdvertiserArchivedInAtleastOneMarketplaces: 'ADVERTISER_ARCHIVED_IN_ATLEAST_ONE_MARKETPLACES',
  CampaignOutOfBudgetInAtLeastOneMarketplace: 'CAMPAIGN_OUT_OF_BUDGET_IN_AT_LEAST_ONE_MARKETPLACE',
  CampaignPausedInAtLeastOneMarketplace: 'CAMPAIGN_PAUSED_IN_AT_LEAST_ONE_MARKETPLACE',
  CampaignArchived: 'CAMPAIGN_ARCHIVED',
  CampaignIncompleteInAtLeastOneMarketplace: 'CAMPAIGN_INCOMPLETE_IN_AT_LEAST_ONE_MARKETPLACE',
  CampaignPendingStartDate: 'CAMPAIGN_PENDING_START_DATE',
  CampaignEnded: 'CAMPAIGN_ENDED',
  AdGroupPausedInAtLeastOneMarketplace: 'AD_GROUP_PAUSED_IN_AT_LEAST_ONE_MARKETPLACE',
  AdGroupArchived: 'AD_GROUP_ARCHIVED',
  AdGroupIncompleteInAtLeastOneMarketplace: 'AD_GROUP_INCOMPLETE_IN_AT_LEAST_ONE_MARKETPLACE',
  AdGroupCreationFailedInAtLeastOneMarketplace: 'AD_GROUP_CREATION_FAILED_IN_AT_LEAST_ONE_MARKETPLACE',
  AdGroupPolicingPendingReviewInAtLeastOneMarketplace: 'AD_GROUP_POLICING_PENDING_REVIEW_IN_AT_LEAST_ONE_MARKETPLACE',
  AdGroupPolicingCreativeRejectedInAtLeastOneMarketplace: 'AD_GROUP_POLICING_CREATIVE_REJECTED_IN_AT_LEAST_ONE_MARKETPLACE',
  AdGroupLowBidInAtLeastOneMarketplace: 'AD_GROUP_LOW_BID_IN_AT_LEAST_ONE_MARKETPLACE',
  AdArchived: 'AD_ARCHIVED',
  AdPausedInAtLeastOneMarketplace: 'AD_PAUSED_IN_AT_LEAST_ONE_MARKETPLACE',
  AdPolicingSuspendedInAtLeastOneMarketplace: 'AD_POLICING_SUSPENDED_IN_AT_LEAST_ONE_MARKETPLACE',
  AdMissingDecorationInAtLeastOneMarketplace: 'AD_MISSING_DECORATION_IN_AT_LEAST_ONE_MARKETPLACE',
  AdMissingImageInAtLeastOneMarketplace: 'AD_MISSING_IMAGE_IN_AT_LEAST_ONE_MARKETPLACE',
  AdPolicingPendingReviewInAtLeastOneMarketplace: 'AD_POLICING_PENDING_REVIEW_IN_AT_LEAST_ONE_MARKETPLACE',
  AdNotBuyableInAtLeastOneMarketplace: 'AD_NOT_BUYABLE_IN_AT_LEAST_ONE_MARKETPLACE',
  AdNotInBuyboxInAtLeastOneMarketplace: 'AD_NOT_IN_BUYBOX_IN_AT_LEAST_ONE_MARKETPLACE',
  AdOutOfStockInAtLeastOneMarketplace: 'AD_OUT_OF_STOCK_IN_AT_LEAST_ONE_MARKETPLACE',
  AdLandingPageNotAvailableInAtLeastOneMarketplace: 'AD_LANDING_PAGE_NOT_AVAILABLE_IN_AT_LEAST_ONE_MARKETPLACE',
  AdStatusUnavailableInAtLeastOneMarketplace: 'AD_STATUS_UNAVAILABLE_IN_AT_LEAST_ONE_MARKETPLACE',
  AdNoPurchasableOfferInAtLeastOneMarketplace: 'AD_NO_PURCHASABLE_OFFER_IN_AT_LEAST_ONE_MARKETPLACE',
  AdIneligibleInAtLeastOneMarketplace: 'AD_INELIGIBLE_IN_AT_LEAST_ONE_MARKETPLACE',
  AdCreationFailedInAtLeastOneMarketplace: 'AD_CREATION_FAILED_IN_AT_LEAST_ONE_MARKETPLACE',
} as const;

export type SponsoredProductsGlobalProductAServingStatusReason =
  (typeof SponsoredProductsGlobalProductAServingStatusReason)[keyof typeof SponsoredProductsGlobalProductAServingStatusReason];

/**
 *
 * @export
 * @interface SponsoredProductsGlobalProductAd
 */
export interface SponsoredProductsGlobalProductAd {
  /**
   * The product ad identifier.
   * @type {string}
   * @memberof SponsoredProductsGlobalProductAd
   */
  adId: string;
  /**
   * The campaign identifier.
   * @type {string}
   * @memberof SponsoredProductsGlobalProductAd
   */
  campaignId: string;
  /**
   * The custom text that is associated with this ad. Defined for custom text ads only.
   * @type {string}
   * @memberof SponsoredProductsGlobalProductAd
   */
  customText?: string;
  /**
   * Name for the product Ad
   * @type {string}
   * @memberof SponsoredProductsGlobalProductAd
   */
  name?: string;
  /**
   *
   * @type {SponsoredProductsGlobalProductIdentifiers}
   * @memberof SponsoredProductsGlobalProductAd
   */
  asin?: SponsoredProductsGlobalProductIdentifiers;
  /**
   *
   * @type {SponsoredProductsGlobalEntityState}
   * @memberof SponsoredProductsGlobalProductAd
   */
  state: SponsoredProductsGlobalEntityState;
  /**
   *
   * @type {SponsoredProductsGlobalProductIdentifiers}
   * @memberof SponsoredProductsGlobalProductAd
   */
  sku?: SponsoredProductsGlobalProductIdentifiers;
  /**
   * The ad group identifier.
   * @type {string}
   * @memberof SponsoredProductsGlobalProductAd
   */
  adGroupId: string;
  /**
   *
   * @type {SponsoredProductsGlobalProductAdExtendedData}
   * @memberof SponsoredProductsGlobalProductAd
   */
  extendedData?: SponsoredProductsGlobalProductAdExtendedData;
}
/**
 *
 * @export
 * @interface SponsoredProductsGlobalProductAdExtendedData
 */
export interface SponsoredProductsGlobalProductAdExtendedData {
  /**
   *
   * @type {SponsoredProductsGlobalProductAdServingStatus}
   * @memberof SponsoredProductsGlobalProductAdExtendedData
   */
  servingStatus?: SponsoredProductsGlobalProductAdServingStatus;
}
/**
 *
 * @export
 * @interface SponsoredProductsGlobalProductAdFailureResponseItem
 */
export interface SponsoredProductsGlobalProductAdFailureResponseItem {
  /**
   * the index of the product ad in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsGlobalProductAdFailureResponseItem
   */
  index: number;
  /**
   * A list of validation errors
   * @type {Array<SponsoredProductsProductAdMutationError>}
   * @memberof SponsoredProductsGlobalProductAdFailureResponseItem
   */
  errors?: Array<SponsoredProductsProductAdMutationError>;
}
/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsGlobalProductAdMarketplaceServingReason = {
  AdGroupStatusEnabledDetail: 'AD_GROUP_STATUS_ENABLED_DETAIL',
  AdGroupPausedDetail: 'AD_GROUP_PAUSED_DETAIL',
  AdGroupArchivedDetail: 'AD_GROUP_ARCHIVED_DETAIL',
  AdGroupIncompleteDetail: 'AD_GROUP_INCOMPLETE_DETAIL',
  AdGroupPolicingPendingReviewDetail: 'AD_GROUP_POLICING_PENDING_REVIEW_DETAIL',
  AdGroupPolicingCreativeRejectedDetail: 'AD_GROUP_POLICING_CREATIVE_REJECTED_DETAIL',
  AdGroupLowBidDetail: 'AD_GROUP_LOW_BID_DETAIL',
  CampaignStatusEnabledDetail: 'CAMPAIGN_STATUS_ENABLED_DETAIL',
  CampaignPausedDetail: 'CAMPAIGN_PAUSED_DETAIL',
  CampaignArchivedDetail: 'CAMPAIGN_ARCHIVED_DETAIL',
  PendingReviewDetail: 'PENDING_REVIEW_DETAIL',
  RejectedDetail: 'REJECTED_DETAIL',
  PendingStartDateDetail: 'PENDING_START_DATE_DETAIL',
  EndedDetail: 'ENDED_DETAIL',
  CampaignOutOfBudgetDetail: 'CAMPAIGN_OUT_OF_BUDGET_DETAIL',
  CampaignIncompleteDetail: 'CAMPAIGN_INCOMPLETE_DETAIL',
  AdvertiserPolicingSuspendedDetail: 'ADVERTISER_POLICING_SUSPENDED_DETAIL',
  AdvertiserPolicingPendingReviewDetail: 'ADVERTISER_POLICING_PENDING_REVIEW_DETAIL',
  AdvertiserArchivedDetail: 'ADVERTISER_ARCHIVED_DETAIL',
  AdvertiserPausedDetail: 'ADVERTISER_PAUSED_DETAIL',
  AdvertiserOutOfBudgetDetail: 'ADVERTISER_OUT_OF_BUDGET_DETAIL',
  AdvertiserPaymentFailureDetail: 'ADVERTISER_PAYMENT_FAILURE_DETAIL',
  AdStatusLiveDetail: 'AD_STATUS_LIVE_DETAIL',
  AdPolicingPendingReviewDetail: 'AD_POLICING_PENDING_REVIEW_DETAIL',
  AdPolicingSuspendedDetail: 'AD_POLICING_SUSPENDED_DETAIL',
  AdPausedDetail: 'AD_PAUSED_DETAIL',
  AdArchivedDetail: 'AD_ARCHIVED_DETAIL',
} as const;

export type SponsoredProductsGlobalProductAdMarketplaceServingReason =
  (typeof SponsoredProductsGlobalProductAdMarketplaceServingReason)[keyof typeof SponsoredProductsGlobalProductAdMarketplaceServingReason];

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsGlobalProductAdMarketplaceServingStatus = {
  AdGroupStatusEnabled: 'AD_GROUP_STATUS_ENABLED',
  AdGroupPaused: 'AD_GROUP_PAUSED',
  AdGroupArchived: 'AD_GROUP_ARCHIVED',
  AdGroupIncomplete: 'AD_GROUP_INCOMPLETE',
  AdGroupPolicingPendingReview: 'AD_GROUP_POLICING_PENDING_REVIEW',
  AdGroupPolicingCreativeRejected: 'AD_GROUP_POLICING_CREATIVE_REJECTED',
  AdGroupLowBid: 'AD_GROUP_LOW_BID',
  CampaignStatusEnabled: 'CAMPAIGN_STATUS_ENABLED',
  CampaignPaused: 'CAMPAIGN_PAUSED',
  CampaignArchived: 'CAMPAIGN_ARCHIVED',
  PendingReview: 'PENDING_REVIEW',
  Rejected: 'REJECTED',
  CampaignPendingStartDate: 'CAMPAIGN_PENDING_START_DATE',
  CampaignEnded: 'CAMPAIGN_ENDED',
  CampaignOutOfBudget: 'CAMPAIGN_OUT_OF_BUDGET',
  CampaignIncomplete: 'CAMPAIGN_INCOMPLETE',
  AdvertiserStatusEnabled: 'ADVERTISER_STATUS_ENABLED',
  AdvertiserPolicingSuspended: 'ADVERTISER_POLICING_SUSPENDED',
  AdvertiserPolicingPendingReview: 'ADVERTISER_POLICING_PENDING_REVIEW',
  AdvertiserArchived: 'ADVERTISER_ARCHIVED',
  AdvertiserPaused: 'ADVERTISER_PAUSED',
  AdvertiserPaymentFailure: 'ADVERTISER_PAYMENT_FAILURE',
  AdStatusLive: 'AD_STATUS_LIVE',
  AdPolicingPendingReview: 'AD_POLICING_PENDING_REVIEW',
  AdPolicingSuspended: 'AD_POLICING_SUSPENDED',
  AdPaused: 'AD_PAUSED',
  AdArchived: 'AD_ARCHIVED',
  AdCreationFailed: 'AD_CREATION_FAILED',
  StatusUnavailable: 'STATUS_UNAVAILABLE',
  AdMissingImage: 'AD_MISSING_IMAGE',
  AdMissingDecoration: 'AD_MISSING_DECORATION',
  AdNotBuyable: 'AD_NOT_BUYABLE',
  AdNotInBuybox: 'AD_NOT_IN_BUYBOX',
  AdOutOfStock: 'AD_OUT_OF_STOCK',
  AdLandingPageNotAvailable: 'AD_LANDING_PAGE_NOT_AVAILABLE',
  AdNoPurchasableOffer: 'AD_NO_PURCHASABLE_OFFER',
  AdIneligible: 'AD_INELIGIBLE',
  AdEligible: 'AD_ELIGIBLE',
} as const;

export type SponsoredProductsGlobalProductAdMarketplaceServingStatus =
  (typeof SponsoredProductsGlobalProductAdMarketplaceServingStatus)[keyof typeof SponsoredProductsGlobalProductAdMarketplaceServingStatus];

/**
 *
 * @export
 * @interface SponsoredProductsGlobalProductAdServingStatus
 */
export interface SponsoredProductsGlobalProductAdServingStatus {
  /**
   * Serving status details of Product Ad
   * @type {Array<SponsoredProductsGlobalProductAServingStatusReason>}
   * @memberof SponsoredProductsGlobalProductAdServingStatus
   */
  statusReasons?: Array<SponsoredProductsGlobalProductAServingStatusReason>;
  /**
   * The marketplace serving statuses.
   * @type {Array<SponsoredProductsMarketplaceProductAdServingStatus>}
   * @memberof SponsoredProductsGlobalProductAdServingStatus
   */
  marketplaceAdServingStatus?: Array<SponsoredProductsMarketplaceProductAdServingStatus>;
  /**
   *
   * @type {SponsoredProductsGlobalEntityServingStatus}
   * @memberof SponsoredProductsGlobalProductAdServingStatus
   */
  adServingStatus?: SponsoredProductsGlobalEntityServingStatus;
}

/**
 *
 * @export
 * @interface SponsoredProductsGlobalProductAdSuccessResponseItem
 */
export interface SponsoredProductsGlobalProductAdSuccessResponseItem {
  /**
   * the ProductAd ID
   * @type {string}
   * @memberof SponsoredProductsGlobalProductAdSuccessResponseItem
   */
  adId?: string;
  /**
   * The index in the original list from the request.
   * @type {number}
   * @memberof SponsoredProductsGlobalProductAdSuccessResponseItem
   */
  index: number;
  /**
   *
   * @type {SponsoredProductsGlobalProductAd}
   * @memberof SponsoredProductsGlobalProductAdSuccessResponseItem
   */
  productAd?: SponsoredProductsGlobalProductAd;
}
/**
 *
 * @export
 * @interface SponsoredProductsGlobalProductIdentifiers
 */
export interface SponsoredProductsGlobalProductIdentifiers {
  /**
   *
   * @type {Array<SponsoredProductsMarketplaceLevelProductIdentifier>}
   * @memberof SponsoredProductsGlobalProductIdentifiers
   */
  marketplaceSettings?: Array<SponsoredProductsMarketplaceLevelProductIdentifier>;
}
/**
 *
 * @export
 * @interface SponsoredProductsGlobalStoreSetting
 */
export interface SponsoredProductsGlobalStoreSetting {
  /**
   * Country code of source marketplace where seller has listed the product. Possible source country codes include US, UK, DE, JP, and AE.
   * @type {string}
   * @memberof SponsoredProductsGlobalStoreSetting
   */
  catalogSourceCountryCode?: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsGlobalTargetingClause
 */
export interface SponsoredProductsGlobalTargetingClause {
  /**
   * The targeting expression.
   * @type {Array<SponsoredProductsGlobalTargetingExpressionPredicate>}
   * @memberof SponsoredProductsGlobalTargetingClause
   */
  expression: Array<SponsoredProductsGlobalTargetingExpressionPredicate>;
  /**
   * The target identifier
   * @type {string}
   * @memberof SponsoredProductsGlobalTargetingClause
   */
  targetId: string;
  /**
   * The resolved targeting expression.
   * @type {Array<SponsoredProductsGlobalTargetingExpressionPredicate>}
   * @memberof SponsoredProductsGlobalTargetingClause
   */
  resolvedExpression: Array<SponsoredProductsGlobalTargetingExpressionPredicate>;
  /**
   * The identifier of the campaign to which this target is associated.
   * @type {string}
   * @memberof SponsoredProductsGlobalTargetingClause
   */
  campaignId: string;
  /**
   * Name for the targeting clause
   * @type {string}
   * @memberof SponsoredProductsGlobalTargetingClause
   */
  name?: string;
  /**
   *
   * @type {SponsoredProductsExpressionType}
   * @memberof SponsoredProductsGlobalTargetingClause
   */
  expressionType: SponsoredProductsExpressionType;
  /**
   *
   * @type {SponsoredProductsGlobalEntityState}
   * @memberof SponsoredProductsGlobalTargetingClause
   */
  state: SponsoredProductsGlobalEntityState;
  /**
   *
   * @type {SponsoredProductsGlobalBid}
   * @memberof SponsoredProductsGlobalTargetingClause
   */
  bid: SponsoredProductsGlobalBid;
  /**
   * The identifier of the ad group to which this target is associated.
   * @type {string}
   * @memberof SponsoredProductsGlobalTargetingClause
   */
  adGroupId: string;
  /**
   *
   * @type {SponsoredProductsGlobalTargetingClauseExtendedData}
   * @memberof SponsoredProductsGlobalTargetingClause
   */
  extendedData?: SponsoredProductsGlobalTargetingClauseExtendedData;
}

/**
 *
 * @export
 * @interface SponsoredProductsGlobalTargetingClauseExtendedData
 */
export interface SponsoredProductsGlobalTargetingClauseExtendedData {
  /**
   *
   * @type {SponsoredProductsGlobalTargetingClauseServingStatus}
   * @memberof SponsoredProductsGlobalTargetingClauseExtendedData
   */
  servingStatus?: SponsoredProductsGlobalTargetingClauseServingStatus;
}
/**
 *
 * @export
 * @interface SponsoredProductsGlobalTargetingClauseFailureResponseItem
 */
export interface SponsoredProductsGlobalTargetingClauseFailureResponseItem {
  /**
   * the index of the targetingClause in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsGlobalTargetingClauseFailureResponseItem
   */
  index: number;
  /**
   * A list of validation errors
   * @type {Array<SponsoredProductsTargetMutationError>}
   * @memberof SponsoredProductsGlobalTargetingClauseFailureResponseItem
   */
  errors?: Array<SponsoredProductsTargetMutationError>;
}
/**
 *
 * @export
 * @interface SponsoredProductsGlobalTargetingClauseServingStatus
 */
export interface SponsoredProductsGlobalTargetingClauseServingStatus {
  /**
   * Serving status details of adgroup
   * @type {Array<SponsoredProductsGlobalKeywordServingStatusReason>}
   * @memberof SponsoredProductsGlobalTargetingClauseServingStatus
   */
  statusReasons?: Array<SponsoredProductsGlobalKeywordServingStatusReason>;
  /**
   *
   * @type {SponsoredProductsGlobalEntityServingStatus}
   * @memberof SponsoredProductsGlobalTargetingClauseServingStatus
   */
  targetingClauseServingStatus?: SponsoredProductsGlobalEntityServingStatus;
  /**
   * The marketplace serving statuses.
   * @type {Array<SponsoredProductsMarketplaceTargetingClauseServingStatus>}
   * @memberof SponsoredProductsGlobalTargetingClauseServingStatus
   */
  marketplaceTargetingClauseServingStatus?: Array<SponsoredProductsMarketplaceTargetingClauseServingStatus>;
}

/**
 *
 * @export
 * @interface SponsoredProductsGlobalTargetingClauseSuccessResponseItem
 */
export interface SponsoredProductsGlobalTargetingClauseSuccessResponseItem {
  /**
   *
   * @type {SponsoredProductsGlobalTargetingClause}
   * @memberof SponsoredProductsGlobalTargetingClauseSuccessResponseItem
   */
  targetingClause?: SponsoredProductsGlobalTargetingClause;
  /**
   * the targetingClause ID
   * @type {string}
   * @memberof SponsoredProductsGlobalTargetingClauseSuccessResponseItem
   */
  targetId?: string;
  /**
   * the index of the targetingClause in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsGlobalTargetingClauseSuccessResponseItem
   */
  index: number;
}
/**
 *
 * @export
 * @interface SponsoredProductsGlobalTargetingExpressionPredicate
 */
export interface SponsoredProductsGlobalTargetingExpressionPredicate {
  /**
   * The marketplace settings for expression to be overridden for marketplace.
   * @type {Array<SponsoredProductsTargetingExpressionPredicateMarketValue>}
   * @memberof SponsoredProductsGlobalTargetingExpressionPredicate
   */
  marketplaceSettings?: Array<SponsoredProductsTargetingExpressionPredicateMarketValue>;
  /**
   *
   * @type {SponsoredProductsTargetingExpressionPredicateType}
   * @memberof SponsoredProductsGlobalTargetingExpressionPredicate
   */
  type?: SponsoredProductsTargetingExpressionPredicateType;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsInternalErrorErrorCode = {
  InternalError: 'INTERNAL_ERROR',
} as const;

export type SponsoredProductsInternalErrorErrorCode =
  (typeof SponsoredProductsInternalErrorErrorCode)[keyof typeof SponsoredProductsInternalErrorErrorCode];

/**
 * Error that represents non-retryable API service error. Sending the same request will result in another error.
 * @export
 * @interface SponsoredProductsInternalServerError
 */
export interface SponsoredProductsInternalServerError {
  /**
   *
   * @type {SponsoredProductsInternalServerErrorReason}
   * @memberof SponsoredProductsInternalServerError
   */
  reason: SponsoredProductsInternalServerErrorReason;
  /**
   *
   * @type {SponsoredProductsErrorCause}
   * @memberof SponsoredProductsInternalServerError
   */
  cause?: SponsoredProductsErrorCause;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsInternalServerError
   */
  message: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsInternalServerErrorCode = {
  InternalServerException: 'INTERNAL_SERVER_EXCEPTION',
} as const;

export type SponsoredProductsInternalServerErrorCode =
  (typeof SponsoredProductsInternalServerErrorCode)[keyof typeof SponsoredProductsInternalServerErrorCode];

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsInternalServerErrorReason = {
  InternalError: 'INTERNAL_ERROR',
} as const;

export type SponsoredProductsInternalServerErrorReason =
  (typeof SponsoredProductsInternalServerErrorReason)[keyof typeof SponsoredProductsInternalServerErrorReason];

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsInternalServerExceptionCode = {
  InternalServerException: 'INTERNAL_SERVER_EXCEPTION',
} as const;

export type SponsoredProductsInternalServerExceptionCode =
  (typeof SponsoredProductsInternalServerExceptionCode)[keyof typeof SponsoredProductsInternalServerExceptionCode];

/**
 *
 * @export
 * @interface SponsoredProductsInternalServerExceptionResponseContent
 */
export interface SponsoredProductsInternalServerExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInternalErrorErrorCode}
   * @memberof SponsoredProductsInternalServerExceptionResponseContent
   */
  code: SponsoredProductsInternalErrorErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsInternalServerExceptionResponseContent
   */
  message: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsInvalidArgumentErrorCode = {
  InvalidArgument: 'INVALID_ARGUMENT',
} as const;

export type SponsoredProductsInvalidArgumentErrorCode =
  (typeof SponsoredProductsInvalidArgumentErrorCode)[keyof typeof SponsoredProductsInvalidArgumentErrorCode];

/**
 * Errors related to ad eligibility
 * @export
 * @interface SponsoredProductsInvalidInputError
 */
export interface SponsoredProductsInvalidInputError {
  /**
   *
   * @type {SponsoredProductsInvalidInputErrorReason}
   * @memberof SponsoredProductsInvalidInputError
   */
  reason: SponsoredProductsInvalidInputErrorReason;
  /**
   *
   * @type {SponsoredProductsErrorCause}
   * @memberof SponsoredProductsInvalidInputError
   */
  cause?: SponsoredProductsErrorCause;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsInvalidInputError
   */
  message: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsInvalidInputErrorReason = {
  InvalidToken: 'INVALID_TOKEN',
} as const;

export type SponsoredProductsInvalidInputErrorReason =
  (typeof SponsoredProductsInvalidInputErrorReason)[keyof typeof SponsoredProductsInvalidInputErrorReason];

/**
 *
 * @export
 * @interface SponsoredProductsKeyword
 */
export interface SponsoredProductsKeyword {
  /**
   * The identifier of the keyword.
   * @type {string}
   * @memberof SponsoredProductsKeyword
   */
  keywordId: string;
  /**
   * The unlocalized keyword text in the preferred locale of the advertiser.
   * @type {string}
   * @memberof SponsoredProductsKeyword
   */
  nativeLanguageKeyword?: string;
  /**
   * The locale preference of the advertiser. For example, if the advertiser’s preferred language is Simplified Chinese, set the locale to zh_CN. Supported locales include: Simplified Chinese (locale: zh_CN) for US, UK and CA. English (locale: en_GB) for DE, FR, IT and ES.
   * @type {string}
   * @memberof SponsoredProductsKeyword
   */
  nativeLanguageLocale?: string;
  /**
   * The identifier of the campaign to which the keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsKeyword
   */
  campaignId: string;
  /**
   *
   * @type {SponsoredProductsMatchType}
   * @memberof SponsoredProductsKeyword
   */
  matchType: SponsoredProductsMatchType;
  /**
   *
   * @type {SponsoredProductsEntityState}
   * @memberof SponsoredProductsKeyword
   */
  state: SponsoredProductsEntityState;
  /**
   * Bid associated with this keyword. Applicable to biddable match types only. Keywords that do not have bid values in listKeywords will inherit the defaultBid from the adGroup level. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
   * @type {number}
   * @memberof SponsoredProductsKeyword
   */
  bid?: number;
  /**
   * The identifier of the ad group to which this keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsKeyword
   */
  adGroupId: string;
  /**
   * The keyword text.
   * @type {string}
   * @memberof SponsoredProductsKeyword
   */
  keywordText: string;
  /**
   *
   * @type {SponsoredProductsKeywordExtendedData}
   * @memberof SponsoredProductsKeyword
   */
  extendedData?: SponsoredProductsKeywordExtendedData;
}

/**
 *
 * @export
 * @interface SponsoredProductsKeywordAccessError
 */
export interface SponsoredProductsKeywordAccessError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsKeywordAccessError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsKeywordAccessErrorSelector}
   * @memberof SponsoredProductsKeywordAccessError
   */
  errorValue: SponsoredProductsKeywordAccessErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsKeywordAccessErrorSelector
 */
export interface SponsoredProductsKeywordAccessErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsKeywordAccessErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsKeywordAccessErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsLocaleError}
   * @memberof SponsoredProductsKeywordAccessErrorSelector
   */
  localeError?: SponsoredProductsLocaleError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsKeywordAccessErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsKeywordAccessErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsKeywordAccessErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsKeywordAccessErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsInvalidInputError}
   * @memberof SponsoredProductsKeywordAccessErrorSelector
   */
  invalidInputError?: SponsoredProductsInvalidInputError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsKeywordAccessErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in accessing campaign management entities
 * @export
 * @interface SponsoredProductsKeywordAccessExceptionResponseContent
 */
export interface SponsoredProductsKeywordAccessExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsKeywordAccessExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsKeywordAccessExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsKeywordAccessError>}
   * @memberof SponsoredProductsKeywordAccessExceptionResponseContent
   */
  errors?: Array<SponsoredProductsKeywordAccessError>;
}

/**
 *
 * @export
 * @interface SponsoredProductsKeywordExtendedData
 */
export interface SponsoredProductsKeywordExtendedData {
  /**
   * Last updated date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsKeywordExtendedData
   */
  lastUpdateDateTime?: string;
  /**
   *
   * @type {SponsoredProductsKeywordServingStatus}
   * @memberof SponsoredProductsKeywordExtendedData
   */
  servingStatus?: SponsoredProductsKeywordServingStatus;
  /**
   * The serving status reasons of the Keyword
   * @type {Array<SponsoredProductsKeywordServingStatusDetail>}
   * @memberof SponsoredProductsKeywordExtendedData
   */
  servingStatusDetails?: Array<SponsoredProductsKeywordServingStatusDetail>;
  /**
   * Creation date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsKeywordExtendedData
   */
  creationDateTime?: string;
}

/**
 *
 * @export
 * @interface SponsoredProductsKeywordFailureResponseItem
 */
export interface SponsoredProductsKeywordFailureResponseItem {
  /**
   * the index of the keyword in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsKeywordFailureResponseItem
   */
  index: number;
  /**
   * A list of validation errors
   * @type {Array<SponsoredProductsKeywordMutationError>}
   * @memberof SponsoredProductsKeywordFailureResponseItem
   */
  errors?: Array<SponsoredProductsKeywordMutationError>;
}
/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsKeywordMatchType = {
  Exact: 'EXACT',
  Phrase: 'PHRASE',
  Broad: 'BROAD',
} as const;

export type SponsoredProductsKeywordMatchType = (typeof SponsoredProductsKeywordMatchType)[keyof typeof SponsoredProductsKeywordMatchType];

/**
 *
 * @export
 * @interface SponsoredProductsKeywordMutationError
 */
export interface SponsoredProductsKeywordMutationError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsKeywordMutationError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsKeywordMutationErrorSelector}
   * @memberof SponsoredProductsKeywordMutationError
   */
  errorValue: SponsoredProductsKeywordMutationErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsKeywordMutationErrorSelector
 */
export interface SponsoredProductsKeywordMutationErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityStateError}
   * @memberof SponsoredProductsKeywordMutationErrorSelector
   */
  entityStateError?: SponsoredProductsEntityStateError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsKeywordMutationErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsBiddingError}
   * @memberof SponsoredProductsKeywordMutationErrorSelector
   */
  biddingError?: SponsoredProductsBiddingError;
  /**
   *
   * @type {SponsoredProductsDuplicateValueError}
   * @memberof SponsoredProductsKeywordMutationErrorSelector
   */
  duplicateValueError?: SponsoredProductsDuplicateValueError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsKeywordMutationErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsParentEntityError}
   * @memberof SponsoredProductsKeywordMutationErrorSelector
   */
  parentEntityError?: SponsoredProductsParentEntityError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsKeywordMutationErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsKeywordMutationErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsKeywordMutationErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsTargetingClauseSetupError}
   * @memberof SponsoredProductsKeywordMutationErrorSelector
   */
  targetingClauseSetupError?: SponsoredProductsTargetingClauseSetupError;
  /**
   *
   * @type {SponsoredProductsLocaleError}
   * @memberof SponsoredProductsKeywordMutationErrorSelector
   */
  localeError?: SponsoredProductsLocaleError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsKeywordMutationErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsBillingError}
   * @memberof SponsoredProductsKeywordMutationErrorSelector
   */
  billingError?: SponsoredProductsBillingError;
  /**
   *
   * @type {SponsoredProductsEntityQuotaError}
   * @memberof SponsoredProductsKeywordMutationErrorSelector
   */
  entityQuotaError?: SponsoredProductsEntityQuotaError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsKeywordMutationErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
}
/**
 * Exception resulting in mutating campaign management entities
 * @export
 * @interface SponsoredProductsKeywordMutationExceptionResponseContent
 */
export interface SponsoredProductsKeywordMutationExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsKeywordMutationExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsKeywordMutationExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsKeywordMutationError>}
   * @memberof SponsoredProductsKeywordMutationExceptionResponseContent
   */
  errors?: Array<SponsoredProductsKeywordMutationError>;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsKeywordServingStatus = {
  TargetingClauseStatusLive: 'TARGETING_CLAUSE_STATUS_LIVE',
  TargetingClausePolicingSuspended: 'TARGETING_CLAUSE_POLICING_SUSPENDED',
  TargetingClausePaused: 'TARGETING_CLAUSE_PAUSED',
  TargetingClauseArchived: 'TARGETING_CLAUSE_ARCHIVED',
  TargetingClauseBlocked: 'TARGETING_CLAUSE_BLOCKED',
  AdGroupStatusEnabled: 'AD_GROUP_STATUS_ENABLED',
  AdGroupPaused: 'AD_GROUP_PAUSED',
  AdGroupArchived: 'AD_GROUP_ARCHIVED',
  AdGroupIncomplete: 'AD_GROUP_INCOMPLETE',
  AdGroupPolicingPendingReview: 'AD_GROUP_POLICING_PENDING_REVIEW',
  AdGroupPolicingCreativeRejected: 'AD_GROUP_POLICING_CREATIVE_REJECTED',
  AdGroupLowBid: 'AD_GROUP_LOW_BID',
  CampaignStatusEnabled: 'CAMPAIGN_STATUS_ENABLED',
  CampaignPaused: 'CAMPAIGN_PAUSED',
  CampaignArchived: 'CAMPAIGN_ARCHIVED',
  PendingReview: 'PENDING_REVIEW',
  Rejected: 'REJECTED',
  PendingStartDate: 'PENDING_START_DATE',
  Ended: 'ENDED',
  CampaignOutOfBudget: 'CAMPAIGN_OUT_OF_BUDGET',
  CampaignIncomplete: 'CAMPAIGN_INCOMPLETE',
  PortfolioStatusEnabled: 'PORTFOLIO_STATUS_ENABLED',
  PortfolioPaused: 'PORTFOLIO_PAUSED',
  PortfolioArchived: 'PORTFOLIO_ARCHIVED',
  PortfolioOutOfBudget: 'PORTFOLIO_OUT_OF_BUDGET',
  PortfolioPendingStartDate: 'PORTFOLIO_PENDING_START_DATE',
  PortfolioEnded: 'PORTFOLIO_ENDED',
  AdvertiserPolicingSuspended: 'ADVERTISER_POLICING_SUSPENDED',
  AdvertiserPolicingPendingReview: 'ADVERTISER_POLICING_PENDING_REVIEW',
  AdvertiserArchived: 'ADVERTISER_ARCHIVED',
  AdvertiserPaused: 'ADVERTISER_PAUSED',
  AdvertiserOutOfBudget: 'ADVERTISER_OUT_OF_BUDGET',
  AdvertiserPaymentFailure: 'ADVERTISER_PAYMENT_FAILURE',
  AccountOutOfBudget: 'ACCOUNT_OUT_OF_BUDGET',
  Other: 'OTHER',
} as const;

export type SponsoredProductsKeywordServingStatus =
  (typeof SponsoredProductsKeywordServingStatus)[keyof typeof SponsoredProductsKeywordServingStatus];

/**
 *
 * @export
 * @interface SponsoredProductsKeywordServingStatusDetail
 */
export interface SponsoredProductsKeywordServingStatusDetail {
  /**
   *
   * @type {SponsoredProductsKeywordServingStatusReason}
   * @memberof SponsoredProductsKeywordServingStatusDetail
   */
  name?: SponsoredProductsKeywordServingStatusReason;
  /**
   * A URL with additional information about the status identifier.
   * @type {string}
   * @memberof SponsoredProductsKeywordServingStatusDetail
   */
  helpUrl?: string;
  /**
   * A human-readable description of the status identifier specified in the name field.
   * @type {string}
   * @memberof SponsoredProductsKeywordServingStatusDetail
   */
  message?: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsKeywordServingStatusReason = {
  TargetingClauseStatusLiveDetail: 'TARGETING_CLAUSE_STATUS_LIVE_DETAIL',
  TargetingClausePolicingSuspendedDetail: 'TARGETING_CLAUSE_POLICING_SUSPENDED_DETAIL',
  TargetingClausePausedDetail: 'TARGETING_CLAUSE_PAUSED_DETAIL',
  TargetingClauseArchivedDetail: 'TARGETING_CLAUSE_ARCHIVED_DETAIL',
  TargetingClauseBlockedDetail: 'TARGETING_CLAUSE_BLOCKED_DETAIL',
  AdGroupStatusEnabledDetail: 'AD_GROUP_STATUS_ENABLED_DETAIL',
  AdGroupPausedDetail: 'AD_GROUP_PAUSED_DETAIL',
  AdGroupArchivedDetail: 'AD_GROUP_ARCHIVED_DETAIL',
  AdGroupIncompleteDetail: 'AD_GROUP_INCOMPLETE_DETAIL',
  AdGroupPolicingPendingReviewDetail: 'AD_GROUP_POLICING_PENDING_REVIEW_DETAIL',
  AdGroupPolicingCreativeRejectedDetail: 'AD_GROUP_POLICING_CREATIVE_REJECTED_DETAIL',
  AdGroupLowBidDetail: 'AD_GROUP_LOW_BID_DETAIL',
  CampaignStatusEnabledDetail: 'CAMPAIGN_STATUS_ENABLED_DETAIL',
  CampaignPausedDetail: 'CAMPAIGN_PAUSED_DETAIL',
  CampaignArchivedDetail: 'CAMPAIGN_ARCHIVED_DETAIL',
  PendingReviewDetail: 'PENDING_REVIEW_DETAIL',
  RejectedDetail: 'REJECTED_DETAIL',
  PendingStartDateDetail: 'PENDING_START_DATE_DETAIL',
  EndedDetail: 'ENDED_DETAIL',
  CampaignOutOfBudgetDetail: 'CAMPAIGN_OUT_OF_BUDGET_DETAIL',
  CampaignIncompleteDetail: 'CAMPAIGN_INCOMPLETE_DETAIL',
  PortfolioStatusEnabledDetail: 'PORTFOLIO_STATUS_ENABLED_DETAIL',
  PortfolioPausedDetail: 'PORTFOLIO_PAUSED_DETAIL',
  PortfolioArchivedDetail: 'PORTFOLIO_ARCHIVED_DETAIL',
  PortfolioOutOfBudgetDetail: 'PORTFOLIO_OUT_OF_BUDGET_DETAIL',
  PortfolioPendingStartDateDetail: 'PORTFOLIO_PENDING_START_DATE_DETAIL',
  PortfolioEndedDetail: 'PORTFOLIO_ENDED_DETAIL',
  AdvertiserPolicingSuspendedDetail: 'ADVERTISER_POLICING_SUSPENDED_DETAIL',
  AdvertiserPolicingPendingReviewDetail: 'ADVERTISER_POLICING_PENDING_REVIEW_DETAIL',
  AdvertiserArchivedDetail: 'ADVERTISER_ARCHIVED_DETAIL',
  AdvertiserPausedDetail: 'ADVERTISER_PAUSED_DETAIL',
  AdvertiserOutOfBudgetDetail: 'ADVERTISER_OUT_OF_BUDGET_DETAIL',
  AdvertiserPaymentFailureDetail: 'ADVERTISER_PAYMENT_FAILURE_DETAIL',
  AccountOutOfBudgetDetail: 'ACCOUNT_OUT_OF_BUDGET_DETAIL',
  Other: 'OTHER',
} as const;

export type SponsoredProductsKeywordServingStatusReason =
  (typeof SponsoredProductsKeywordServingStatusReason)[keyof typeof SponsoredProductsKeywordServingStatusReason];

/**
 *
 * @export
 * @interface SponsoredProductsKeywordSuccessResponseItem
 */
export interface SponsoredProductsKeywordSuccessResponseItem {
  /**
   * the keyword ID
   * @type {string}
   * @memberof SponsoredProductsKeywordSuccessResponseItem
   */
  keywordId?: string;
  /**
   * the index of the keyword in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsKeywordSuccessResponseItem
   */
  index: number;
  /**
   *
   * @type {SponsoredProductsKeyword}
   * @memberof SponsoredProductsKeywordSuccessResponseItem
   */
  keyword?: SponsoredProductsKeyword;
}
/**
 * A keyword target.
 * @export
 * @interface SponsoredProductsKeywordTargetV2
 */
export interface SponsoredProductsKeywordTargetV2 {
  /**
   * The id of the keyword target.
   * @type {string}
   * @memberof SponsoredProductsKeywordTargetV2
   */
  keywordId?: string;
  /**
   * The id of the target promotion group.
   * @type {string}
   * @memberof SponsoredProductsKeywordTargetV2
   */
  targetPromotionGroupId?: string;
  /**
   * The match type (for KEYWORDs). One of EXACT, PHRASE, BROAD
   * @type {string}
   * @memberof SponsoredProductsKeywordTargetV2
   */
  matchType?: string;
  /**
   * The adGroupId of the destination manual-targeting adGroup where the target belongs.
   * @type {string}
   * @memberof SponsoredProductsKeywordTargetV2
   */
  destinationAdGroupId?: string;
  /**
   * The keyword text.
   * @type {string}
   * @memberof SponsoredProductsKeywordTargetV2
   */
  keywordText?: string;
}
/**
 * Filter by keywordText
 * @export
 * @interface SponsoredProductsKeywordTextFilter
 */
export interface SponsoredProductsKeywordTextFilter {
  /**
   *
   * @type {SponsoredProductsQueryTermMatchType}
   * @memberof SponsoredProductsKeywordTextFilter
   */
  queryTermMatchType: SponsoredProductsQueryTermMatchType;
  /**
   *
   * @type {Array<string>}
   * @memberof SponsoredProductsKeywordTextFilter
   */
  include?: Array<string>;
}

/**
 *
 * @export
 * @interface SponsoredProductsKeywordTextMarketplaceSettings
 */
export interface SponsoredProductsKeywordTextMarketplaceSettings {
  /**
   *
   * @type {SponsoredProductsMarketplace}
   * @memberof SponsoredProductsKeywordTextMarketplaceSettings
   */
  marketplace?: SponsoredProductsMarketplace;
  /**
   *
   * @type {string}
   * @memberof SponsoredProductsKeywordTextMarketplaceSettings
   */
  value: string;
}

/**
 *
 * @export
 * @interface SponsoredProductsListMatchedAdGroupsRequestContent
 */
export interface SponsoredProductsListMatchedAdGroupsRequestContent {
  /**
   * List of ad Ids for ASIN/SKU matches.
   * @type {Array<string>}
   * @memberof SponsoredProductsListMatchedAdGroupsRequestContent
   */
  adIds?: Array<string>;
  /**
   * The maximum number of results requested.
   * @type {number}
   * @memberof SponsoredProductsListMatchedAdGroupsRequestContent
   */
  maxResults?: number;
  /**
   * Token value allowing to navigate to the next or previous response page
   * @type {string}
   * @memberof SponsoredProductsListMatchedAdGroupsRequestContent
   */
  nextToken?: string;
  /**
   * The id of an adGroup. ASIN/SKU match will be based on all the ads this adGroup id contains if adIds are not provided.
   * @type {string}
   * @memberof SponsoredProductsListMatchedAdGroupsRequestContent
   */
  adGroupId?: string;
}
/**
 * Response object for querying adGroups with ASIN/SKU matches.
 * @export
 * @interface SponsoredProductsListMatchedAdGroupsResponseContent
 */
export interface SponsoredProductsListMatchedAdGroupsResponseContent {
  /**
   * The total number of results available.
   * @type {number}
   * @memberof SponsoredProductsListMatchedAdGroupsResponseContent
   */
  totalResults?: number;
  /**
   * To retrieve the next page of results, call the same operation and specify this token in the     request. If the nextToken field is empty, there are no further results.
   * @type {string}
   * @memberof SponsoredProductsListMatchedAdGroupsResponseContent
   */
  nextToken?: string;
  /**
   *
   * @type {Array<SponsoredProductsMatchedAdGroup>}
   * @memberof SponsoredProductsListMatchedAdGroupsResponseContent
   */
  matchedAdGroups?: Array<SponsoredProductsMatchedAdGroup>;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsAdGroupsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsAdGroupsRequestContent {
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsAdGroupsRequestContent
   */
  campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsEntityStateFilter}
   * @memberof SponsoredProductsListSponsoredProductsAdGroupsRequestContent
   */
  stateFilter?: SponsoredProductsEntityStateFilter;
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsAdGroupsRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsAdGroupsRequestContent
   */
  nextToken?: string;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsAdGroupsRequestContent
   */
  adGroupIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
   * @type {boolean}
   * @memberof SponsoredProductsListSponsoredProductsAdGroupsRequestContent
   */
  includeExtendedDataFields?: boolean;
  /**
   *
   * @type {SponsoredProductsNameFilter}
   * @memberof SponsoredProductsListSponsoredProductsAdGroupsRequestContent
   */
  nameFilter?: SponsoredProductsNameFilter;
  /**
   *
   * @type {SponsoredProductsTargetingType}
   * @memberof SponsoredProductsListSponsoredProductsAdGroupsRequestContent
   */
  campaignTargetingTypeFilter?: SponsoredProductsTargetingType;
}

/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsAdGroupsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsAdGroupsResponseContent {
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsAdGroupsResponseContent
   */
  totalResults?: number;
  /**
   *
   * @type {Array<SponsoredProductsAdGroup>}
   * @memberof SponsoredProductsListSponsoredProductsAdGroupsResponseContent
   */
  adGroups?: Array<SponsoredProductsAdGroup>;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsAdGroupsResponseContent
   */
  nextToken?: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent {
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent
   */
  campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent
   */
  campaignNegativeKeywordIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsEntityStateFilter}
   * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent
   */
  stateFilter?: SponsoredProductsEntityStateFilter;
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent
   */
  nextToken?: string;
  /**
   * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
   * @type {boolean}
   * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent
   */
  includeExtendedDataFields?: boolean;
  /**
   *
   * @type {SponsoredProductsKeywordTextFilter}
   * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent
   */
  campaignNegativeKeywordTextFilter?: SponsoredProductsKeywordTextFilter;
  /**
   * Restricts results to resources with the selected matchType
   * @type {Array<SponsoredProductsNegativeMatchType>}
   * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent
   */
  matchTypeFilter?: Array<SponsoredProductsNegativeMatchType>;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsResponseContent {
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsResponseContent
   */
  totalResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsResponseContent
   */
  nextToken?: string;
  /**
   *
   * @type {Array<SponsoredProductsCampaignNegativeKeyword>}
   * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsResponseContent
   */
  campaignNegativeKeywords?: Array<SponsoredProductsCampaignNegativeKeyword>;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent {
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent
   */
  campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent
   */
  campaignNegativeTargetIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsEntityStateFilter}
   * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent
   */
  stateFilter?: SponsoredProductsEntityStateFilter;
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent
   */
  nextToken?: string;
  /**
   *
   * @type {SponsoredProductsAsinFilter}
   * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent
   */
  asinFilter?: SponsoredProductsAsinFilter;
  /**
   * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
   * @type {boolean}
   * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent
   */
  includeExtendedDataFields?: boolean;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesResponseContent {
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesResponseContent
   */
  totalResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesResponseContent
   */
  nextToken?: string;
  /**
   *
   * @type {Array<SponsoredProductsCampaignNegativeTargetingClause>}
   * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesResponseContent
   */
  campaignNegativeTargetingClauses?: Array<SponsoredProductsCampaignNegativeTargetingClause>;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsCampaignsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsCampaignsRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsCampaignsRequestContent
   */
  campaignIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsCampaignsRequestContent
   */
  portfolioIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsEntityStateFilter}
   * @memberof SponsoredProductsListSponsoredProductsCampaignsRequestContent
   */
  stateFilter?: SponsoredProductsEntityStateFilter;
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsCampaignsRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsCampaignsRequestContent
   */
  nextToken?: string;
  /**
   * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
   * @type {boolean}
   * @memberof SponsoredProductsListSponsoredProductsCampaignsRequestContent
   */
  includeExtendedDataFields?: boolean;
  /**
   *
   * @type {SponsoredProductsNameFilter}
   * @memberof SponsoredProductsListSponsoredProductsCampaignsRequestContent
   */
  nameFilter?: SponsoredProductsNameFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsCampaignsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsCampaignsResponseContent {
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsCampaignsResponseContent
   */
  totalResults?: number;
  /**
   *
   * @type {Array<SponsoredProductsCampaign>}
   * @memberof SponsoredProductsListSponsoredProductsCampaignsResponseContent
   */
  campaigns?: Array<SponsoredProductsCampaign>;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsCampaignsResponseContent
   */
  nextToken?: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftAdGroupsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsDraftAdGroupsRequestContent {
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftAdGroupsRequestContent
   */
  campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsDraftAdGroupsRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsDraftAdGroupsRequestContent
   */
  nextToken?: string;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftAdGroupsRequestContent
   */
  adGroupIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
   * @type {boolean}
   * @memberof SponsoredProductsListSponsoredProductsDraftAdGroupsRequestContent
   */
  includeExtendedDataFields?: boolean;
  /**
   *
   * @type {SponsoredProductsNameFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftAdGroupsRequestContent
   */
  nameFilter?: SponsoredProductsNameFilter;
  /**
   *
   * @type {SponsoredProductsTargetingType}
   * @memberof SponsoredProductsListSponsoredProductsDraftAdGroupsRequestContent
   */
  campaignTargetingTypeFilter?: SponsoredProductsTargetingType;
}

/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftAdGroupsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsDraftAdGroupsResponseContent {
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsDraftAdGroupsResponseContent
   */
  totalResults?: number;
  /**
   *
   * @type {Array<SponsoredProductsDraftAdGroup>}
   * @memberof SponsoredProductsListSponsoredProductsDraftAdGroupsResponseContent
   */
  adGroups?: Array<SponsoredProductsDraftAdGroup>;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsDraftAdGroupsResponseContent
   */
  nextToken?: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsRequestContent {
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsRequestContent
   */
  campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsRequestContent
   */
  campaignNegativeKeywordIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsRequestContent
   */
  nextToken?: string;
  /**
   * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
   * @type {boolean}
   * @memberof SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsRequestContent
   */
  includeExtendedDataFields?: boolean;
  /**
   *
   * @type {SponsoredProductsKeywordTextFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsRequestContent
   */
  campaignNegativeKeywordTextFilter?: SponsoredProductsKeywordTextFilter;
  /**
   *
   * @type {SponsoredProductsNegativeMatchType}
   * @memberof SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsRequestContent
   */
  matchTypeFilter?: SponsoredProductsNegativeMatchType;
}

/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsResponseContent {
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsResponseContent
   */
  totalResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsResponseContent
   */
  nextToken?: string;
  /**
   *
   * @type {Array<SponsoredProductsDraftCampaignNegativeKeyword>}
   * @memberof SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsResponseContent
   */
  campaignNegativeKeywords?: Array<SponsoredProductsDraftCampaignNegativeKeyword>;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftCampaignsPromotionStatusRequestContent
 */
export interface SponsoredProductsListSponsoredProductsDraftCampaignsPromotionStatusRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsPromotionStatusRequestContent
   */
  campaignIdFilter: SponsoredProductsObjectIdFilter;
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsPromotionStatusRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsPromotionStatusRequestContent
   */
  nextToken?: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftCampaignsPromotionStatusResponseContent
 */
export interface SponsoredProductsListSponsoredProductsDraftCampaignsPromotionStatusResponseContent {
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsPromotionStatusResponseContent
   */
  totalResults?: number;
  /**
   *
   * @type {Array<SponsoredProductsDraftCampaignPromotionStatus>}
   * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsPromotionStatusResponseContent
   */
  campaignStatuses?: Array<SponsoredProductsDraftCampaignPromotionStatus>;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsPromotionStatusResponseContent
   */
  nextToken?: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftCampaignsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsDraftCampaignsRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsRequestContent
   */
  campaignIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsRequestContent
   */
  portfolioIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsRequestContent
   */
  nextToken?: string;
  /**
   * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
   * @type {boolean}
   * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsRequestContent
   */
  includeExtendedDataFields?: boolean;
  /**
   *
   * @type {SponsoredProductsNameFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsRequestContent
   */
  nameFilter?: SponsoredProductsNameFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftCampaignsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsDraftCampaignsResponseContent {
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsResponseContent
   */
  totalResults?: number;
  /**
   *
   * @type {Array<SponsoredProductsDraftCampaign>}
   * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsResponseContent
   */
  campaigns?: Array<SponsoredProductsDraftCampaign>;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsResponseContent
   */
  nextToken?: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftKeywordsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsDraftKeywordsRequestContent {
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftKeywordsRequestContent
   */
  campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsDraftKeywordsRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsDraftKeywordsRequestContent
   */
  nextToken?: string;
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftKeywordsRequestContent
   */
  adGroupIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
   * @type {boolean}
   * @memberof SponsoredProductsListSponsoredProductsDraftKeywordsRequestContent
   */
  includeExtendedDataFields?: boolean;
  /**
   * Restricts results to draft keywords associated with locale
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsDraftKeywordsRequestContent
   */
  locale?: string;
  /**
   *
   * @type {SponsoredProductsKeywordTextFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftKeywordsRequestContent
   */
  keywordTextFilter?: SponsoredProductsKeywordTextFilter;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftKeywordsRequestContent
   */
  keywordIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   * Only the draft keyword with match type that is in this list will be listed
   * @type {Array<SponsoredProductsMatchType>}
   * @memberof SponsoredProductsListSponsoredProductsDraftKeywordsRequestContent
   */
  matchTypeFilter?: Array<SponsoredProductsMatchType>;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftKeywordsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsDraftKeywordsResponseContent {
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsDraftKeywordsResponseContent
   */
  totalResults?: number;
  /**
   *
   * @type {Array<SponsoredProductsDraftKeyword>}
   * @memberof SponsoredProductsListSponsoredProductsDraftKeywordsResponseContent
   */
  keywords?: Array<SponsoredProductsDraftKeyword>;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsDraftKeywordsResponseContent
   */
  nextToken?: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftNegativeKeywordsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsDraftNegativeKeywordsRequestContent {
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftNegativeKeywordsRequestContent
   */
  campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsKeywordTextFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftNegativeKeywordsRequestContent
   */
  negativeKeywordTextFilter?: SponsoredProductsKeywordTextFilter;
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsDraftNegativeKeywordsRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsDraftNegativeKeywordsRequestContent
   */
  nextToken?: string;
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftNegativeKeywordsRequestContent
   */
  adGroupIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
   * @type {boolean}
   * @memberof SponsoredProductsListSponsoredProductsDraftNegativeKeywordsRequestContent
   */
  includeExtendedDataFields?: boolean;
  /**
   * The locale preference of the advertiser.
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsDraftNegativeKeywordsRequestContent
   */
  locale?: string;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftNegativeKeywordsRequestContent
   */
  negativeKeywordIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   * Restricts results to resources with the selected matchType
   * @type {Array<SponsoredProductsNegativeMatchType>}
   * @memberof SponsoredProductsListSponsoredProductsDraftNegativeKeywordsRequestContent
   */
  matchTypeFilter?: Array<SponsoredProductsNegativeMatchType>;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftNegativeKeywordsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsDraftNegativeKeywordsResponseContent {
  /**
   *
   * @type {Array<SponsoredProductsDraftNegativeKeyword>}
   * @memberof SponsoredProductsListSponsoredProductsDraftNegativeKeywordsResponseContent
   */
  negativeKeywords?: Array<SponsoredProductsDraftNegativeKeyword>;
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsDraftNegativeKeywordsResponseContent
   */
  totalResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsDraftNegativeKeywordsResponseContent
   */
  nextToken?: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesRequestContent
   */
  negativeTargetIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesRequestContent
   */
  campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesRequestContent
   */
  nextToken?: string;
  /**
   *
   * @type {SponsoredProductsAsinFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesRequestContent
   */
  asinFilter?: SponsoredProductsAsinFilter;
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesRequestContent
   */
  adGroupIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
   * @type {boolean}
   * @memberof SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesRequestContent
   */
  includeExtendedDataFields?: boolean;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesResponseContent {
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesResponseContent
   */
  totalResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesResponseContent
   */
  nextToken?: string;
  /**
   *
   * @type {Array<SponsoredProductsDraftNegativeTargetingClause>}
   * @memberof SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesResponseContent
   */
  negativeTargetingClauses?: Array<SponsoredProductsDraftNegativeTargetingClause>;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftProductAdsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsDraftProductAdsRequestContent {
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftProductAdsRequestContent
   */
  campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsDraftProductAdsRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsDraftProductAdsRequestContent
   */
  nextToken?: string;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftProductAdsRequestContent
   */
  adIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftProductAdsRequestContent
   */
  adGroupIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
   * @type {boolean}
   * @memberof SponsoredProductsListSponsoredProductsDraftProductAdsRequestContent
   */
  includeExtendedDataFields?: boolean;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftProductAdsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsDraftProductAdsResponseContent {
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsDraftProductAdsResponseContent
   */
  totalResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsDraftProductAdsResponseContent
   */
  nextToken?: string;
  /**
   *
   * @type {Array<SponsoredProductsDraftProductAd>}
   * @memberof SponsoredProductsListSponsoredProductsDraftProductAdsResponseContent
   */
  productAds?: Array<SponsoredProductsDraftProductAd>;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftTargetingClausesRequestContent
 */
export interface SponsoredProductsListSponsoredProductsDraftTargetingClausesRequestContent {
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftTargetingClausesRequestContent
   */
  campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsExpressionTypeFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftTargetingClausesRequestContent
   */
  expressionTypeFilter?: SponsoredProductsExpressionTypeFilter;
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsDraftTargetingClausesRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsDraftTargetingClausesRequestContent
   */
  nextToken?: string;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftTargetingClausesRequestContent
   */
  targetIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsAsinFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftTargetingClausesRequestContent
   */
  asinFilter?: SponsoredProductsAsinFilter;
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsDraftTargetingClausesRequestContent
   */
  adGroupIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
   * @type {boolean}
   * @memberof SponsoredProductsListSponsoredProductsDraftTargetingClausesRequestContent
   */
  includeExtendedDataFields?: boolean;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftTargetingClausesResponseContent
 */
export interface SponsoredProductsListSponsoredProductsDraftTargetingClausesResponseContent {
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsDraftTargetingClausesResponseContent
   */
  totalResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsDraftTargetingClausesResponseContent
   */
  nextToken?: string;
  /**
   *
   * @type {Array<SponsoredProductsDraftTargetingClause>}
   * @memberof SponsoredProductsListSponsoredProductsDraftTargetingClausesResponseContent
   */
  targetingClauses?: Array<SponsoredProductsDraftTargetingClause>;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalAdGroupsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalAdGroupsRequestContent {
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsGlobalAdGroupsRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsGlobalAdGroupsRequestContent
   */
  nextToken?: string;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsGlobalAdGroupsRequestContent
   */
  adGroupIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
   * @type {boolean}
   * @memberof SponsoredProductsListSponsoredProductsGlobalAdGroupsRequestContent
   */
  includeExtendedDataFields?: boolean;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalAdGroupsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalAdGroupsResponseContent {
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsGlobalAdGroupsResponseContent
   */
  totalResults?: number;
  /**
   *
   * @type {Array<SponsoredProductsGlobalAdGroup>}
   * @memberof SponsoredProductsListSponsoredProductsGlobalAdGroupsResponseContent
   */
  adGroups?: Array<SponsoredProductsGlobalAdGroup>;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsGlobalAdGroupsResponseContent
   */
  nextToken?: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent
   */
  campaignNegativeKeywordIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent
   */
  nextToken?: string;
  /**
   * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
   * @type {boolean}
   * @memberof SponsoredProductsListSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent
   */
  includeExtendedDataFields?: boolean;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent {
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent
   */
  totalResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent
   */
  nextToken?: string;
  /**
   *
   * @type {Array<SponsoredProductsGlobalCampaignNegativeKeyword>}
   * @memberof SponsoredProductsListSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent
   */
  campaignNegativeKeywords?: Array<SponsoredProductsGlobalCampaignNegativeKeyword>;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalCampaignsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalCampaignsRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsGlobalCampaignsRequestContent
   */
  campaignIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsGlobalCampaignsRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsGlobalCampaignsRequestContent
   */
  nextToken?: string;
  /**
   * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
   * @type {boolean}
   * @memberof SponsoredProductsListSponsoredProductsGlobalCampaignsRequestContent
   */
  includeExtendedDataFields?: boolean;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalCampaignsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalCampaignsResponseContent {
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsGlobalCampaignsResponseContent
   */
  totalResults?: number;
  /**
   *
   * @type {Array<SponsoredProductsGlobalCampaign>}
   * @memberof SponsoredProductsListSponsoredProductsGlobalCampaignsResponseContent
   */
  campaigns?: Array<SponsoredProductsGlobalCampaign>;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsGlobalCampaignsResponseContent
   */
  nextToken?: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalKeywordsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalKeywordsRequestContent {
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsGlobalKeywordsRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsGlobalKeywordsRequestContent
   */
  nextToken?: string;
  /**
   * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
   * @type {boolean}
   * @memberof SponsoredProductsListSponsoredProductsGlobalKeywordsRequestContent
   */
  includeExtendedDataFields?: boolean;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsGlobalKeywordsRequestContent
   */
  keywordIdFilter?: SponsoredProductsObjectIdFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalKeywordsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalKeywordsResponseContent {
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsGlobalKeywordsResponseContent
   */
  totalResults?: number;
  /**
   *
   * @type {Array<SponsoredProductsGlobalKeyword>}
   * @memberof SponsoredProductsListSponsoredProductsGlobalKeywordsResponseContent
   */
  keywords?: Array<SponsoredProductsGlobalKeyword>;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsGlobalKeywordsResponseContent
   */
  nextToken?: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalNegativeKeywordsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalNegativeKeywordsRequestContent {
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsGlobalNegativeKeywordsRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsGlobalNegativeKeywordsRequestContent
   */
  nextToken?: string;
  /**
   * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
   * @type {boolean}
   * @memberof SponsoredProductsListSponsoredProductsGlobalNegativeKeywordsRequestContent
   */
  includeExtendedDataFields?: boolean;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsGlobalNegativeKeywordsRequestContent
   */
  negativeKeywordIdFilter?: SponsoredProductsObjectIdFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalNegativeKeywordsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalNegativeKeywordsResponseContent {
  /**
   *
   * @type {Array<SponsoredProductsGlobalNegativeKeyword>}
   * @memberof SponsoredProductsListSponsoredProductsGlobalNegativeKeywordsResponseContent
   */
  negativeKeywords?: Array<SponsoredProductsGlobalNegativeKeyword>;
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsGlobalNegativeKeywordsResponseContent
   */
  totalResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsGlobalNegativeKeywordsResponseContent
   */
  nextToken?: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalNegativeTargetingClausesRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsGlobalNegativeTargetingClausesRequestContent
   */
  negativeTargetIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsGlobalNegativeTargetingClausesRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsGlobalNegativeTargetingClausesRequestContent
   */
  nextToken?: string;
  /**
   * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
   * @type {boolean}
   * @memberof SponsoredProductsListSponsoredProductsGlobalNegativeTargetingClausesRequestContent
   */
  includeExtendedDataFields?: boolean;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalNegativeTargetingClausesResponseContent {
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsGlobalNegativeTargetingClausesResponseContent
   */
  totalResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsGlobalNegativeTargetingClausesResponseContent
   */
  nextToken?: string;
  /**
   *
   * @type {Array<SponsoredProductsGlobalNegativeTargetingClause>}
   * @memberof SponsoredProductsListSponsoredProductsGlobalNegativeTargetingClausesResponseContent
   */
  negativeTargetingClauses?: Array<SponsoredProductsGlobalNegativeTargetingClause>;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalProductAdsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalProductAdsRequestContent {
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsGlobalProductAdsRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsGlobalProductAdsRequestContent
   */
  nextToken?: string;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsGlobalProductAdsRequestContent
   */
  adIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
   * @type {boolean}
   * @memberof SponsoredProductsListSponsoredProductsGlobalProductAdsRequestContent
   */
  includeExtendedDataFields?: boolean;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalProductAdsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalProductAdsResponseContent {
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsGlobalProductAdsResponseContent
   */
  totalResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsGlobalProductAdsResponseContent
   */
  nextToken?: string;
  /**
   *
   * @type {Array<SponsoredProductsGlobalProductAd>}
   * @memberof SponsoredProductsListSponsoredProductsGlobalProductAdsResponseContent
   */
  productAds?: Array<SponsoredProductsGlobalProductAd>;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalTargetingClausesRequestContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalTargetingClausesRequestContent {
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsGlobalTargetingClausesRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsGlobalTargetingClausesRequestContent
   */
  nextToken?: string;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsGlobalTargetingClausesRequestContent
   */
  targetIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
   * @type {boolean}
   * @memberof SponsoredProductsListSponsoredProductsGlobalTargetingClausesRequestContent
   */
  includeExtendedDataFields?: boolean;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalTargetingClausesResponseContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalTargetingClausesResponseContent {
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsGlobalTargetingClausesResponseContent
   */
  totalResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsGlobalTargetingClausesResponseContent
   */
  nextToken?: string;
  /**
   *
   * @type {Array<SponsoredProductsGlobalTargetingClause>}
   * @memberof SponsoredProductsListSponsoredProductsGlobalTargetingClausesResponseContent
   */
  targetingClauses?: Array<SponsoredProductsGlobalTargetingClause>;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsKeywordsPreviewRequestContent
 */
export interface SponsoredProductsListSponsoredProductsKeywordsPreviewRequestContent {
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsKeywordsPreviewRequestContent
   */
  campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsEntityStateFilter}
   * @memberof SponsoredProductsListSponsoredProductsKeywordsPreviewRequestContent
   */
  stateFilter?: SponsoredProductsEntityStateFilter;
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsKeywordsPreviewRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsKeywordsPreviewRequestContent
   */
  nextToken?: string;
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsKeywordsPreviewRequestContent
   */
  adGroupIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
   * @type {boolean}
   * @memberof SponsoredProductsListSponsoredProductsKeywordsPreviewRequestContent
   */
  includeExtendedDataFields?: boolean;
  /**
   * Restricts results to keywords associated with locale
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsKeywordsPreviewRequestContent
   */
  locale?: string;
  /**
   *
   * @type {SponsoredProductsKeywordTextFilter}
   * @memberof SponsoredProductsListSponsoredProductsKeywordsPreviewRequestContent
   */
  keywordTextFilter?: SponsoredProductsKeywordTextFilter;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsKeywordsPreviewRequestContent
   */
  keywordIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   * Only the keyword with match type that is in this list will be listed
   * @type {Array<SponsoredProductsMatchType>}
   * @memberof SponsoredProductsListSponsoredProductsKeywordsPreviewRequestContent
   */
  matchTypeFilter?: Array<SponsoredProductsMatchType>;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsKeywordsPreviewResponseContent
 */
export interface SponsoredProductsListSponsoredProductsKeywordsPreviewResponseContent {
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsKeywordsPreviewResponseContent
   */
  totalResults?: number;
  /**
   *
   * @type {Array<SponsoredProductsKeyword>}
   * @memberof SponsoredProductsListSponsoredProductsKeywordsPreviewResponseContent
   */
  keywords?: Array<SponsoredProductsKeyword>;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsKeywordsPreviewResponseContent
   */
  nextToken?: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsKeywordsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsKeywordsRequestContent {
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsKeywordsRequestContent
   */
  campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsEntityStateFilter}
   * @memberof SponsoredProductsListSponsoredProductsKeywordsRequestContent
   */
  stateFilter?: SponsoredProductsEntityStateFilter;
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsKeywordsRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsKeywordsRequestContent
   */
  nextToken?: string;
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsKeywordsRequestContent
   */
  adGroupIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
   * @type {boolean}
   * @memberof SponsoredProductsListSponsoredProductsKeywordsRequestContent
   */
  includeExtendedDataFields?: boolean;
  /**
   * Restricts results to keywords associated with locale
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsKeywordsRequestContent
   */
  locale?: string;
  /**
   *
   * @type {SponsoredProductsKeywordTextFilter}
   * @memberof SponsoredProductsListSponsoredProductsKeywordsRequestContent
   */
  keywordTextFilter?: SponsoredProductsKeywordTextFilter;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsKeywordsRequestContent
   */
  keywordIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   * Only the keyword with match type that is in this list will be listed
   * @type {Array<SponsoredProductsMatchType>}
   * @memberof SponsoredProductsListSponsoredProductsKeywordsRequestContent
   */
  matchTypeFilter?: Array<SponsoredProductsMatchType>;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsKeywordsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsKeywordsResponseContent {
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsKeywordsResponseContent
   */
  totalResults?: number;
  /**
   *
   * @type {Array<SponsoredProductsKeyword>}
   * @memberof SponsoredProductsListSponsoredProductsKeywordsResponseContent
   */
  keywords?: Array<SponsoredProductsKeyword>;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsKeywordsResponseContent
   */
  nextToken?: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewRequestContent
 */
export interface SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewRequestContent {
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewRequestContent
   */
  campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsEntityStateFilter}
   * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewRequestContent
   */
  stateFilter?: SponsoredProductsEntityStateFilter;
  /**
   *
   * @type {SponsoredProductsKeywordTextFilter}
   * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewRequestContent
   */
  negativeKeywordTextFilter?: SponsoredProductsKeywordTextFilter;
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewRequestContent
   */
  nextToken?: string;
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewRequestContent
   */
  adGroupIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
   * @type {boolean}
   * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewRequestContent
   */
  includeExtendedDataFields?: boolean;
  /**
   * Restricts results to negativeKeywords that match the specified locale.
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewRequestContent
   */
  locale?: string;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewRequestContent
   */
  negativeKeywordIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   * Only the negativeKeyword with the match type that is in this list will be listed
   * @type {Array<SponsoredProductsNegativeMatchType>}
   * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewRequestContent
   */
  matchTypeFilter?: Array<SponsoredProductsNegativeMatchType>;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewResponseContent
 */
export interface SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewResponseContent {
  /**
   *
   * @type {Array<SponsoredProductsNegativeKeyword>}
   * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewResponseContent
   */
  negativeKeywords?: Array<SponsoredProductsNegativeKeyword>;
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewResponseContent
   */
  totalResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewResponseContent
   */
  nextToken?: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent {
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent
   */
  campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsEntityStateFilter}
   * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent
   */
  stateFilter?: SponsoredProductsEntityStateFilter;
  /**
   *
   * @type {SponsoredProductsKeywordTextFilter}
   * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent
   */
  negativeKeywordTextFilter?: SponsoredProductsKeywordTextFilter;
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent
   */
  nextToken?: string;
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent
   */
  adGroupIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
   * @type {boolean}
   * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent
   */
  includeExtendedDataFields?: boolean;
  /**
   * Restricts results to negativeKeywords that match the specified locale.
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent
   */
  locale?: string;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent
   */
  negativeKeywordIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   * Only the negativeKeyword with the match type that is in this list will be listed
   * @type {Array<SponsoredProductsNegativeMatchType>}
   * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent
   */
  matchTypeFilter?: Array<SponsoredProductsNegativeMatchType>;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsNegativeKeywordsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsNegativeKeywordsResponseContent {
  /**
   *
   * @type {Array<SponsoredProductsNegativeKeyword>}
   * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsResponseContent
   */
  negativeKeywords?: Array<SponsoredProductsNegativeKeyword>;
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsResponseContent
   */
  totalResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsResponseContent
   */
  nextToken?: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewRequestContent
 */
export interface SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewRequestContent
   */
  negativeTargetIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewRequestContent
   */
  campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsEntityStateFilter}
   * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewRequestContent
   */
  stateFilter?: SponsoredProductsEntityStateFilter;
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewRequestContent
   */
  nextToken?: string;
  /**
   *
   * @type {SponsoredProductsAsinFilter}
   * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewRequestContent
   */
  asinFilter?: SponsoredProductsAsinFilter;
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewRequestContent
   */
  adGroupIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
   * @type {boolean}
   * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewRequestContent
   */
  includeExtendedDataFields?: boolean;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewResponseContent
 */
export interface SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewResponseContent {
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewResponseContent
   */
  totalResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewResponseContent
   */
  nextToken?: string;
  /**
   *
   * @type {Array<SponsoredProductsNegativeTargetingClause>}
   * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewResponseContent
   */
  negativeTargetingClauses?: Array<SponsoredProductsNegativeTargetingClause>;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent
   */
  negativeTargetIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent
   */
  campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsEntityStateFilter}
   * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent
   */
  stateFilter?: SponsoredProductsEntityStateFilter;
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent
   */
  nextToken?: string;
  /**
   *
   * @type {SponsoredProductsAsinFilter}
   * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent
   */
  asinFilter?: SponsoredProductsAsinFilter;
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent
   */
  adGroupIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
   * @type {boolean}
   * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent
   */
  includeExtendedDataFields?: boolean;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsListSponsoredProductsNegativeTargetingClausesResponseContent {
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesResponseContent
   */
  totalResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesResponseContent
   */
  nextToken?: string;
  /**
   *
   * @type {Array<SponsoredProductsNegativeTargetingClause>}
   * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesResponseContent
   */
  negativeTargetingClauses?: Array<SponsoredProductsNegativeTargetingClause>;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsProductAdsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsProductAdsRequestContent {
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsProductAdsRequestContent
   */
  campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsEntityStateFilter}
   * @memberof SponsoredProductsListSponsoredProductsProductAdsRequestContent
   */
  stateFilter?: SponsoredProductsEntityStateFilter;
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsProductAdsRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsProductAdsRequestContent
   */
  nextToken?: string;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsProductAdsRequestContent
   */
  adIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsProductAdsRequestContent
   */
  adGroupIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
   * @type {boolean}
   * @memberof SponsoredProductsListSponsoredProductsProductAdsRequestContent
   */
  includeExtendedDataFields?: boolean;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsProductAdsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsProductAdsResponseContent {
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsProductAdsResponseContent
   */
  totalResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsProductAdsResponseContent
   */
  nextToken?: string;
  /**
   *
   * @type {Array<SponsoredProductsProductAd>}
   * @memberof SponsoredProductsListSponsoredProductsProductAdsResponseContent
   */
  productAds?: Array<SponsoredProductsProductAd>;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsTargetingClausesPreviewRequestContent
 */
export interface SponsoredProductsListSponsoredProductsTargetingClausesPreviewRequestContent {
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsTargetingClausesPreviewRequestContent
   */
  campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsEntityStateFilter}
   * @memberof SponsoredProductsListSponsoredProductsTargetingClausesPreviewRequestContent
   */
  stateFilter?: SponsoredProductsEntityStateFilter;
  /**
   *
   * @type {SponsoredProductsExpressionTypeFilter}
   * @memberof SponsoredProductsListSponsoredProductsTargetingClausesPreviewRequestContent
   */
  expressionTypeFilter?: SponsoredProductsExpressionTypeFilter;
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsTargetingClausesPreviewRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsTargetingClausesPreviewRequestContent
   */
  nextToken?: string;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsTargetingClausesPreviewRequestContent
   */
  targetIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsAsinFilter}
   * @memberof SponsoredProductsListSponsoredProductsTargetingClausesPreviewRequestContent
   */
  asinFilter?: SponsoredProductsAsinFilter;
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsTargetingClausesPreviewRequestContent
   */
  adGroupIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
   * @type {boolean}
   * @memberof SponsoredProductsListSponsoredProductsTargetingClausesPreviewRequestContent
   */
  includeExtendedDataFields?: boolean;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsTargetingClausesPreviewResponseContent
 */
export interface SponsoredProductsListSponsoredProductsTargetingClausesPreviewResponseContent {
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsTargetingClausesPreviewResponseContent
   */
  totalResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsTargetingClausesPreviewResponseContent
   */
  nextToken?: string;
  /**
   *
   * @type {Array<SponsoredProductsTargetingClause>}
   * @memberof SponsoredProductsListSponsoredProductsTargetingClausesPreviewResponseContent
   */
  targetingClauses?: Array<SponsoredProductsTargetingClause>;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsTargetingClausesRequestContent
 */
export interface SponsoredProductsListSponsoredProductsTargetingClausesRequestContent {
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsTargetingClausesRequestContent
   */
  campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsEntityStateFilter}
   * @memberof SponsoredProductsListSponsoredProductsTargetingClausesRequestContent
   */
  stateFilter?: SponsoredProductsEntityStateFilter;
  /**
   *
   * @type {SponsoredProductsExpressionTypeFilter}
   * @memberof SponsoredProductsListSponsoredProductsTargetingClausesRequestContent
   */
  expressionTypeFilter?: SponsoredProductsExpressionTypeFilter;
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsTargetingClausesRequestContent
   */
  maxResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsTargetingClausesRequestContent
   */
  nextToken?: string;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsTargetingClausesRequestContent
   */
  targetIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsAsinFilter}
   * @memberof SponsoredProductsListSponsoredProductsTargetingClausesRequestContent
   */
  asinFilter?: SponsoredProductsAsinFilter;
  /**
   *
   * @type {SponsoredProductsReducedObjectIdFilter}
   * @memberof SponsoredProductsListSponsoredProductsTargetingClausesRequestContent
   */
  adGroupIdFilter?: SponsoredProductsReducedObjectIdFilter;
  /**
   * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
   * @type {boolean}
   * @memberof SponsoredProductsListSponsoredProductsTargetingClausesRequestContent
   */
  includeExtendedDataFields?: boolean;
}
/**
 *
 * @export
 * @interface SponsoredProductsListSponsoredProductsTargetingClausesResponseContent
 */
export interface SponsoredProductsListSponsoredProductsTargetingClausesResponseContent {
  /**
   * The total number of entities
   * @type {number}
   * @memberof SponsoredProductsListSponsoredProductsTargetingClausesResponseContent
   */
  totalResults?: number;
  /**
   * token value allowing to navigate to the next response page
   * @type {string}
   * @memberof SponsoredProductsListSponsoredProductsTargetingClausesResponseContent
   */
  nextToken?: string;
  /**
   *
   * @type {Array<SponsoredProductsTargetingClause>}
   * @memberof SponsoredProductsListSponsoredProductsTargetingClausesResponseContent
   */
  targetingClauses?: Array<SponsoredProductsTargetingClause>;
}
/**
 *
 * @export
 * @interface SponsoredProductsListTargetPromotionGroupTargetsInternalRequestContent
 */
export interface SponsoredProductsListTargetPromotionGroupTargetsInternalRequestContent {
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListTargetPromotionGroupTargetsInternalRequestContent
   */
  maxResults?: number;
  /**
   * Token value allowing to navigate to the next or previous response page
   * @type {string}
   * @memberof SponsoredProductsListTargetPromotionGroupTargetsInternalRequestContent
   */
  nextToken?: string;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListTargetPromotionGroupTargetsInternalRequestContent
   */
  targetPromotionGroupIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListTargetPromotionGroupTargetsInternalRequestContent
   */
  adGroupIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsApiGatewayContext}
   * @memberof SponsoredProductsListTargetPromotionGroupTargetsInternalRequestContent
   */
  apiGatewayContext: SponsoredProductsApiGatewayContext;
}
/**
 * Response object for querying target promotion group targets.
 * @export
 * @interface SponsoredProductsListTargetPromotionGroupTargetsInternalResponseContent
 */
export interface SponsoredProductsListTargetPromotionGroupTargetsInternalResponseContent {
  /**
   * The total number of results available.
   * @type {number}
   * @memberof SponsoredProductsListTargetPromotionGroupTargetsInternalResponseContent
   */
  totalResults?: number;
  /**
   * To retrieve the next page of results, call the same operation and specify this token in the     request. If the nextToken field is empty, there are no further results.
   * @type {string}
   * @memberof SponsoredProductsListTargetPromotionGroupTargetsInternalResponseContent
   */
  nextToken?: string;
  /**
   *
   * @type {Array<SponsoredProductsTarget>}
   * @memberof SponsoredProductsListTargetPromotionGroupTargetsInternalResponseContent
   */
  targets?: Array<SponsoredProductsTarget>;
}
/**
 * Request object for querying target promotion group targets.
 * @export
 * @interface SponsoredProductsListTargetPromotionGroupTargetsRequestContent
 */
export interface SponsoredProductsListTargetPromotionGroupTargetsRequestContent {
  /**
   * The maximum number of results requested.
   * @type {number}
   * @memberof SponsoredProductsListTargetPromotionGroupTargetsRequestContent
   */
  maxResults?: number;
  /**
   * Token value allowing to navigate to the next or previous response page
   * @type {string}
   * @memberof SponsoredProductsListTargetPromotionGroupTargetsRequestContent
   */
  nextToken?: string;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListTargetPromotionGroupTargetsRequestContent
   */
  targetPromotionGroupIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListTargetPromotionGroupTargetsRequestContent
   */
  adGroupIdFilter?: SponsoredProductsObjectIdFilter;
}
/**
 * Response object for querying target promotion group targets.
 * @export
 * @interface SponsoredProductsListTargetPromotionGroupTargetsResponseContent
 */
export interface SponsoredProductsListTargetPromotionGroupTargetsResponseContent {
  /**
   * The total number of results available.
   * @type {number}
   * @memberof SponsoredProductsListTargetPromotionGroupTargetsResponseContent
   */
  totalResults?: number;
  /**
   * To retrieve the next page of results, call the same operation and specify this token in the     request. If the nextToken field is empty, there are no further results.
   * @type {string}
   * @memberof SponsoredProductsListTargetPromotionGroupTargetsResponseContent
   */
  nextToken?: string;
  /**
   *
   * @type {Array<SponsoredProductsTarget>}
   * @memberof SponsoredProductsListTargetPromotionGroupTargetsResponseContent
   */
  targets?: Array<SponsoredProductsTarget>;
}
/**
 * Request object for querying target promotion group targets.
 * @export
 * @interface SponsoredProductsListTargetPromotionGroupTargetsV2RequestContent
 */
export interface SponsoredProductsListTargetPromotionGroupTargetsV2RequestContent {
  /**
   * The maximum number of results requested.
   * @type {number}
   * @memberof SponsoredProductsListTargetPromotionGroupTargetsV2RequestContent
   */
  maxResults?: number;
  /**
   * Token value allowing to navigate to the next or previous response page
   * @type {string}
   * @memberof SponsoredProductsListTargetPromotionGroupTargetsV2RequestContent
   */
  nextToken?: string;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListTargetPromotionGroupTargetsV2RequestContent
   */
  targetPromotionGroupIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListTargetPromotionGroupTargetsV2RequestContent
   */
  adGroupIdFilter?: SponsoredProductsObjectIdFilter;
}
/**
 * Response object for querying target promotion group targets.
 * @export
 * @interface SponsoredProductsListTargetPromotionGroupTargetsV2ResponseContent
 */
export interface SponsoredProductsListTargetPromotionGroupTargetsV2ResponseContent {
  /**
   * The total number of results available.
   * @type {number}
   * @memberof SponsoredProductsListTargetPromotionGroupTargetsV2ResponseContent
   */
  totalResults?: number;
  /**
   * To retrieve the next page of results, call the same operation and specify this token in the     request. If the nextToken field is empty, there are no further results.
   * @type {string}
   * @memberof SponsoredProductsListTargetPromotionGroupTargetsV2ResponseContent
   */
  nextToken?: string;
  /**
   *
   * @type {Array<SponsoredProductsTargetPromotionGroupTargetDetails>}
   * @memberof SponsoredProductsListTargetPromotionGroupTargetsV2ResponseContent
   */
  targets?: Array<SponsoredProductsTargetPromotionGroupTargetDetails>;
}
/**
 *
 * @export
 * @interface SponsoredProductsListTargetPromotionGroupsInternalRequestContent
 */
export interface SponsoredProductsListTargetPromotionGroupsInternalRequestContent {
  /**
   * Number of records to include in the paginated response. Defaults to max page size for given API
   * @type {number}
   * @memberof SponsoredProductsListTargetPromotionGroupsInternalRequestContent
   */
  maxResults?: number;
  /**
   * Token value allowing to navigate to the next or previous response page
   * @type {string}
   * @memberof SponsoredProductsListTargetPromotionGroupsInternalRequestContent
   */
  nextToken?: string;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListTargetPromotionGroupsInternalRequestContent
   */
  targetPromotionGroupIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListTargetPromotionGroupsInternalRequestContent
   */
  adGroupIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsApiGatewayContext}
   * @memberof SponsoredProductsListTargetPromotionGroupsInternalRequestContent
   */
  apiGatewayContext: SponsoredProductsApiGatewayContext;
}
/**
 * Response object for querying target promotion groups.
 * @export
 * @interface SponsoredProductsListTargetPromotionGroupsInternalResponseContent
 */
export interface SponsoredProductsListTargetPromotionGroupsInternalResponseContent {
  /**
   * The total number of results available.
   * @type {number}
   * @memberof SponsoredProductsListTargetPromotionGroupsInternalResponseContent
   */
  totalResults?: number;
  /**
   * To retrieve the next page of results, call the same operation and specify this token in the     request. If the nextToken field is empty, there are no further results.
   * @type {string}
   * @memberof SponsoredProductsListTargetPromotionGroupsInternalResponseContent
   */
  nextToken?: string;
  /**
   *
   * @type {Array<SponsoredProductsTargetPromotionGroup>}
   * @memberof SponsoredProductsListTargetPromotionGroupsInternalResponseContent
   */
  targetPromotionGroups?: Array<SponsoredProductsTargetPromotionGroup>;
}
/**
 * Request object for querying target promotion groups.
 * @export
 * @interface SponsoredProductsListTargetPromotionGroupsRequestContent
 */
export interface SponsoredProductsListTargetPromotionGroupsRequestContent {
  /**
   * The maximum number of results requested.
   * @type {number}
   * @memberof SponsoredProductsListTargetPromotionGroupsRequestContent
   */
  maxResults?: number;
  /**
   * Token value allowing to navigate to the next or previous response page
   * @type {string}
   * @memberof SponsoredProductsListTargetPromotionGroupsRequestContent
   */
  nextToken?: string;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListTargetPromotionGroupsRequestContent
   */
  targetPromotionGroupIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListTargetPromotionGroupsRequestContent
   */
  adGroupIdFilter?: SponsoredProductsObjectIdFilter;
}
/**
 * Response object for querying target promotion groups.
 * @export
 * @interface SponsoredProductsListTargetPromotionGroupsResponseContent
 */
export interface SponsoredProductsListTargetPromotionGroupsResponseContent {
  /**
   * The total number of results available.
   * @type {number}
   * @memberof SponsoredProductsListTargetPromotionGroupsResponseContent
   */
  totalResults?: number;
  /**
   * To retrieve the next page of results, call the same operation and specify this token in the     request. If the nextToken field is empty, there are no further results.
   * @type {string}
   * @memberof SponsoredProductsListTargetPromotionGroupsResponseContent
   */
  nextToken?: string;
  /**
   *
   * @type {Array<SponsoredProductsTargetPromotionGroup>}
   * @memberof SponsoredProductsListTargetPromotionGroupsResponseContent
   */
  targetPromotionGroups?: Array<SponsoredProductsTargetPromotionGroup>;
}
/**
 * Request object for querying target promotion groups.
 * @export
 * @interface SponsoredProductsListTargetPromotionGroupsV2RequestContent
 */
export interface SponsoredProductsListTargetPromotionGroupsV2RequestContent {
  /**
   * The maximum number of results requested.
   * @type {number}
   * @memberof SponsoredProductsListTargetPromotionGroupsV2RequestContent
   */
  maxResults?: number;
  /**
   * Token value allowing to navigate to the next or previous response page
   * @type {string}
   * @memberof SponsoredProductsListTargetPromotionGroupsV2RequestContent
   */
  nextToken?: string;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListTargetPromotionGroupsV2RequestContent
   */
  targetPromotionGroupIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListTargetPromotionGroupsV2RequestContent
   */
  sourceAdGroupIdFilter?: SponsoredProductsObjectIdFilter;
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsListTargetPromotionGroupsV2RequestContent
   */
  destinationAdGroupIdFilter?: SponsoredProductsObjectIdFilter;
}
/**
 * Response object for querying target promotion groups.
 * @export
 * @interface SponsoredProductsListTargetPromotionGroupsV2ResponseContent
 */
export interface SponsoredProductsListTargetPromotionGroupsV2ResponseContent {
  /**
   * The total number of results available.
   * @type {number}
   * @memberof SponsoredProductsListTargetPromotionGroupsV2ResponseContent
   */
  totalResults?: number;
  /**
   * To retrieve the next page of results, call the same operation and specify this token in the     request. If the nextToken field is empty, there are no further results.
   * @type {string}
   * @memberof SponsoredProductsListTargetPromotionGroupsV2ResponseContent
   */
  nextToken?: string;
  /**
   *
   * @type {Array<SponsoredProductsTargetPromotionGroupV2>}
   * @memberof SponsoredProductsListTargetPromotionGroupsV2ResponseContent
   */
  targetPromotionGroups?: Array<SponsoredProductsTargetPromotionGroupV2>;
}
/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsLocale = {
  EnAe: 'en_AE',
  DeDe: 'de_DE',
  ArEg: 'ar_EG',
  EsEs: 'es_ES',
  FrFr: 'fr_FR',
  EnGb: 'en_GB',
  ItIt: 'it_IT',
  NlNl: 'nl_NL',
  PlPl: 'pl_PL',
  EnSa: 'en_SA',
  SvSe: 'sv_SE',
  TrTr: 'tr_TR',
  EnAu: 'en_AU',
  EnIn: 'en_IN',
  JaJp: 'ja_JP',
  EnSg: 'en_SG',
  PtBr: 'pt_BR',
  EnCa: 'en_CA',
  EsMx: 'es_MX',
  EnUs: 'en_US',
} as const;

export type SponsoredProductsLocale = (typeof SponsoredProductsLocale)[keyof typeof SponsoredProductsLocale];

/**
 *
 * @export
 * @interface SponsoredProductsLocaleError
 */
export interface SponsoredProductsLocaleError {
  /**
   *
   * @type {SponsoredProductsLocaleErrorReason}
   * @memberof SponsoredProductsLocaleError
   */
  reason: SponsoredProductsLocaleErrorReason;
  /**
   *
   * @type {SponsoredProductsErrorCause}
   * @memberof SponsoredProductsLocaleError
   */
  cause?: SponsoredProductsErrorCause;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsLocaleError
   */
  message: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsLocaleErrorReason = {
  InvalidLocale: 'INVALID_LOCALE',
} as const;

export type SponsoredProductsLocaleErrorReason = (typeof SponsoredProductsLocaleErrorReason)[keyof typeof SponsoredProductsLocaleErrorReason];

/**
 * Errors being used to represent malformed values e.g. containing not allowed characters, not following patters etc
 * @export
 * @interface SponsoredProductsMalformedValueError
 */
export interface SponsoredProductsMalformedValueError {
  /**
   *
   * @type {SponsoredProductsMalformedValueErrorReason}
   * @memberof SponsoredProductsMalformedValueError
   */
  reason: SponsoredProductsMalformedValueErrorReason;
  /**
   * fragment of the value which is wrong
   * @type {string}
   * @memberof SponsoredProductsMalformedValueError
   */
  fragment?: string;
  /**
   *
   * @type {SponsoredProductsMarketplace}
   * @memberof SponsoredProductsMalformedValueError
   */
  marketplace?: SponsoredProductsMarketplace;
  /**
   *
   * @type {SponsoredProductsErrorCause}
   * @memberof SponsoredProductsMalformedValueError
   */
  cause?: SponsoredProductsErrorCause;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsMalformedValueError
   */
  message: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsMalformedValueErrorReason = {
  ForbiddenChars: 'FORBIDDEN_CHARS',
  PatternNotMatched: 'PATTERN_NOT_MATCHED',
  TooLong: 'TOO_LONG',
  TooShort: 'TOO_SHORT',
  LeadingOrTrailingWhitespace: 'LEADING_OR_TRAILING_WHITESPACE',
  Blank: 'BLANK',
} as const;

export type SponsoredProductsMalformedValueErrorReason =
  (typeof SponsoredProductsMalformedValueErrorReason)[keyof typeof SponsoredProductsMalformedValueErrorReason];

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsMarketplace = {
  Us: 'US',
  Ca: 'CA',
  Mx: 'MX',
  Br: 'BR',
  Uk: 'UK',
  De: 'DE',
  Fr: 'FR',
  Es: 'ES',
  It: 'IT',
  In: 'IN',
  Ae: 'AE',
  Sa: 'SA',
  Nl: 'NL',
  Pl: 'PL',
  Se: 'SE',
  Tr: 'TR',
  Eg: 'EG',
  Jp: 'JP',
  Au: 'AU',
  Sg: 'SG',
} as const;

export type SponsoredProductsMarketplace = (typeof SponsoredProductsMarketplace)[keyof typeof SponsoredProductsMarketplace];

/**
 *
 * @export
 * @interface SponsoredProductsMarketplaceAdGroupServingStatus
 */
export interface SponsoredProductsMarketplaceAdGroupServingStatus {
  /**
   *
   * @type {Array<SponsoredProductsGlobalAdGroupMarketplaceServingReason>}
   * @memberof SponsoredProductsMarketplaceAdGroupServingStatus
   */
  statusReasons?: Array<SponsoredProductsGlobalAdGroupMarketplaceServingReason>;
  /**
   *
   * @type {SponsoredProductsMarketplace}
   * @memberof SponsoredProductsMarketplaceAdGroupServingStatus
   */
  marketplace?: SponsoredProductsMarketplace;
  /**
   *
   * @type {SponsoredProductsGlobalAdGroupMarketplaceServingStatus}
   * @memberof SponsoredProductsMarketplaceAdGroupServingStatus
   */
  servingStatus: SponsoredProductsGlobalAdGroupMarketplaceServingStatus;
}

/**
 *
 * @export
 * @interface SponsoredProductsMarketplaceBid
 */
export interface SponsoredProductsMarketplaceBid {
  /**
   *
   * @type {SponsoredProductsMarketplace}
   * @memberof SponsoredProductsMarketplaceBid
   */
  marketplace?: SponsoredProductsMarketplace;
  /**
   * Monetary value
   * @type {number}
   * @memberof SponsoredProductsMarketplaceBid
   */
  bid?: number;
}

/**
 *
 * @export
 * @interface SponsoredProductsMarketplaceBudget
 */
export interface SponsoredProductsMarketplaceBudget {
  /**
   *
   * @type {SponsoredProductsMarketplace}
   * @memberof SponsoredProductsMarketplaceBudget
   */
  marketplace?: SponsoredProductsMarketplace;
  /**
   * Monetary value
   * @type {number}
   * @memberof SponsoredProductsMarketplaceBudget
   */
  budget: number;
}

/**
 *
 * @export
 * @interface SponsoredProductsMarketplaceCampaignServingStatus
 */
export interface SponsoredProductsMarketplaceCampaignServingStatus {
  /**
   *
   * @type {Array<SponsoredProductsGlobalCampaignMarketplaceServingReason>}
   * @memberof SponsoredProductsMarketplaceCampaignServingStatus
   */
  statusReasons?: Array<SponsoredProductsGlobalCampaignMarketplaceServingReason>;
  /**
   *
   * @type {SponsoredProductsMarketplace}
   * @memberof SponsoredProductsMarketplaceCampaignServingStatus
   */
  marketplace?: SponsoredProductsMarketplace;
  /**
   *
   * @type {SponsoredProductsGlobalCampaignMarketplaceServingStatus}
   * @memberof SponsoredProductsMarketplaceCampaignServingStatus
   */
  servingStatus: SponsoredProductsGlobalCampaignMarketplaceServingStatus;
}

/**
 *
 * @export
 * @interface SponsoredProductsMarketplaceLevelKeywordServingStatus
 */
export interface SponsoredProductsMarketplaceLevelKeywordServingStatus {
  /**
   *
   * @type {Array<SponsoredProductsGlobalKeywordMarketplaceServingStatusReason>}
   * @memberof SponsoredProductsMarketplaceLevelKeywordServingStatus
   */
  statusReasons?: Array<SponsoredProductsGlobalKeywordMarketplaceServingStatusReason>;
  /**
   *
   * @type {SponsoredProductsMarketplace}
   * @memberof SponsoredProductsMarketplaceLevelKeywordServingStatus
   */
  marketplace?: SponsoredProductsMarketplace;
  /**
   *
   * @type {SponsoredProductsGlobalKeywordMarketplaceServingStatus}
   * @memberof SponsoredProductsMarketplaceLevelKeywordServingStatus
   */
  servingStatus: SponsoredProductsGlobalKeywordMarketplaceServingStatus;
}

/**
 *
 * @export
 * @interface SponsoredProductsMarketplaceLevelProductIdentifier
 */
export interface SponsoredProductsMarketplaceLevelProductIdentifier {
  /**
   *
   * @type {string}
   * @memberof SponsoredProductsMarketplaceLevelProductIdentifier
   */
  identifier: string;
  /**
   *
   * @type {SponsoredProductsMarketplace}
   * @memberof SponsoredProductsMarketplaceLevelProductIdentifier
   */
  marketplace?: SponsoredProductsMarketplace;
}

/**
 *
 * @export
 * @interface SponsoredProductsMarketplaceProductAdServingStatus
 */
export interface SponsoredProductsMarketplaceProductAdServingStatus {
  /**
   *
   * @type {Array<SponsoredProductsGlobalProductAdMarketplaceServingReason>}
   * @memberof SponsoredProductsMarketplaceProductAdServingStatus
   */
  statusReasons?: Array<SponsoredProductsGlobalProductAdMarketplaceServingReason>;
  /**
   *
   * @type {SponsoredProductsMarketplace}
   * @memberof SponsoredProductsMarketplaceProductAdServingStatus
   */
  marketplace?: SponsoredProductsMarketplace;
  /**
   *
   * @type {SponsoredProductsGlobalProductAdMarketplaceServingStatus}
   * @memberof SponsoredProductsMarketplaceProductAdServingStatus
   */
  servingStatus: SponsoredProductsGlobalProductAdMarketplaceServingStatus;
}

/**
 *
 * @export
 * @interface SponsoredProductsMarketplaceState
 */
export interface SponsoredProductsMarketplaceState {
  /**
   *
   * @type {SponsoredProductsMarketplace}
   * @memberof SponsoredProductsMarketplaceState
   */
  marketplace: SponsoredProductsMarketplace;
  /**
   *
   * @type {SponsoredProductsEntityState}
   * @memberof SponsoredProductsMarketplaceState
   */
  state: SponsoredProductsEntityState;
}

/**
 *
 * @export
 * @interface SponsoredProductsMarketplaceTargetingClauseServingStatus
 */
export interface SponsoredProductsMarketplaceTargetingClauseServingStatus {
  /**
   *
   * @type {Array<SponsoredProductsGlobalKeywordMarketplaceServingStatusReason>}
   * @memberof SponsoredProductsMarketplaceTargetingClauseServingStatus
   */
  statusReasons?: Array<SponsoredProductsGlobalKeywordMarketplaceServingStatusReason>;
  /**
   *
   * @type {SponsoredProductsMarketplace}
   * @memberof SponsoredProductsMarketplaceTargetingClauseServingStatus
   */
  marketplace?: SponsoredProductsMarketplace;
  /**
   *
   * @type {SponsoredProductsGlobalKeywordMarketplaceServingStatus}
   * @memberof SponsoredProductsMarketplaceTargetingClauseServingStatus
   */
  servingStatus: SponsoredProductsGlobalKeywordMarketplaceServingStatus;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsMatchType = {
  Exact: 'EXACT',
  Phrase: 'PHRASE',
  Broad: 'BROAD',
  Other: 'OTHER',
} as const;

export type SponsoredProductsMatchType = (typeof SponsoredProductsMatchType)[keyof typeof SponsoredProductsMatchType];

/**
 * Response object of an adGroup that contains the same ASIN/SKUs as the AT adGroup in the request.
 * @export
 * @interface SponsoredProductsMatchedAdGroup
 */
export interface SponsoredProductsMatchedAdGroup {
  /**
   * The name of the adGroup.
   * @type {string}
   * @memberof SponsoredProductsMatchedAdGroup
   */
  adGroupName?: string;
  /**
   * The state of the campaign that the adGroup belongs to.
   * @type {string}
   * @memberof SponsoredProductsMatchedAdGroup
   */
  campaignState?: string;
  /**
   *
   * @type {SponsoredProductsCampaignTargetingType}
   * @memberof SponsoredProductsMatchedAdGroup
   */
  campaignTargetingType?: SponsoredProductsCampaignTargetingType;
  /**
   *
   * @type {SponsoredProductsAdGroupTargetingType}
   * @memberof SponsoredProductsMatchedAdGroup
   */
  adGroupTargetingType?: SponsoredProductsAdGroupTargetingType;
  /**
   * The unique identifier of the of the campaign that the adGroup belongs to.
   * @type {string}
   * @memberof SponsoredProductsMatchedAdGroup
   */
  campaignId?: string;
  /**
   * The state of the adGroup.
   * @type {string}
   * @memberof SponsoredProductsMatchedAdGroup
   */
  state?: string;
  /**
   * Name of the campaign that the adGroup belongs to.
   * @type {string}
   * @memberof SponsoredProductsMatchedAdGroup
   */
  campaignName?: string;
  /**
   * The unique identifier of the adGroup that contains the same ASIN/SKUs as the AT adGroup in the request.
   * @type {string}
   * @memberof SponsoredProductsMatchedAdGroup
   */
  adGroupId?: string;
  /**
   * The defualt bid of the adGroup.
   * @type {number}
   * @memberof SponsoredProductsMatchedAdGroup
   */
  defaultBid?: number;
  /**
   * The budget of the campaign that the adGroup belongs to.
   * @type {number}
   * @memberof SponsoredProductsMatchedAdGroup
   */
  budget?: number;
}

/**
 * Error describing missing values in API payloads
 * @export
 * @interface SponsoredProductsMissingValueError
 */
export interface SponsoredProductsMissingValueError {
  /**
   *
   * @type {SponsoredProductsMissingValueErrorReason}
   * @memberof SponsoredProductsMissingValueError
   */
  reason: SponsoredProductsMissingValueErrorReason;
  /**
   *
   * @type {SponsoredProductsMarketplace}
   * @memberof SponsoredProductsMissingValueError
   */
  marketplace?: SponsoredProductsMarketplace;
  /**
   *
   * @type {SponsoredProductsErrorCause}
   * @memberof SponsoredProductsMissingValueError
   */
  cause?: SponsoredProductsErrorCause;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsMissingValueError
   */
  message: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsMissingValueErrorReason = {
  MissingValue: 'MISSING_VALUE',
} as const;

export type SponsoredProductsMissingValueErrorReason =
  (typeof SponsoredProductsMissingValueErrorReason)[keyof typeof SponsoredProductsMissingValueErrorReason];

/**
 * Filter entities by name
 * @export
 * @interface SponsoredProductsNameFilter
 */
export interface SponsoredProductsNameFilter {
  /**
   *
   * @type {SponsoredProductsQueryTermMatchType}
   * @memberof SponsoredProductsNameFilter
   */
  queryTermMatchType?: SponsoredProductsQueryTermMatchType;
  /**
   *
   * @type {Array<string>}
   * @memberof SponsoredProductsNameFilter
   */
  include?: Array<string>;
}

/**
 *
 * @export
 * @interface SponsoredProductsNegativeKeyword
 */
export interface SponsoredProductsNegativeKeyword {
  /**
   * The identifier of the keyword.
   * @type {string}
   * @memberof SponsoredProductsNegativeKeyword
   */
  keywordId: string;
  /**
   * The unlocalized keyword text in the preferred locale of the advertiser
   * @type {string}
   * @memberof SponsoredProductsNegativeKeyword
   */
  nativeLanguageKeyword?: string;
  /**
   * The locale preference of the advertiser.
   * @type {string}
   * @memberof SponsoredProductsNegativeKeyword
   */
  nativeLanguageLocale?: string;
  /**
   * The identifier of the campaign to which the keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsNegativeKeyword
   */
  campaignId: string;
  /**
   *
   * @type {SponsoredProductsNegativeMatchType}
   * @memberof SponsoredProductsNegativeKeyword
   */
  matchType: SponsoredProductsNegativeMatchType;
  /**
   *
   * @type {SponsoredProductsEntityState}
   * @memberof SponsoredProductsNegativeKeyword
   */
  state: SponsoredProductsEntityState;
  /**
   * The identifier of the ad group to which this keyword is associated.
   * @type {string}
   * @memberof SponsoredProductsNegativeKeyword
   */
  adGroupId: string;
  /**
   * The keyword text.
   * @type {string}
   * @memberof SponsoredProductsNegativeKeyword
   */
  keywordText: string;
  /**
   *
   * @type {SponsoredProductsNegativeKeywordExtendedData}
   * @memberof SponsoredProductsNegativeKeyword
   */
  extendedData?: SponsoredProductsNegativeKeywordExtendedData;
}

/**
 *
 * @export
 * @interface SponsoredProductsNegativeKeywordAccessError
 */
export interface SponsoredProductsNegativeKeywordAccessError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsNegativeKeywordAccessError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsNegativeKeywordAccessErrorSelector}
   * @memberof SponsoredProductsNegativeKeywordAccessError
   */
  errorValue: SponsoredProductsNegativeKeywordAccessErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsNegativeKeywordAccessErrorSelector
 */
export interface SponsoredProductsNegativeKeywordAccessErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsNegativeKeywordAccessErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsNegativeKeywordAccessErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsNegativeKeywordAccessErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsNegativeKeywordAccessErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsNegativeKeywordAccessErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsNegativeKeywordAccessErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsInvalidInputError}
   * @memberof SponsoredProductsNegativeKeywordAccessErrorSelector
   */
  invalidInputError?: SponsoredProductsInvalidInputError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsNegativeKeywordAccessErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in accessing campaign management entities
 * @export
 * @interface SponsoredProductsNegativeKeywordAccessExceptionResponseContent
 */
export interface SponsoredProductsNegativeKeywordAccessExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsNegativeKeywordAccessExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsNegativeKeywordAccessExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsNegativeKeywordAccessError>}
   * @memberof SponsoredProductsNegativeKeywordAccessExceptionResponseContent
   */
  errors?: Array<SponsoredProductsNegativeKeywordAccessError>;
}

/**
 *
 * @export
 * @interface SponsoredProductsNegativeKeywordExtendedData
 */
export interface SponsoredProductsNegativeKeywordExtendedData {
  /**
   * Last updated date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsNegativeKeywordExtendedData
   */
  lastUpdateDateTime?: string;
  /**
   *
   * @type {SponsoredProductsKeywordServingStatus}
   * @memberof SponsoredProductsNegativeKeywordExtendedData
   */
  servingStatus?: SponsoredProductsKeywordServingStatus;
  /**
   * The serving status reasons of the Keyword
   * @type {Array<SponsoredProductsKeywordServingStatusDetail>}
   * @memberof SponsoredProductsNegativeKeywordExtendedData
   */
  servingStatusDetails?: Array<SponsoredProductsKeywordServingStatusDetail>;
  /**
   * Creation date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsNegativeKeywordExtendedData
   */
  creationDateTime?: string;
}

/**
 *
 * @export
 * @interface SponsoredProductsNegativeKeywordFailureResponseItem
 */
export interface SponsoredProductsNegativeKeywordFailureResponseItem {
  /**
   * the index of the negativeKeyword in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsNegativeKeywordFailureResponseItem
   */
  index: number;
  /**
   * A list of validation errors
   * @type {Array<SponsoredProductsNegativeKeywordMutationError>}
   * @memberof SponsoredProductsNegativeKeywordFailureResponseItem
   */
  errors?: Array<SponsoredProductsNegativeKeywordMutationError>;
}
/**
 *
 * @export
 * @interface SponsoredProductsNegativeKeywordMutationError
 */
export interface SponsoredProductsNegativeKeywordMutationError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsNegativeKeywordMutationError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsNegativeKeywordMutationErrorSelector}
   * @memberof SponsoredProductsNegativeKeywordMutationError
   */
  errorValue: SponsoredProductsNegativeKeywordMutationErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsNegativeKeywordMutationErrorSelector
 */
export interface SponsoredProductsNegativeKeywordMutationErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityStateError}
   * @memberof SponsoredProductsNegativeKeywordMutationErrorSelector
   */
  entityStateError?: SponsoredProductsEntityStateError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsNegativeKeywordMutationErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsDuplicateValueError}
   * @memberof SponsoredProductsNegativeKeywordMutationErrorSelector
   */
  duplicateValueError?: SponsoredProductsDuplicateValueError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsNegativeKeywordMutationErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsParentEntityError}
   * @memberof SponsoredProductsNegativeKeywordMutationErrorSelector
   */
  parentEntityError?: SponsoredProductsParentEntityError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsNegativeKeywordMutationErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsNegativeKeywordMutationErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsNegativeKeywordMutationErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsTargetingClauseSetupError}
   * @memberof SponsoredProductsNegativeKeywordMutationErrorSelector
   */
  targetingClauseSetupError?: SponsoredProductsTargetingClauseSetupError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsNegativeKeywordMutationErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsBillingError}
   * @memberof SponsoredProductsNegativeKeywordMutationErrorSelector
   */
  billingError?: SponsoredProductsBillingError;
  /**
   *
   * @type {SponsoredProductsEntityQuotaError}
   * @memberof SponsoredProductsNegativeKeywordMutationErrorSelector
   */
  entityQuotaError?: SponsoredProductsEntityQuotaError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsNegativeKeywordMutationErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
}
/**
 * Exception resulting in mutating campaign management entities
 * @export
 * @interface SponsoredProductsNegativeKeywordMutationExceptionResponseContent
 */
export interface SponsoredProductsNegativeKeywordMutationExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsNegativeKeywordMutationExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsNegativeKeywordMutationExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsNegativeKeywordMutationError>}
   * @memberof SponsoredProductsNegativeKeywordMutationExceptionResponseContent
   */
  errors?: Array<SponsoredProductsNegativeKeywordMutationError>;
}

/**
 *
 * @export
 * @interface SponsoredProductsNegativeKeywordSuccessResponseItem
 */
export interface SponsoredProductsNegativeKeywordSuccessResponseItem {
  /**
   * the index of the negativeKeyword in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsNegativeKeywordSuccessResponseItem
   */
  index: number;
  /**
   *
   * @type {SponsoredProductsNegativeKeyword}
   * @memberof SponsoredProductsNegativeKeywordSuccessResponseItem
   */
  negativeKeyword?: SponsoredProductsNegativeKeyword;
  /**
   * the negativeKeyword ID
   * @type {string}
   * @memberof SponsoredProductsNegativeKeywordSuccessResponseItem
   */
  negativeKeywordId?: string;
}
/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsNegativeMatchType = {
  NegativeExact: 'NEGATIVE_EXACT',
  NegativePhrase: 'NEGATIVE_PHRASE',
  NegativeBroad: 'NEGATIVE_BROAD',
  Other: 'OTHER',
} as const;

export type SponsoredProductsNegativeMatchType = (typeof SponsoredProductsNegativeMatchType)[keyof typeof SponsoredProductsNegativeMatchType];

/**
 *
 * @export
 * @interface SponsoredProductsNegativeTargetAccessError
 */
export interface SponsoredProductsNegativeTargetAccessError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsNegativeTargetAccessError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsNegativeTargetAccessErrorSelector}
   * @memberof SponsoredProductsNegativeTargetAccessError
   */
  errorValue: SponsoredProductsNegativeTargetAccessErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsNegativeTargetAccessErrorSelector
 */
export interface SponsoredProductsNegativeTargetAccessErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsNegativeTargetAccessErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsNegativeTargetAccessErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsNegativeTargetAccessErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsNegativeTargetAccessErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsNegativeTargetAccessErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsNegativeTargetAccessErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsInvalidInputError}
   * @memberof SponsoredProductsNegativeTargetAccessErrorSelector
   */
  invalidInputError?: SponsoredProductsInvalidInputError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsNegativeTargetAccessErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in accessing campaign management entities
 * @export
 * @interface SponsoredProductsNegativeTargetAccessExceptionResponseContent
 */
export interface SponsoredProductsNegativeTargetAccessExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsNegativeTargetAccessExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsNegativeTargetAccessExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsNegativeTargetAccessError>}
   * @memberof SponsoredProductsNegativeTargetAccessExceptionResponseContent
   */
  errors?: Array<SponsoredProductsNegativeTargetAccessError>;
}

/**
 *
 * @export
 * @interface SponsoredProductsNegativeTargetMutationError
 */
export interface SponsoredProductsNegativeTargetMutationError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsNegativeTargetMutationError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsNegativeTargetMutationErrorSelector}
   * @memberof SponsoredProductsNegativeTargetMutationError
   */
  errorValue: SponsoredProductsNegativeTargetMutationErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsNegativeTargetMutationErrorSelector
 */
export interface SponsoredProductsNegativeTargetMutationErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityStateError}
   * @memberof SponsoredProductsNegativeTargetMutationErrorSelector
   */
  entityStateError?: SponsoredProductsEntityStateError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsNegativeTargetMutationErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsDuplicateValueError}
   * @memberof SponsoredProductsNegativeTargetMutationErrorSelector
   */
  duplicateValueError?: SponsoredProductsDuplicateValueError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsNegativeTargetMutationErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsParentEntityError}
   * @memberof SponsoredProductsNegativeTargetMutationErrorSelector
   */
  parentEntityError?: SponsoredProductsParentEntityError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsNegativeTargetMutationErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsNegativeTargetMutationErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsNegativeTargetMutationErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsTargetingClauseSetupError}
   * @memberof SponsoredProductsNegativeTargetMutationErrorSelector
   */
  targetingClauseSetupError?: SponsoredProductsTargetingClauseSetupError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsNegativeTargetMutationErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsBillingError}
   * @memberof SponsoredProductsNegativeTargetMutationErrorSelector
   */
  billingError?: SponsoredProductsBillingError;
  /**
   *
   * @type {SponsoredProductsEntityQuotaError}
   * @memberof SponsoredProductsNegativeTargetMutationErrorSelector
   */
  entityQuotaError?: SponsoredProductsEntityQuotaError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsNegativeTargetMutationErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
}
/**
 * Exception resulting in mutating campaign management entities
 * @export
 * @interface SponsoredProductsNegativeTargetMutationExceptionResponseContent
 */
export interface SponsoredProductsNegativeTargetMutationExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsNegativeTargetMutationExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsNegativeTargetMutationExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsNegativeTargetMutationError>}
   * @memberof SponsoredProductsNegativeTargetMutationExceptionResponseContent
   */
  errors?: Array<SponsoredProductsNegativeTargetMutationError>;
}

/**
 *
 * @export
 * @interface SponsoredProductsNegativeTargetingClause
 */
export interface SponsoredProductsNegativeTargetingClause {
  /**
   * The NegativeTargeting expression.
   * @type {Array<SponsoredProductsNegativeTargetingExpressionPredicate>}
   * @memberof SponsoredProductsNegativeTargetingClause
   */
  expression: Array<SponsoredProductsNegativeTargetingExpressionPredicate>;
  /**
   * The target identifier
   * @type {string}
   * @memberof SponsoredProductsNegativeTargetingClause
   */
  targetId: string;
  /**
   * The resolved NegativeTargeting expression.
   * @type {Array<SponsoredProductsNegativeTargetingExpressionPredicate>}
   * @memberof SponsoredProductsNegativeTargetingClause
   */
  resolvedExpression: Array<SponsoredProductsNegativeTargetingExpressionPredicate>;
  /**
   * The identifier of the campaign to which this target is associated.
   * @type {string}
   * @memberof SponsoredProductsNegativeTargetingClause
   */
  campaignId: string;
  /**
   *
   * @type {SponsoredProductsEntityState}
   * @memberof SponsoredProductsNegativeTargetingClause
   */
  state: SponsoredProductsEntityState;
  /**
   * The identifier of the ad group to which this target is associated.
   * @type {string}
   * @memberof SponsoredProductsNegativeTargetingClause
   */
  adGroupId: string;
  /**
   *
   * @type {SponsoredProductsNegativeTargetingClauseExtendedData}
   * @memberof SponsoredProductsNegativeTargetingClause
   */
  extendedData?: SponsoredProductsNegativeTargetingClauseExtendedData;
}

/**
 *
 * @export
 * @interface SponsoredProductsNegativeTargetingClauseExtendedData
 */
export interface SponsoredProductsNegativeTargetingClauseExtendedData {
  /**
   * Last updated date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsNegativeTargetingClauseExtendedData
   */
  lastUpdateDateTime?: string;
  /**
   *
   * @type {SponsoredProductsKeywordServingStatus}
   * @memberof SponsoredProductsNegativeTargetingClauseExtendedData
   */
  servingStatus?: SponsoredProductsKeywordServingStatus;
  /**
   * The serving status reasons of the NegativeTargetingClause
   * @type {Array<SponsoredProductsKeywordServingStatusDetail>}
   * @memberof SponsoredProductsNegativeTargetingClauseExtendedData
   */
  servingStatusDetails?: Array<SponsoredProductsKeywordServingStatusDetail>;
  /**
   * Creation date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsNegativeTargetingClauseExtendedData
   */
  creationDateTime?: string;
}

/**
 *
 * @export
 * @interface SponsoredProductsNegativeTargetingClauseFailureResponseItem
 */
export interface SponsoredProductsNegativeTargetingClauseFailureResponseItem {
  /**
   * the index of the NegativeTargetingClause in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsNegativeTargetingClauseFailureResponseItem
   */
  index: number;
  /**
   * A list of validation errors
   * @type {Array<SponsoredProductsNegativeTargetMutationError>}
   * @memberof SponsoredProductsNegativeTargetingClauseFailureResponseItem
   */
  errors?: Array<SponsoredProductsNegativeTargetMutationError>;
}
/**
 *
 * @export
 * @interface SponsoredProductsNegativeTargetingClauseSuccessResponseItem
 */
export interface SponsoredProductsNegativeTargetingClauseSuccessResponseItem {
  /**
   * the NegativeTargetingClause ID
   * @type {string}
   * @memberof SponsoredProductsNegativeTargetingClauseSuccessResponseItem
   */
  targetId?: string;
  /**
   * the index of the NegativeTargetingClause in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsNegativeTargetingClauseSuccessResponseItem
   */
  index: number;
  /**
   *
   * @type {SponsoredProductsNegativeTargetingClause}
   * @memberof SponsoredProductsNegativeTargetingClauseSuccessResponseItem
   */
  negativeTargetingClause?: SponsoredProductsNegativeTargetingClause;
}
/**
 *
 * @export
 * @interface SponsoredProductsNegativeTargetingExpressionPredicate
 */
export interface SponsoredProductsNegativeTargetingExpressionPredicate {
  /**
   *
   * @type {SponsoredProductsNegativeTargetingExpressionPredicateType}
   * @memberof SponsoredProductsNegativeTargetingExpressionPredicate
   */
  type?: SponsoredProductsNegativeTargetingExpressionPredicateType;
  /**
   * The expression value
   * @type {string}
   * @memberof SponsoredProductsNegativeTargetingExpressionPredicate
   */
  value?: string;
}

/**
 * The type of nagative targeting expression. You can only specify values for the following predicates: | Predicate | Description | | --- | --- | | `ASIN_BRAND_SAME_AS` | Target the brand that is the same as the brand expressed. | | `ASIN_SAME_AS` | Target an ASIN that is the same as the ASIN expressed. | | `OTHER` | Other Type.   |
 * @export
 * @enum {string}
 */

export const SponsoredProductsNegativeTargetingExpressionPredicateType = {
  AsinBrandSameAs: 'ASIN_BRAND_SAME_AS',
  AsinSameAs: 'ASIN_SAME_AS',
  Other: 'OTHER',
} as const;

export type SponsoredProductsNegativeTargetingExpressionPredicateType =
  (typeof SponsoredProductsNegativeTargetingExpressionPredicateType)[keyof typeof SponsoredProductsNegativeTargetingExpressionPredicateType];

/**
 *
 * @export
 * @interface SponsoredProductsNewAdGroup
 */
export interface SponsoredProductsNewAdGroup {
  /**
   * The name of the new ad group.
   * @type {string}
   * @memberof SponsoredProductsNewAdGroup
   */
  adGroupName: string;
  /**
   * List of targeting types to be used for targets in the ad group. Supported types are KEYWORD and PRODUCT.
   * @type {Array<string>}
   * @memberof SponsoredProductsNewAdGroup
   */
  targetingTypes: Array<string>;
  /**
   * The default bid value that gets applied if no bid is provided for the target. For more information about bid constraints by marketplace,     see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
   * @type {number}
   * @memberof SponsoredProductsNewAdGroup
   */
  defaultBid: number;
}
/**
 *
 * @export
 * @interface SponsoredProductsNewCampaign
 */
export interface SponsoredProductsNewCampaign {
  /**
   * List of ad groups to be created inside the new campaign.
   * @type {Array<SponsoredProductsNewAdGroup>}
   * @memberof SponsoredProductsNewCampaign
   */
  adGroups: Array<SponsoredProductsNewAdGroup>;
  /**
   * The end date of the new target promotion group entities. The format of the date is YYYY-MM-DD.
   * @type {string}
   * @memberof SponsoredProductsNewCampaign
   */
  endDate?: string;
  /**
   * The campaign name.
   * @type {string}
   * @memberof SponsoredProductsNewCampaign
   */
  campaignName: string;
  /**
   *
   * @type {SponsoredProductsNewCampaignDynamicBidding}
   * @memberof SponsoredProductsNewCampaign
   */
  dynamicBidding?: SponsoredProductsNewCampaignDynamicBidding;
  /**
   * The start date of the new target promotion group entities. Default is today\'s date. The format of the date is YYYY-MM-DD.
   * @type {string}
   * @memberof SponsoredProductsNewCampaign
   */
  startDate?: string;
  /**
   *
   * @type {SponsoredProductsNewCampaignBudget}
   * @memberof SponsoredProductsNewCampaign
   */
  budget: SponsoredProductsNewCampaignBudget;
  /**
   * A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.
   * @type {{ [key: string]: string; }}
   * @memberof SponsoredProductsNewCampaign
   */
  tags?: { [key: string]: string };
}
/**
 * The budget for the campaigns in the target promotion group.
 * @export
 * @interface SponsoredProductsNewCampaignBudget
 */
export interface SponsoredProductsNewCampaignBudget {
  /**
   * DAILY.
   * @type {string}
   * @memberof SponsoredProductsNewCampaignBudget
   */
  budgetType: string;
  /**
   * The value of the budget.
   * @type {number}
   * @memberof SponsoredProductsNewCampaignBudget
   */
  budget: number;
}
/**
 * The request object for creating a new target promotion group with new campaigns.
 * @export
 * @interface SponsoredProductsNewCampaignDetails
 */
export interface SponsoredProductsNewCampaignDetails {
  /**
   * The end date of the new target promotion group entities. The format of the date is YYYY-MM-DD.
   * @type {string}
   * @memberof SponsoredProductsNewCampaignDetails
   */
  endDate?: string;
  /**
   * The name prefix to be used for the entities under the target promotion group. e.g. if the namePrefix     is ABC, we will create a keyword campaign with the name \'ABC-ManualKeywordTargeting-Campaign-AutoGenerated\'
   * @type {string}
   * @memberof SponsoredProductsNewCampaignDetails
   */
  namePrefix: string;
  /**
   *
   * @type {SponsoredProductsNewCampaignDynamicBidding}
   * @memberof SponsoredProductsNewCampaignDetails
   */
  dynamicBidding?: SponsoredProductsNewCampaignDynamicBidding;
  /**
   * The start date of the new target promotion group entities. Default is today\'s date. The format of the date is YYYY-MM-DD.
   * @type {string}
   * @memberof SponsoredProductsNewCampaignDetails
   */
  startDate?: string;
  /**
   * The default bid value that gets applied if no bid is provided for the target. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
   * @type {number}
   * @memberof SponsoredProductsNewCampaignDetails
   */
  defaultBid: number;
  /**
   *
   * @type {SponsoredProductsNewCampaignBudget}
   * @memberof SponsoredProductsNewCampaignDetails
   */
  budget: SponsoredProductsNewCampaignBudget;
  /**
   * A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.
   * @type {{ [key: string]: string; }}
   * @memberof SponsoredProductsNewCampaignDetails
   */
  tags?: { [key: string]: string };
}
/**
 * Specifies bidding controls.
 * @export
 * @interface SponsoredProductsNewCampaignDynamicBidding
 */
export interface SponsoredProductsNewCampaignDynamicBidding {
  /**
   * The product placement.
   * @type {Array<SponsoredProductsNewCampaignPlacementBidding>}
   * @memberof SponsoredProductsNewCampaignDynamicBidding
   */
  placementBidding?: Array<SponsoredProductsNewCampaignPlacementBidding>;
  /**
   * One of LEGACY_FOR_SALES, AUTO_FOR_SALES, MANUAL, RULE_BASED.
   * @type {string}
   * @memberof SponsoredProductsNewCampaignDynamicBidding
   */
  strategy: string;
}
/**
 * The product placement.
 * @export
 * @interface SponsoredProductsNewCampaignPlacementBidding
 */
export interface SponsoredProductsNewCampaignPlacementBidding {
  /**
   * The bidding placement percentage.
   * @type {number}
   * @memberof SponsoredProductsNewCampaignPlacementBidding
   */
  percentage: number;
  /**
   * The bidding placement. One of PLACEMENT_TOP, PLACEMENT_PRODUCT_PAGE, PLACEMENT_REST_OF_SEARCH.
   * @type {string}
   * @memberof SponsoredProductsNewCampaignPlacementBidding
   */
  placement: string;
}
/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsNotImplementedExceptionCode = {
  NotImplemented: 'NOT_IMPLEMENTED',
} as const;

export type SponsoredProductsNotImplementedExceptionCode =
  (typeof SponsoredProductsNotImplementedExceptionCode)[keyof typeof SponsoredProductsNotImplementedExceptionCode];

/**
 * Operation is not implemented.
 * @export
 * @interface SponsoredProductsNotImplementedExceptionResponseContent
 */
export interface SponsoredProductsNotImplementedExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsNotImplementedExceptionCode}
   * @memberof SponsoredProductsNotImplementedExceptionResponseContent
   */
  code?: SponsoredProductsNotImplementedExceptionCode;
  /**
   * A human-readable description of the response.
   * @type {string}
   * @memberof SponsoredProductsNotImplementedExceptionResponseContent
   */
  message?: string;
}

/**
 * Filter entities by the list of objectIds
 * @export
 * @interface SponsoredProductsObjectIdFilter
 */
export interface SponsoredProductsObjectIdFilter {
  /**
   *
   * @type {Array<string>}
   * @memberof SponsoredProductsObjectIdFilter
   */
  include: Array<string>;
}
/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsOffAmazonBudgetControlStrategy = {
  MaximizeReach: 'MAXIMIZE_REACH',
  MinimizeSpend: 'MINIMIZE_SPEND',
} as const;

export type SponsoredProductsOffAmazonBudgetControlStrategy =
  (typeof SponsoredProductsOffAmazonBudgetControlStrategy)[keyof typeof SponsoredProductsOffAmazonBudgetControlStrategy];

/**
 *
 * @export
 * @interface SponsoredProductsOffAmazonSettings
 */
export interface SponsoredProductsOffAmazonSettings {
  /**
   *
   * @type {SponsoredProductsOffAmazonBudgetControlStrategy}
   * @memberof SponsoredProductsOffAmazonSettings
   */
  offAmazonBudgetControlStrategy?: SponsoredProductsOffAmazonBudgetControlStrategy;
}

/**
 * Errors not related to any of the other error types
 * @export
 * @interface SponsoredProductsOtherError
 */
export interface SponsoredProductsOtherError {
  /**
   *
   * @type {SponsoredProductsOtherErrorReason}
   * @memberof SponsoredProductsOtherError
   */
  reason: SponsoredProductsOtherErrorReason;
  /**
   *
   * @type {SponsoredProductsMarketplace}
   * @memberof SponsoredProductsOtherError
   */
  marketplace?: SponsoredProductsMarketplace;
  /**
   *
   * @type {SponsoredProductsErrorCause}
   * @memberof SponsoredProductsOtherError
   */
  cause?: SponsoredProductsErrorCause;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsOtherError
   */
  message: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsOtherErrorReason = {
  OtherError: 'OTHER_ERROR',
} as const;

export type SponsoredProductsOtherErrorReason = (typeof SponsoredProductsOtherErrorReason)[keyof typeof SponsoredProductsOtherErrorReason];

/**
 * Errors related to parent entity
 * @export
 * @interface SponsoredProductsParentEntityError
 */
export interface SponsoredProductsParentEntityError {
  /**
   *
   * @type {SponsoredProductsParentEntityErrorReason}
   * @memberof SponsoredProductsParentEntityError
   */
  reason: SponsoredProductsParentEntityErrorReason;
  /**
   *
   * @type {SponsoredProductsErrorCause}
   * @memberof SponsoredProductsParentEntityError
   */
  cause?: SponsoredProductsErrorCause;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsParentEntityError
   */
  message: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsParentEntityErrorReason = {
  ParentEntityDoesNotTargetTheseMarketplaces: 'PARENT_ENTITY_DOES_NOT_TARGET_THESE_MARKETPLACES',
  ParentEntityArchived: 'PARENT_ENTITY_ARCHIVED',
  ParentEntityNotFound: 'PARENT_ENTITY_NOT_FOUND',
} as const;

export type SponsoredProductsParentEntityErrorReason =
  (typeof SponsoredProductsParentEntityErrorReason)[keyof typeof SponsoredProductsParentEntityErrorReason];

/**
 * You can enable controls to adjust your bid based on the placement location. Specify a location where you want to use bid controls. The percentage value set is the percentage of the original bid for which you want to have your bid adjustment increased. For example, a 50% Top of Search adjustment on a $1.00 bid would increase the bid to $1.50 for the opportunity to win a Top of Search placement. A further 100% Amazon Business adjustment would increase the bid to $3.00 for the Amazon Business Top of Search placement and to $2.00 for all other Amazon Business placements. The Amazon Business Bid Adjustment and Reporting for Sponsored Products will be coming soon to Bulksheets. | Predicate |  Placement | |-----------|------------| | `PLACEMENT_TOP` | Top of search (first page) | | `PLACEMENT_PRODUCT_PAGE` | Product pages | | `PLACEMENT_REST_OF_SEARCH` | Rest of the search | | `SITE_AMAZON_BUSINESS` | Site Amazon Business |
 * @export
 * @enum {string}
 */

export const SponsoredProductsPlacement = {
  PlacementTop: 'PLACEMENT_TOP',
  PlacementProductPage: 'PLACEMENT_PRODUCT_PAGE',
  PlacementRestOfSearch: 'PLACEMENT_REST_OF_SEARCH',
  SiteAmazonBusiness: 'SITE_AMAZON_BUSINESS',
} as const;

export type SponsoredProductsPlacement = (typeof SponsoredProductsPlacement)[keyof typeof SponsoredProductsPlacement];

/**
 *
 * @export
 * @interface SponsoredProductsPlacementBidding
 */
export interface SponsoredProductsPlacementBidding {
  /**
   *
   * @type {number}
   * @memberof SponsoredProductsPlacementBidding
   */
  percentage?: number;
  /**
   *
   * @type {SponsoredProductsPlacement}
   * @memberof SponsoredProductsPlacementBidding
   */
  placement?: SponsoredProductsPlacement;
}

/**
 *
 * @export
 * @interface SponsoredProductsProductAd
 */
export interface SponsoredProductsProductAd {
  /**
   *
   * @type {SponsoredProductsGlobalStoreSetting}
   * @memberof SponsoredProductsProductAd
   */
  globalStoreSetting?: SponsoredProductsGlobalStoreSetting;
  /**
   * The product ad identifier.
   * @type {string}
   * @memberof SponsoredProductsProductAd
   */
  adId: string;
  /**
   * The campaign identifier.
   * @type {string}
   * @memberof SponsoredProductsProductAd
   */
  campaignId: string;
  /**
   * The custom text that is associated with this ad. Defined for custom text ads only.
   * @type {string}
   * @memberof SponsoredProductsProductAd
   */
  customText?: string;
  /**
   * The ASIN associated with the product. Defined for vendors only.
   * @type {string}
   * @memberof SponsoredProductsProductAd
   */
  asin?: string;
  /**
   *
   * @type {SponsoredProductsEntityState}
   * @memberof SponsoredProductsProductAd
   */
  state: SponsoredProductsEntityState;
  /**
   * The SKU associated with the product. Defined for seller accounts only.
   * @type {string}
   * @memberof SponsoredProductsProductAd
   */
  sku?: string;
  /**
   * The ad group identifier.
   * @type {string}
   * @memberof SponsoredProductsProductAd
   */
  adGroupId: string;
  /**
   *
   * @type {SponsoredProductsProductAdExtendedData}
   * @memberof SponsoredProductsProductAd
   */
  extendedData?: SponsoredProductsProductAdExtendedData;
}

/**
 *
 * @export
 * @interface SponsoredProductsProductAdAccessError
 */
export interface SponsoredProductsProductAdAccessError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsProductAdAccessError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsProductAdAccessErrorSelector}
   * @memberof SponsoredProductsProductAdAccessError
   */
  errorValue: SponsoredProductsProductAdAccessErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsProductAdAccessErrorSelector
 */
export interface SponsoredProductsProductAdAccessErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsProductAdAccessErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsProductAdAccessErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsProductAdAccessErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsProductAdAccessErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsProductAdAccessErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsProductAdAccessErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsInvalidInputError}
   * @memberof SponsoredProductsProductAdAccessErrorSelector
   */
  invalidInputError?: SponsoredProductsInvalidInputError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsProductAdAccessErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in accessing campaign management entities
 * @export
 * @interface SponsoredProductsProductAdAccessExceptionResponseContent
 */
export interface SponsoredProductsProductAdAccessExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsProductAdAccessExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsProductAdAccessExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsProductAdAccessError>}
   * @memberof SponsoredProductsProductAdAccessExceptionResponseContent
   */
  errors?: Array<SponsoredProductsProductAdAccessError>;
}

/**
 *
 * @export
 * @interface SponsoredProductsProductAdExtendedData
 */
export interface SponsoredProductsProductAdExtendedData {
  /**
   * Last updated date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsProductAdExtendedData
   */
  lastUpdateDateTime?: string;
  /**
   *
   * @type {SponsoredProductsAdServingStatus}
   * @memberof SponsoredProductsProductAdExtendedData
   */
  servingStatus?: SponsoredProductsAdServingStatus;
  /**
   * The serving status reasons of the Ad
   * @type {Array<SponsoredProductsAdServingStatusDetail>}
   * @memberof SponsoredProductsProductAdExtendedData
   */
  servingStatusDetails?: Array<SponsoredProductsAdServingStatusDetail>;
  /**
   * Creation date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsProductAdExtendedData
   */
  creationDateTime?: string;
}

/**
 *
 * @export
 * @interface SponsoredProductsProductAdFailureResponseItem
 */
export interface SponsoredProductsProductAdFailureResponseItem {
  /**
   * the index of the product ad in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsProductAdFailureResponseItem
   */
  index: number;
  /**
   * A list of validation errors
   * @type {Array<SponsoredProductsProductAdMutationError>}
   * @memberof SponsoredProductsProductAdFailureResponseItem
   */
  errors?: Array<SponsoredProductsProductAdMutationError>;
}
/**
 *
 * @export
 * @interface SponsoredProductsProductAdMutationError
 */
export interface SponsoredProductsProductAdMutationError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsProductAdMutationError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsProductAdMutationErrorSelector}
   * @memberof SponsoredProductsProductAdMutationError
   */
  errorValue: SponsoredProductsProductAdMutationErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsProductAdMutationErrorSelector
 */
export interface SponsoredProductsProductAdMutationErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityStateError}
   * @memberof SponsoredProductsProductAdMutationErrorSelector
   */
  entityStateError?: SponsoredProductsEntityStateError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsProductAdMutationErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsAsinOwnershipError}
   * @memberof SponsoredProductsProductAdMutationErrorSelector
   */
  asinOwnershipError?: SponsoredProductsAsinOwnershipError;
  /**
   *
   * @type {SponsoredProductsDuplicateValueError}
   * @memberof SponsoredProductsProductAdMutationErrorSelector
   */
  duplicateValueError?: SponsoredProductsDuplicateValueError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsProductAdMutationErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsUnsupportedOperationError}
   * @memberof SponsoredProductsProductAdMutationErrorSelector
   */
  unsupportedOperationError?: SponsoredProductsUnsupportedOperationError;
  /**
   *
   * @type {SponsoredProductsParentEntityError}
   * @memberof SponsoredProductsProductAdMutationErrorSelector
   */
  parentEntityError?: SponsoredProductsParentEntityError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsProductAdMutationErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsProductAdMutationErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsProductAdMutationErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsProductAdMutationErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsProductIdentifierError}
   * @memberof SponsoredProductsProductAdMutationErrorSelector
   */
  productIdentifierError?: SponsoredProductsProductIdentifierError;
  /**
   *
   * @type {SponsoredProductsAdEligibilityError}
   * @memberof SponsoredProductsProductAdMutationErrorSelector
   */
  adEligibilityError?: SponsoredProductsAdEligibilityError;
  /**
   *
   * @type {SponsoredProductsBillingError}
   * @memberof SponsoredProductsProductAdMutationErrorSelector
   */
  billingError?: SponsoredProductsBillingError;
  /**
   *
   * @type {SponsoredProductsEntityQuotaError}
   * @memberof SponsoredProductsProductAdMutationErrorSelector
   */
  entityQuotaError?: SponsoredProductsEntityQuotaError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsProductAdMutationErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
}
/**
 * Exception resulting in mutating campaign management entities
 * @export
 * @interface SponsoredProductsProductAdMutationExceptionResponseContent
 */
export interface SponsoredProductsProductAdMutationExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsProductAdMutationExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsProductAdMutationExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsProductAdMutationError>}
   * @memberof SponsoredProductsProductAdMutationExceptionResponseContent
   */
  errors?: Array<SponsoredProductsProductAdMutationError>;
}

/**
 *
 * @export
 * @interface SponsoredProductsProductAdSuccessResponseItem
 */
export interface SponsoredProductsProductAdSuccessResponseItem {
  /**
   * the ProductAd ID
   * @type {string}
   * @memberof SponsoredProductsProductAdSuccessResponseItem
   */
  adId?: string;
  /**
   * The index in the original list from the request.
   * @type {number}
   * @memberof SponsoredProductsProductAdSuccessResponseItem
   */
  index: number;
  /**
   *
   * @type {SponsoredProductsProductAd}
   * @memberof SponsoredProductsProductAdSuccessResponseItem
   */
  productAd?: SponsoredProductsProductAd;
}
/**
 * Errors related to product identifiers
 * @export
 * @interface SponsoredProductsProductIdentifierError
 */
export interface SponsoredProductsProductIdentifierError {
  /**
   *
   * @type {SponsoredProductsProductIdentifierErrorReason}
   * @memberof SponsoredProductsProductIdentifierError
   */
  reason: SponsoredProductsProductIdentifierErrorReason;
  /**
   *
   * @type {SponsoredProductsMarketplace}
   * @memberof SponsoredProductsProductIdentifierError
   */
  marketplace?: SponsoredProductsMarketplace;
  /**
   *
   * @type {SponsoredProductsErrorCause}
   * @memberof SponsoredProductsProductIdentifierError
   */
  cause?: SponsoredProductsErrorCause;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsProductIdentifierError
   */
  message: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsProductIdentifierErrorReason = {
  InvalidSku: 'INVALID_SKU',
  InvalidAsin: 'INVALID_ASIN',
} as const;

export type SponsoredProductsProductIdentifierErrorReason =
  (typeof SponsoredProductsProductIdentifierErrorReason)[keyof typeof SponsoredProductsProductIdentifierErrorReason];

/**
 * A product target.
 * @export
 * @interface SponsoredProductsProductTargetV2
 */
export interface SponsoredProductsProductTargetV2 {
  /**
   * The id of the target promotion group.
   * @type {string}
   * @memberof SponsoredProductsProductTargetV2
   */
  targetPromotionGroupId?: string;
  /**
   * The id of the product target.
   * @type {string}
   * @memberof SponsoredProductsProductTargetV2
   */
  targetId?: string;
  /**
   * The the expression type (for PRODUCT). One of PRODUCT_EXACT, PRODUCT_SIMILAR
   * @type {string}
   * @memberof SponsoredProductsProductTargetV2
   */
  expressionType?: string;
  /**
   * The adGroupId of the destination manual-targeting adGroup where the target belongs.
   * @type {string}
   * @memberof SponsoredProductsProductTargetV2
   */
  destinationAdGroupId?: string;
  /**
   * The product ASIN of the target.
   * @type {string}
   * @memberof SponsoredProductsProductTargetV2
   */
  target?: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsPromoteSponsoredProductsDraftCampaignsRequestContent
 */
export interface SponsoredProductsPromoteSponsoredProductsDraftCampaignsRequestContent {
  /**
   *
   * @type {SponsoredProductsObjectIdFilter}
   * @memberof SponsoredProductsPromoteSponsoredProductsDraftCampaignsRequestContent
   */
  campaignIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 *
 * @export
 * @interface SponsoredProductsPromoteSponsoredProductsDraftCampaignsResponseContent
 */
export interface SponsoredProductsPromoteSponsoredProductsDraftCampaignsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkDraftCampaignOperationResponse}
   * @memberof SponsoredProductsPromoteSponsoredProductsDraftCampaignsResponseContent
   */
  campaigns: SponsoredProductsBulkDraftCampaignOperationResponse;
}
/**
 * Match type for query filters. | Value |  Description | |-----------|------------| | `BROAD_MATCH` | Match if the queried value contains the filter value (substring matching). Note: If queryTermMatchType is set to BROAD_MATCH, only matches for the first query included will be returned. | | `EXACT_MATCH` | Match if the queried value is exactly equivalent to the filter value. |
 * @export
 * @enum {string}
 */

export const SponsoredProductsQueryTermMatchType = {
  BroadMatch: 'BROAD_MATCH',
  ExactMatch: 'EXACT_MATCH',
} as const;

export type SponsoredProductsQueryTermMatchType = (typeof SponsoredProductsQueryTermMatchType)[keyof typeof SponsoredProductsQueryTermMatchType];

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsQuotaErrorReason = {
  QuotaExceeded: 'QUOTA_EXCEEDED',
  NonArchivedQuotaExceeded: 'NON_ARCHIVED_QUOTA_EXCEEDED',
} as const;

export type SponsoredProductsQuotaErrorReason = (typeof SponsoredProductsQuotaErrorReason)[keyof typeof SponsoredProductsQuotaErrorReason];

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsQuotaScope = {
  Account: 'ACCOUNT',
  ParentEntity: 'PARENT_ENTITY',
} as const;

export type SponsoredProductsQuotaScope = (typeof SponsoredProductsQuotaScope)[keyof typeof SponsoredProductsQuotaScope];

/**
 * Errors related to range constraints violations
 * @export
 * @interface SponsoredProductsRangeError
 */
export interface SponsoredProductsRangeError {
  /**
   *
   * @type {SponsoredProductsValueLimitErrorReason}
   * @memberof SponsoredProductsRangeError
   */
  reason: SponsoredProductsValueLimitErrorReason;
  /**
   *
   * @type {SponsoredProductsMarketplace}
   * @memberof SponsoredProductsRangeError
   */
  marketplace?: SponsoredProductsMarketplace;
  /**
   * allowed values
   * @type {Array<string>}
   * @memberof SponsoredProductsRangeError
   */
  allowed?: Array<string>;
  /**
   *
   * @type {SponsoredProductsErrorCause}
   * @memberof SponsoredProductsRangeError
   */
  cause?: SponsoredProductsErrorCause;
  /**
   * optional upper limit
   * @type {string}
   * @memberof SponsoredProductsRangeError
   */
  upperLimit?: string;
  /**
   * optional lower limit
   * @type {string}
   * @memberof SponsoredProductsRangeError
   */
  lowerLimit?: string;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsRangeError
   */
  message: string;
}

/**
 * Provides a reason for why this target is being recommended for harvesting
 * @export
 * @interface SponsoredProductsRecommendationReason
 */
export interface SponsoredProductsRecommendationReason {
  /**
   * The reason for the recommendation
   * @type {string}
   * @memberof SponsoredProductsRecommendationReason
   */
  reason?: string;
  /**
   * The data supporting the recommendation reason
   * @type {string}
   * @memberof SponsoredProductsRecommendationReason
   */
  data?: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsRecommendedTarget
 */
export interface SponsoredProductsRecommendedTarget {
  /**
   * The ID of an ad for which the targets are recommended
   * @type {string}
   * @memberof SponsoredProductsRecommendedTarget
   */
  adId?: string;
  /**
   * The ID of a campaign for which the targets are recommended
   * @type {string}
   * @memberof SponsoredProductsRecommendedTarget
   */
  campaignId?: string;
  /**
   *
   * @type {SponsoredProductsTargetType}
   * @memberof SponsoredProductsRecommendedTarget
   */
  targetType?: SponsoredProductsTargetType;
  /**
   * The ASIN of the product being advertised
   * @type {string}
   * @memberof SponsoredProductsRecommendedTarget
   */
  adAsin?: string;
  /**
   * The keyword or ASIN that is being targeted
   * @type {string}
   * @memberof SponsoredProductsRecommendedTarget
   */
  recommendedTarget?: string;
  /**
   * The ID of an ad group for which the targets are recommended
   * @type {string}
   * @memberof SponsoredProductsRecommendedTarget
   */
  adGroupId?: string;
  /**
   * Provides a list of reasons for why this target is being recommended for harvesting
   * @type {Array<SponsoredProductsRecommendationReason>}
   * @memberof SponsoredProductsRecommendedTarget
   */
  recommendationReasons?: Array<SponsoredProductsRecommendationReason>;
}

/**
 * Filter entities by the list of objectIds
 * @export
 * @interface SponsoredProductsReducedObjectIdFilter
 */
export interface SponsoredProductsReducedObjectIdFilter {
  /**
   *
   * @type {Array<string>}
   * @memberof SponsoredProductsReducedObjectIdFilter
   */
  include: Array<string>;
}
/**
 * Ad groups where targets can be promoted.
 * @export
 * @interface SponsoredProductsResponseAdGroup
 */
export interface SponsoredProductsResponseAdGroup {
  /**
   * The id of the ad group in the campaign.
   * @type {string}
   * @memberof SponsoredProductsResponseAdGroup
   */
  adGroupId?: string;
}
/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsSchemaValidationExceptionCode = {
  InvalidSchema: 'INVALID_SCHEMA',
} as const;

export type SponsoredProductsSchemaValidationExceptionCode =
  (typeof SponsoredProductsSchemaValidationExceptionCode)[keyof typeof SponsoredProductsSchemaValidationExceptionCode];

/**
 *
 * @export
 * @interface SponsoredProductsSchemaValidationExceptionResponseContent
 */
export interface SponsoredProductsSchemaValidationExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsSchemaValidationExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsSchemaValidationExceptionResponseContent
   */
  message: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsServiceUnavailableExceptionCode = {
  ServiceUnavailable: 'SERVICE_UNAVAILABLE',
} as const;

export type SponsoredProductsServiceUnavailableExceptionCode =
  (typeof SponsoredProductsServiceUnavailableExceptionCode)[keyof typeof SponsoredProductsServiceUnavailableExceptionCode];

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsServiceUnavailableExceptionErrorCode = {
  ServiceUnavailableException: 'SERVICE_UNAVAILABLE_EXCEPTION',
} as const;

export type SponsoredProductsServiceUnavailableExceptionErrorCode =
  (typeof SponsoredProductsServiceUnavailableExceptionErrorCode)[keyof typeof SponsoredProductsServiceUnavailableExceptionErrorCode];

/**
 * Server unable to process request. Please retry later.
 * @export
 * @interface SponsoredProductsServiceUnavailableExceptionResponseContent
 */
export interface SponsoredProductsServiceUnavailableExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsServiceUnavailableExceptionErrorCode}
   * @memberof SponsoredProductsServiceUnavailableExceptionResponseContent
   */
  code: SponsoredProductsServiceUnavailableExceptionErrorCode;
  /**
   *
   * @type {string}
   * @memberof SponsoredProductsServiceUnavailableExceptionResponseContent
   */
  message: string;
}

/**
 *
 * @export
 * @interface SponsoredProductsShopperCohortBidding
 */
export interface SponsoredProductsShopperCohortBidding {
  /**
   *
   * @type {SponsoredProductsShopperCohortType}
   * @memberof SponsoredProductsShopperCohortBidding
   */
  shopperCohortType: SponsoredProductsShopperCohortType;
  /**
   *
   * @type {number}
   * @memberof SponsoredProductsShopperCohortBidding
   */
  percentage?: number;
  /**
   * A list of Audience Segments. Shoppers belonging to these segments will be selected for applying the bid adjustments. This is a required field when using \"AUDIENCE_SEGMENT\" option for `shopperCohortType`.
   * @type {Array<SponsoredProductsAudienceSegment>}
   * @memberof SponsoredProductsShopperCohortBidding
   */
  audienceSegments?: Array<SponsoredProductsAudienceSegment>;
}

/**
 * This field specifies the type of shopper cohort used to apply bid adjustments. `AUDIENCE_SEGMENT` is the only supported type currently. | Value |  Description | |-----------|------------| | `AUDIENCE_SEGMENT` | A predefined list of the shopper ids. |
 * @export
 * @enum {string}
 */

export const SponsoredProductsShopperCohortType = {
  AudienceSegment: 'AUDIENCE_SEGMENT',
} as const;

export type SponsoredProductsShopperCohortType = (typeof SponsoredProductsShopperCohortType)[keyof typeof SponsoredProductsShopperCohortType];

/**
 * Restrict the ad to a particular site. If the value is absent (ie null), it means no site restrictions and defaults to current Sponsored Products campaign behavior. This field is coming up and is not ready for use at the moment.  | Value | Description | | ---------------------- | -------------------- | | `AMAZON_BUSINESS` | Restrict the ad to only show on Amazon Business. | |  `AMAZON_HAUL`    | Restrict the ad to only show on Amazon Haul.     |
 * @export
 * @enum {string}
 */

export const SponsoredProductsSiteRestriction = {
  AmazonBusiness: 'AMAZON_BUSINESS',
  AmazonHaul: 'AMAZON_HAUL',
} as const;

export type SponsoredProductsSiteRestriction = (typeof SponsoredProductsSiteRestriction)[keyof typeof SponsoredProductsSiteRestriction];

/**
 * Target promotion group\'s target.
 * @export
 * @interface SponsoredProductsTarget
 */
export interface SponsoredProductsTarget {
  /**
   * The id of the target promotion group.
   * @type {string}
   * @memberof SponsoredProductsTarget
   */
  targetPromotionGroupId?: string;
  /**
   * The id of the target.
   * @type {string}
   * @memberof SponsoredProductsTarget
   */
  targetId?: string;
  /**
   * The match type (for KEYWORDs) or the expression type (for PRODUCT). One of QUERY_BROAD_MATCHES,     QUERY_EXACT_MATCHES, QUERY_PHRASE_MATCHES, ASIN_SAME_AS, ASIN_EXPANDED_FROM
   * @type {string}
   * @memberof SponsoredProductsTarget
   */
  expressionType?: string;
  /**
   * The adGroupId of the manual-targeting campaign where the target belongs.
   * @type {string}
   * @memberof SponsoredProductsTarget
   */
  manualTargetingAdGroupId?: string;
  /**
   * The keyword text or the product ASIN of the target.
   * @type {string}
   * @memberof SponsoredProductsTarget
   */
  target?: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsTargetAccessError
 */
export interface SponsoredProductsTargetAccessError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsTargetAccessError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsTargetAccessErrorSelector}
   * @memberof SponsoredProductsTargetAccessError
   */
  errorValue: SponsoredProductsTargetAccessErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsTargetAccessErrorSelector
 */
export interface SponsoredProductsTargetAccessErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsTargetAccessErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsTargetAccessErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsTargetAccessErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsTargetAccessErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsTargetAccessErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsTargetAccessErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsInvalidInputError}
   * @memberof SponsoredProductsTargetAccessErrorSelector
   */
  invalidInputError?: SponsoredProductsInvalidInputError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsTargetAccessErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in accessing campaign management entities
 * @export
 * @interface SponsoredProductsTargetAccessExceptionResponseContent
 */
export interface SponsoredProductsTargetAccessExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsTargetAccessExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsTargetAccessExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsTargetAccessError>}
   * @memberof SponsoredProductsTargetAccessExceptionResponseContent
   */
  errors?: Array<SponsoredProductsTargetAccessError>;
}

/**
 *
 * @export
 * @interface SponsoredProductsTargetCampaignAttributes
 */
export interface SponsoredProductsTargetCampaignAttributes {
  /**
   * The identifier of the target marketplace.
   * @type {string}
   * @memberof SponsoredProductsTargetCampaignAttributes
   */
  marketplaceId: string;
  /**
   * The end date for the campaign in formats according to https://tools.ietf.org/html/rfc3339#section-5.6.
   * @type {string}
   * @memberof SponsoredProductsTargetCampaignAttributes
   */
  endDate?: string;
  /**
   * The name to be appended to the campaign. If new name already exists, a number will be appended i.e. if \"Campaign Name Copy\" exist, we will name it \"Campaign Name Copy 1\"
   * @type {string}
   * @memberof SponsoredProductsTargetCampaignAttributes
   */
  nameSuffix: string;
  /**
   * The start date of the campaign in formats according to https://tools.ietf.org/html/rfc3339#section-5.6.
   * @type {string}
   * @memberof SponsoredProductsTargetCampaignAttributes
   */
  startDate?: string;
  /**
   * The advertiser id per the targeted marketplace. Advertiser id per marketplace can fetched through /v2/profiles API.
   * @type {string}
   * @memberof SponsoredProductsTargetCampaignAttributes
   */
  advertiserId: string;
  /**
   * The budget for the campaign.
   * @type {number}
   * @memberof SponsoredProductsTargetCampaignAttributes
   */
  budget?: number;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateEntityState}
   * @memberof SponsoredProductsTargetCampaignAttributes
   */
  status: SponsoredProductsCreateOrUpdateEntityState;
}

/**
 *
 * @export
 * @interface SponsoredProductsTargetMutationError
 */
export interface SponsoredProductsTargetMutationError {
  /**
   * The type of the error
   * @type {string}
   * @memberof SponsoredProductsTargetMutationError
   */
  errorType: string;
  /**
   *
   * @type {SponsoredProductsTargetMutationErrorSelector}
   * @memberof SponsoredProductsTargetMutationError
   */
  errorValue: SponsoredProductsTargetMutationErrorSelector;
}
/**
 *
 * @export
 * @interface SponsoredProductsTargetMutationErrorSelector
 */
export interface SponsoredProductsTargetMutationErrorSelector {
  /**
   *
   * @type {SponsoredProductsEntityStateError}
   * @memberof SponsoredProductsTargetMutationErrorSelector
   */
  entityStateError?: SponsoredProductsEntityStateError;
  /**
   *
   * @type {SponsoredProductsMissingValueError}
   * @memberof SponsoredProductsTargetMutationErrorSelector
   */
  missingValueError?: SponsoredProductsMissingValueError;
  /**
   *
   * @type {SponsoredProductsBiddingError}
   * @memberof SponsoredProductsTargetMutationErrorSelector
   */
  biddingError?: SponsoredProductsBiddingError;
  /**
   *
   * @type {SponsoredProductsDuplicateValueError}
   * @memberof SponsoredProductsTargetMutationErrorSelector
   */
  duplicateValueError?: SponsoredProductsDuplicateValueError;
  /**
   *
   * @type {SponsoredProductsRangeError}
   * @memberof SponsoredProductsTargetMutationErrorSelector
   */
  rangeError?: SponsoredProductsRangeError;
  /**
   *
   * @type {SponsoredProductsParentEntityError}
   * @memberof SponsoredProductsTargetMutationErrorSelector
   */
  parentEntityError?: SponsoredProductsParentEntityError;
  /**
   *
   * @type {SponsoredProductsOtherError}
   * @memberof SponsoredProductsTargetMutationErrorSelector
   */
  otherError?: SponsoredProductsOtherError;
  /**
   *
   * @type {SponsoredProductsExpressionTypeError}
   * @memberof SponsoredProductsTargetMutationErrorSelector
   */
  expressionTypeError?: SponsoredProductsExpressionTypeError;
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof SponsoredProductsTargetMutationErrorSelector
   */
  throttledError?: SponsoredProductsThrottledError;
  /**
   *
   * @type {SponsoredProductsEntityNotFoundError}
   * @memberof SponsoredProductsTargetMutationErrorSelector
   */
  entityNotFoundError?: SponsoredProductsEntityNotFoundError;
  /**
   *
   * @type {SponsoredProductsTargetingClauseSetupError}
   * @memberof SponsoredProductsTargetMutationErrorSelector
   */
  targetingClauseSetupError?: SponsoredProductsTargetingClauseSetupError;
  /**
   *
   * @type {SponsoredProductsMalformedValueError}
   * @memberof SponsoredProductsTargetMutationErrorSelector
   */
  malformedValueError?: SponsoredProductsMalformedValueError;
  /**
   *
   * @type {SponsoredProductsBillingError}
   * @memberof SponsoredProductsTargetMutationErrorSelector
   */
  billingError?: SponsoredProductsBillingError;
  /**
   *
   * @type {SponsoredProductsEntityQuotaError}
   * @memberof SponsoredProductsTargetMutationErrorSelector
   */
  entityQuotaError?: SponsoredProductsEntityQuotaError;
  /**
   *
   * @type {SponsoredProductsInternalServerError}
   * @memberof SponsoredProductsTargetMutationErrorSelector
   */
  internalServerError?: SponsoredProductsInternalServerError;
}
/**
 * Exception resulting in mutating campaign management entities
 * @export
 * @interface SponsoredProductsTargetMutationExceptionResponseContent
 */
export interface SponsoredProductsTargetMutationExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsInvalidArgumentErrorCode}
   * @memberof SponsoredProductsTargetMutationExceptionResponseContent
   */
  code: SponsoredProductsInvalidArgumentErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsTargetMutationExceptionResponseContent
   */
  message: string;
  /**
   *
   * @type {Array<SponsoredProductsTargetMutationError>}
   * @memberof SponsoredProductsTargetMutationExceptionResponseContent
   */
  errors?: Array<SponsoredProductsTargetMutationError>;
}

/**
 * A Target Promotion Group that groups an Auto-Targeting Campaign/AdGroup with a Manual-Targeting Keyword Campaign/AdGroup, and a Manual-Targeting Product Campaign/AdGroup
 * @export
 * @interface SponsoredProductsTargetPromotionGroup
 */
export interface SponsoredProductsTargetPromotionGroup {
  /**
   * The Ids of the manual product-targeting AdGroups associated with the target promotion group
   * @type {Array<string>}
   * @memberof SponsoredProductsTargetPromotionGroup
   */
  productCampaignAdGroupIds?: Array<string>;
  /**
   * The id of the target promotion group.
   * @type {string}
   * @memberof SponsoredProductsTargetPromotionGroup
   */
  targetPromotionGroupId?: string;
  /**
   * The list of Product Ad Ids in the Auto-Targeting campaign\'s Ad Group that\'s tied to the Target Promotion Group.
   * @type {Array<string>}
   * @memberof SponsoredProductsTargetPromotionGroup
   */
  autoTargetingCampaignAdIds?: Array<string>;
  /**
   * The Ids of the manual keyword-targeting AdGroups associated with the target promotion group
   * @type {Array<string>}
   * @memberof SponsoredProductsTargetPromotionGroup
   */
  keywordCampaignAdGroupIds?: Array<string>;
  /**
   * The state of the target promotion group.
   * @type {string}
   * @memberof SponsoredProductsTargetPromotionGroup
   */
  state?: string;
  /**
   * The name of the target promotion group.
   * @type {string}
   * @memberof SponsoredProductsTargetPromotionGroup
   */
  targetPromotionGroupName?: string;
  /**
   * The Id of the auto-targeting AdGroup associated with the target promotion group
   * @type {string}
   * @memberof SponsoredProductsTargetPromotionGroup
   */
  autoTargetingCampaignAdGroupId?: string;
}
/**
 * @type SponsoredProductsTargetPromotionGroupTargetDetails
 * @export
 */
export type SponsoredProductsTargetPromotionGroupTargetDetails = KeywordTargetDetailsV2 | ProductTargetDetailsV2;

/**
 * A Target Promotion Group that groups a source AdGroup with one or more destination Manual Keyword/Product Targeting AdGroup(s)
 * @export
 * @interface SponsoredProductsTargetPromotionGroupV2
 */
export interface SponsoredProductsTargetPromotionGroupV2 {
  /**
   * The list of Product Ad Ids in the source Ad Group that\'s tied to the Target Promotion Group.
   * @type {Array<string>}
   * @memberof SponsoredProductsTargetPromotionGroupV2
   */
  adIds?: Array<string>;
  /**
   * The Id of the source AdGroup associated with the target promotion group
   * @type {string}
   * @memberof SponsoredProductsTargetPromotionGroupV2
   */
  sourceAdGroupId?: string;
  /**
   * The id of the target promotion group.
   * @type {string}
   * @memberof SponsoredProductsTargetPromotionGroupV2
   */
  targetPromotionGroupId?: string;
  /**
   * The campaign Id of the source AdGroup associated with the target promotion group
   * @type {string}
   * @memberof SponsoredProductsTargetPromotionGroupV2
   */
  sourceCampaignId?: string;
  /**
   * The state of the target promotion group.
   * @type {string}
   * @memberof SponsoredProductsTargetPromotionGroupV2
   */
  state?: string;
  /**
   * The destination manual targeting AdGroups associated with the target promotion group.
   * @type {Array<SponsoredProductsResponseAdGroup>}
   * @memberof SponsoredProductsTargetPromotionGroupV2
   */
  destinationAdGroups?: Array<SponsoredProductsResponseAdGroup>;
  /**
   * The name of the target promotion group.
   * @type {string}
   * @memberof SponsoredProductsTargetPromotionGroupV2
   */
  targetPromotionGroupName?: string;
}
/**
 * Indicates if the recommendation target is a Keyword or ASIN
 * @export
 * @enum {string}
 */

export const SponsoredProductsTargetType = {
  Keyword: 'KEYWORD',
  Asin: 'ASIN',
} as const;

export type SponsoredProductsTargetType = (typeof SponsoredProductsTargetType)[keyof typeof SponsoredProductsTargetType];

/**
 *
 * @export
 * @interface SponsoredProductsTargetingClause
 */
export interface SponsoredProductsTargetingClause {
  /**
   * The targeting expression.
   * @type {Array<SponsoredProductsTargetingExpressionPredicate>}
   * @memberof SponsoredProductsTargetingClause
   */
  expression: Array<SponsoredProductsTargetingExpressionPredicate>;
  /**
   * The target identifier
   * @type {string}
   * @memberof SponsoredProductsTargetingClause
   */
  targetId: string;
  /**
   * The resolved targeting expression.
   * @type {Array<SponsoredProductsTargetingExpressionPredicate>}
   * @memberof SponsoredProductsTargetingClause
   */
  resolvedExpression: Array<SponsoredProductsTargetingExpressionPredicate>;
  /**
   * The identifier of the campaign to which this target is associated.
   * @type {string}
   * @memberof SponsoredProductsTargetingClause
   */
  campaignId: string;
  /**
   *
   * @type {SponsoredProductsExpressionType}
   * @memberof SponsoredProductsTargetingClause
   */
  expressionType: SponsoredProductsExpressionType;
  /**
   *
   * @type {SponsoredProductsEntityState}
   * @memberof SponsoredProductsTargetingClause
   */
  state: SponsoredProductsEntityState;
  /**
   * The bid for ads sourced using the target. Targets that do not have bid values in listTargetingClauses will inherit the defaultBid from the adGroup level. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
   * @type {number}
   * @memberof SponsoredProductsTargetingClause
   */
  bid?: number;
  /**
   * The identifier of the ad group to which this target is associated.
   * @type {string}
   * @memberof SponsoredProductsTargetingClause
   */
  adGroupId: string;
  /**
   *
   * @type {SponsoredProductsTargetingClauseExtendedData}
   * @memberof SponsoredProductsTargetingClause
   */
  extendedData?: SponsoredProductsTargetingClauseExtendedData;
}

/**
 *
 * @export
 * @interface SponsoredProductsTargetingClauseExtendedData
 */
export interface SponsoredProductsTargetingClauseExtendedData {
  /**
   * Last updated date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsTargetingClauseExtendedData
   */
  lastUpdateDateTime?: string;
  /**
   *
   * @type {SponsoredProductsKeywordServingStatus}
   * @memberof SponsoredProductsTargetingClauseExtendedData
   */
  servingStatus?: SponsoredProductsKeywordServingStatus;
  /**
   * The serving status reasons of the TargetingClause
   * @type {Array<SponsoredProductsKeywordServingStatusDetail>}
   * @memberof SponsoredProductsTargetingClauseExtendedData
   */
  servingStatusDetails?: Array<SponsoredProductsKeywordServingStatusDetail>;
  /**
   * Creation date in ISO 8601.
   * @type {string}
   * @memberof SponsoredProductsTargetingClauseExtendedData
   */
  creationDateTime?: string;
}

/**
 *
 * @export
 * @interface SponsoredProductsTargetingClauseFailureResponseItem
 */
export interface SponsoredProductsTargetingClauseFailureResponseItem {
  /**
   * the index of the targetingClause in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsTargetingClauseFailureResponseItem
   */
  index: number;
  /**
   * A list of validation errors
   * @type {Array<SponsoredProductsTargetMutationError>}
   * @memberof SponsoredProductsTargetingClauseFailureResponseItem
   */
  errors?: Array<SponsoredProductsTargetMutationError>;
}
/**
 * Errors related to targeting clause setup
 * @export
 * @interface SponsoredProductsTargetingClauseSetupError
 */
export interface SponsoredProductsTargetingClauseSetupError {
  /**
   *
   * @type {SponsoredProductsTargetingClauseSetupErrorReason}
   * @memberof SponsoredProductsTargetingClauseSetupError
   */
  reason: SponsoredProductsTargetingClauseSetupErrorReason;
  /**
   *
   * @type {SponsoredProductsMarketplace}
   * @memberof SponsoredProductsTargetingClauseSetupError
   */
  marketplace?: SponsoredProductsMarketplace;
  /**
   *
   * @type {SponsoredProductsErrorCause}
   * @memberof SponsoredProductsTargetingClauseSetupError
   */
  cause?: SponsoredProductsErrorCause;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsTargetingClauseSetupError
   */
  message: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsTargetingClauseSetupErrorReason = {
  TargetingTypeNotAllowedForAutoTargetingCampaign: 'TARGETING_TYPE_NOT_ALLOWED_FOR_AUTO_TARGETING_CAMPAIGN',
  TypeConflictInAdGroup: 'TYPE_CONFLICT_IN_AD_GROUP',
  AutoTargetingClauseCannotBeCreatedManually: 'AUTO_TARGETING_CLAUSE_CANNOT_BE_CREATED_MANUALLY',
  TargetingExpressionInvalidValue: 'TARGETING_EXPRESSION_INVALID_VALUE',
} as const;

export type SponsoredProductsTargetingClauseSetupErrorReason =
  (typeof SponsoredProductsTargetingClauseSetupErrorReason)[keyof typeof SponsoredProductsTargetingClauseSetupErrorReason];

/**
 *
 * @export
 * @interface SponsoredProductsTargetingClauseSuccessResponseItem
 */
export interface SponsoredProductsTargetingClauseSuccessResponseItem {
  /**
   *
   * @type {SponsoredProductsTargetingClause}
   * @memberof SponsoredProductsTargetingClauseSuccessResponseItem
   */
  targetingClause?: SponsoredProductsTargetingClause;
  /**
   * the targetingClause ID
   * @type {string}
   * @memberof SponsoredProductsTargetingClauseSuccessResponseItem
   */
  targetId?: string;
  /**
   * the index of the targetingClause in the array from the request body
   * @type {number}
   * @memberof SponsoredProductsTargetingClauseSuccessResponseItem
   */
  index: number;
}
/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsTargetingExpressionMatchType = {
  ProductExact: 'PRODUCT_EXACT',
  ProductSimilar: 'PRODUCT_SIMILAR',
} as const;

export type SponsoredProductsTargetingExpressionMatchType =
  (typeof SponsoredProductsTargetingExpressionMatchType)[keyof typeof SponsoredProductsTargetingExpressionMatchType];

/**
 *
 * @export
 * @interface SponsoredProductsTargetingExpressionPredicate
 */
export interface SponsoredProductsTargetingExpressionPredicate {
  /**
   *
   * @type {SponsoredProductsTargetingExpressionPredicateType}
   * @memberof SponsoredProductsTargetingExpressionPredicate
   */
  type?: SponsoredProductsTargetingExpressionPredicateType;
  /**
   * The expression value
   * @type {string}
   * @memberof SponsoredProductsTargetingExpressionPredicate
   */
  value?: string;
}

/**
 *
 * @export
 * @interface SponsoredProductsTargetingExpressionPredicateMarketValue
 */
export interface SponsoredProductsTargetingExpressionPredicateMarketValue {
  /**
   *
   * @type {SponsoredProductsMarketplace}
   * @memberof SponsoredProductsTargetingExpressionPredicateMarketValue
   */
  marketplace?: SponsoredProductsMarketplace;
  /**
   * The expression value
   * @type {string}
   * @memberof SponsoredProductsTargetingExpressionPredicateMarketValue
   */
  value?: string;
}

/**
 * The type of targeting expression. You can specify values for the following predicates: | Predicate | Description | | --- | --- | | `QUERY_BROAD_REL_MATCHES` | Auto Targeting - cannot be manually created - corresponds to the `Loose match` target type in the UI, this will show your ad to shoppers who use search terms loosely related to your products.| | `QUERY_HIGH_REL_MATCHES` | Auto Targeting - cannot be manually created - corresponds to the `Close match` target type in the UI, this will show your ad to shoppers who use search terms closely related to your products.| | `ASIN_ACCESSORY_RELATED` | Auto Targeting - cannot be manually created - corresponds to the `Complements` target type in the UI, this will show your ad to shoppers who view the detail pages of products that complement your product.| | `ASIN_SUBSTITUTE_RELATED` | Auto Targeting - cannot be manually created - corresponds to the `Substitutes` target type in the UI, this will show your ad to shoppers who use detail pages of products similar to yours.| | `ASIN_CATEGORY_SAME_AS` | Target the category that is the same as the category expressed | | `ASIN_BRAND_SAME_AS` | Target the brand that is the same as the brand expressed. | | `ASIN_PRICE_LESS_THAN` | Target a price that is less than the price expressed. | | `ASIN_PRICE_BETWEEN` | Target a price that is between the prices expressed. | | `ASIN_PRICE_GREATER_THAN` | Target a price that is greater than the price expressed. | | `ASIN_REVIEW_RATING_LESS_THAN` | Target a review rating less than the review rating that is expressed. | | `ASIN_REVIEW_RATING_BETWEEN` | Target a review rating that is between the review ratings expressed. | | `ASIN_REVIEW_RATING_GREATER_THAN` | Target a review rating that is greater than the review rating expressed. | | `ASIN_SAME_AS` | Target an ASIN that is the same as the ASIN expressed. | | `ASIN_IS_PRIME_SHIPPING_ELIGIBLE` | Target products that are Prime Shipping Eligible. This refinement can be applied at a category or brand level only. | | `ASIN_AGE_RANGE_SAME_AS` | Target an age range that is in the expressed range. This refinement can be applied for toys and games categories only. | | `ASIN_GENRE_SAME_AS` | Target products related to the expressed genre. This refinement can be applied for Books and eBooks categories only.   | | `ASIN_EXPANDED_FROM` | Target products similar in performance to the ASIN expressed.   | | `KEYWORD_GROUP_SAME_AS` | Target the keyword group that is the same as the keyword group expressed (Beta coming soon). | | `OTHER` | Other Type.   |
 * @export
 * @enum {string}
 */

export const SponsoredProductsTargetingExpressionPredicateType = {
  AsinCategorySameAs: 'ASIN_CATEGORY_SAME_AS',
  AsinBrandSameAs: 'ASIN_BRAND_SAME_AS',
  AsinPriceLessThan: 'ASIN_PRICE_LESS_THAN',
  AsinPriceBetween: 'ASIN_PRICE_BETWEEN',
  AsinPriceGreaterThan: 'ASIN_PRICE_GREATER_THAN',
  AsinReviewRatingLessThan: 'ASIN_REVIEW_RATING_LESS_THAN',
  AsinReviewRatingBetween: 'ASIN_REVIEW_RATING_BETWEEN',
  AsinReviewRatingGreaterThan: 'ASIN_REVIEW_RATING_GREATER_THAN',
  AsinSameAs: 'ASIN_SAME_AS',
  QueryBroadRelMatches: 'QUERY_BROAD_REL_MATCHES',
  QueryHighRelMatches: 'QUERY_HIGH_REL_MATCHES',
  AsinSubstituteRelated: 'ASIN_SUBSTITUTE_RELATED',
  AsinAccessoryRelated: 'ASIN_ACCESSORY_RELATED',
  AsinAgeRangeSameAs: 'ASIN_AGE_RANGE_SAME_AS',
  AsinGenreSameAs: 'ASIN_GENRE_SAME_AS',
  AsinIsPrimeShippingEligible: 'ASIN_IS_PRIME_SHIPPING_ELIGIBLE',
  AsinExpandedFrom: 'ASIN_EXPANDED_FROM',
  KeywordGroupSameAs: 'KEYWORD_GROUP_SAME_AS',
  Other: 'OTHER',
} as const;

export type SponsoredProductsTargetingExpressionPredicateType =
  (typeof SponsoredProductsTargetingExpressionPredicateType)[keyof typeof SponsoredProductsTargetingExpressionPredicateType];

/**
 * The type of targeting expression. You can specify values for the following predicates: | Predicate | Description | | --- | --- | | `QUERY_BROAD_REL_MATCHES` | Auto Targeting - cannot be manually created - corresponds to the `Loose match` target type in the UI, this will show your ad to shoppers who use search terms loosely related to your products.| | `QUERY_HIGH_REL_MATCHES` | Auto Targeting - cannot be manually created - corresponds to the `Close match` target type in the UI, this will show your ad to shoppers who use search terms closely related to your products.| | `ASIN_ACCESSORY_RELATED` | Auto Targeting - cannot be manually created - corresponds to the `Complements` target type in the UI, this will show your ad to shoppers who view the detail pages of products that complement your product.| | `ASIN_SUBSTITUTE_RELATED` | Auto Targeting - cannot be manually created - corresponds to the `Substitutes` target type in the UI, this will show your ad to shoppers who use detail pages of products similar to yours.| | `ASIN_CATEGORY_SAME_AS` | Target the category that is the same as the category expressed | | `ASIN_BRAND_SAME_AS` | Target the brand that is the same as the brand expressed. | | `ASIN_PRICE_LESS_THAN` | Target a price that is less than the price expressed. | | `ASIN_PRICE_BETWEEN` | Target a price that is between the prices expressed. | | `ASIN_PRICE_GREATER_THAN` | Target a price that is greater than the price expressed. | | `ASIN_REVIEW_RATING_LESS_THAN` | Target a review rating less than the review rating that is expressed. | | `ASIN_REVIEW_RATING_BETWEEN` | Target a review rating that is between the review ratings expressed. | | `ASIN_REVIEW_RATING_GREATER_THAN` | Target a review rating that is greater than the review rating expressed. | | `ASIN_SAME_AS` | Target an ASIN that is the same as the ASIN expressed. | | `ASIN_IS_PRIME_SHIPPING_ELIGIBLE` | Target products that are Prime Shipping Eligible. This refinement can be applied at a category or brand level only. | | `ASIN_AGE_RANGE_SAME_AS` | Target an age range that is in the expressed range. This refinement can be applied for toys and games categories only. | | `ASIN_GENRE_SAME_AS` | Target products related to the expressed genre. This refinement can be applied for Books and eBooks categories only.   | | `ASIN_EXPANDED_FROM` | Target products similar in performance to the ASIN expressed.   | | `KEYWORD_GROUP_SAME_AS` | Target the keyword group that is the same as the keyword group expressed (Beta coming soon). | | `OTHER` | Other Type.   |
 * @export
 * @enum {string}
 */

export const SponsoredProductsTargetingExpressionPredicateTypeWithoutOther = {
  AsinCategorySameAs: 'ASIN_CATEGORY_SAME_AS',
  AsinBrandSameAs: 'ASIN_BRAND_SAME_AS',
  AsinPriceLessThan: 'ASIN_PRICE_LESS_THAN',
  AsinPriceBetween: 'ASIN_PRICE_BETWEEN',
  AsinPriceGreaterThan: 'ASIN_PRICE_GREATER_THAN',
  AsinReviewRatingLessThan: 'ASIN_REVIEW_RATING_LESS_THAN',
  AsinReviewRatingBetween: 'ASIN_REVIEW_RATING_BETWEEN',
  AsinReviewRatingGreaterThan: 'ASIN_REVIEW_RATING_GREATER_THAN',
  AsinSameAs: 'ASIN_SAME_AS',
  QueryBroadRelMatches: 'QUERY_BROAD_REL_MATCHES',
  QueryHighRelMatches: 'QUERY_HIGH_REL_MATCHES',
  AsinSubstituteRelated: 'ASIN_SUBSTITUTE_RELATED',
  AsinAccessoryRelated: 'ASIN_ACCESSORY_RELATED',
  AsinAgeRangeSameAs: 'ASIN_AGE_RANGE_SAME_AS',
  AsinGenreSameAs: 'ASIN_GENRE_SAME_AS',
  AsinIsPrimeShippingEligible: 'ASIN_IS_PRIME_SHIPPING_ELIGIBLE',
  AsinExpandedFrom: 'ASIN_EXPANDED_FROM',
  KeywordGroupSameAs: 'KEYWORD_GROUP_SAME_AS',
} as const;

export type SponsoredProductsTargetingExpressionPredicateTypeWithoutOther =
  (typeof SponsoredProductsTargetingExpressionPredicateTypeWithoutOther)[keyof typeof SponsoredProductsTargetingExpressionPredicateTypeWithoutOther];

/**
 *
 * @export
 * @interface SponsoredProductsTargetingExpressionPredicateWithoutOther
 */
export interface SponsoredProductsTargetingExpressionPredicateWithoutOther {
  /**
   *
   * @type {SponsoredProductsTargetingExpressionPredicateTypeWithoutOther}
   * @memberof SponsoredProductsTargetingExpressionPredicateWithoutOther
   */
  type: SponsoredProductsTargetingExpressionPredicateTypeWithoutOther;
  /**
   * The expression value
   * @type {string}
   * @memberof SponsoredProductsTargetingExpressionPredicateWithoutOther
   */
  value?: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsTargetingType = {
  Auto: 'AUTO',
  Manual: 'MANUAL',
} as const;

export type SponsoredProductsTargetingType = (typeof SponsoredProductsTargetingType)[keyof typeof SponsoredProductsTargetingType];

/**
 * Error that represents failure due to API caller exceeding allowed service limits.
 * @export
 * @interface SponsoredProductsThrottledError
 */
export interface SponsoredProductsThrottledError {
  /**
   *
   * @type {SponsoredProductsThrottledErrorReason}
   * @memberof SponsoredProductsThrottledError
   */
  reason: SponsoredProductsThrottledErrorReason;
  /**
   *
   * @type {SponsoredProductsErrorCause}
   * @memberof SponsoredProductsThrottledError
   */
  cause?: SponsoredProductsErrorCause;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsThrottledError
   */
  message: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsThrottledErrorCode = {
  Throttled: 'THROTTLED',
} as const;

export type SponsoredProductsThrottledErrorCode = (typeof SponsoredProductsThrottledErrorCode)[keyof typeof SponsoredProductsThrottledErrorCode];

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsThrottledErrorReason = {
  Throttled: 'THROTTLED',
} as const;

export type SponsoredProductsThrottledErrorReason =
  (typeof SponsoredProductsThrottledErrorReason)[keyof typeof SponsoredProductsThrottledErrorReason];

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsThrottlingExceptionCode = {
  Throttled: 'THROTTLED',
} as const;

export type SponsoredProductsThrottlingExceptionCode =
  (typeof SponsoredProductsThrottlingExceptionCode)[keyof typeof SponsoredProductsThrottlingExceptionCode];

/**
 *
 * @export
 * @interface SponsoredProductsThrottlingExceptionResponseContent
 */
export interface SponsoredProductsThrottlingExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsThrottledErrorCode}
   * @memberof SponsoredProductsThrottlingExceptionResponseContent
   */
  code: SponsoredProductsThrottledErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsThrottlingExceptionResponseContent
   */
  message: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsUnauthenticatedExceptionCode = {
  Unauthenticated: 'UNAUTHENTICATED',
} as const;

export type SponsoredProductsUnauthenticatedExceptionCode =
  (typeof SponsoredProductsUnauthenticatedExceptionCode)[keyof typeof SponsoredProductsUnauthenticatedExceptionCode];

/**
 * Unauthenticated. Request failed because user is not authenticated.
 * @export
 * @interface SponsoredProductsUnauthenticatedExceptionResponseContent
 */
export interface SponsoredProductsUnauthenticatedExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsUnauthenticatedExceptionCode}
   * @memberof SponsoredProductsUnauthenticatedExceptionResponseContent
   */
  code?: SponsoredProductsUnauthenticatedExceptionCode;
  /**
   * A human-readable description of the response.
   * @type {string}
   * @memberof SponsoredProductsUnauthenticatedExceptionResponseContent
   */
  message?: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsUnauthorizedErrorCode = {
  Unauthorized: 'UNAUTHORIZED',
} as const;

export type SponsoredProductsUnauthorizedErrorCode =
  (typeof SponsoredProductsUnauthorizedErrorCode)[keyof typeof SponsoredProductsUnauthorizedErrorCode];

/**
 *
 * @export
 * @interface SponsoredProductsUnauthorizedExceptionResponseContent
 */
export interface SponsoredProductsUnauthorizedExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsUnauthorizedErrorCode}
   * @memberof SponsoredProductsUnauthorizedExceptionResponseContent
   */
  code: SponsoredProductsUnauthorizedErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsUnauthorizedExceptionResponseContent
   */
  message: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsUnsupportedMediaTypeErrorCode = {
  UnsupportedMediaType: 'UNSUPPORTED_MEDIA_TYPE',
} as const;

export type SponsoredProductsUnsupportedMediaTypeErrorCode =
  (typeof SponsoredProductsUnsupportedMediaTypeErrorCode)[keyof typeof SponsoredProductsUnsupportedMediaTypeErrorCode];

/**
 *
 * @export
 * @interface SponsoredProductsUnsupportedMediaTypeExceptionResponseContent
 */
export interface SponsoredProductsUnsupportedMediaTypeExceptionResponseContent {
  /**
   *
   * @type {SponsoredProductsUnsupportedMediaTypeErrorCode}
   * @memberof SponsoredProductsUnsupportedMediaTypeExceptionResponseContent
   */
  code: SponsoredProductsUnsupportedMediaTypeErrorCode;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsUnsupportedMediaTypeExceptionResponseContent
   */
  message: string;
}

/**
 * Errors being used to represent an unsupported operation e.g. Seller are not supported to create custom text product ads.
 * @export
 * @interface SponsoredProductsUnsupportedOperationError
 */
export interface SponsoredProductsUnsupportedOperationError {
  /**
   *
   * @type {SponsoredProductsUnsupportedOperationErrorReason}
   * @memberof SponsoredProductsUnsupportedOperationError
   */
  reason: SponsoredProductsUnsupportedOperationErrorReason;
  /**
   *
   * @type {SponsoredProductsErrorCause}
   * @memberof SponsoredProductsUnsupportedOperationError
   */
  cause?: SponsoredProductsErrorCause;
  /**
   * Human readable error message
   * @type {string}
   * @memberof SponsoredProductsUnsupportedOperationError
   */
  message: string;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsUnsupportedOperationErrorReason = {
  UnsupportedOperation: 'UNSUPPORTED_OPERATION',
} as const;

export type SponsoredProductsUnsupportedOperationErrorReason =
  (typeof SponsoredProductsUnsupportedOperationErrorReason)[keyof typeof SponsoredProductsUnsupportedOperationErrorReason];

/**
 *
 * @export
 * @interface SponsoredProductsUpdateAdGroup
 */
export interface SponsoredProductsUpdateAdGroup {
  /**
   * The name of the ad group.
   * @type {string}
   * @memberof SponsoredProductsUpdateAdGroup
   */
  name?: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateEntityState}
   * @memberof SponsoredProductsUpdateAdGroup
   */
  state?: SponsoredProductsCreateOrUpdateEntityState;
  /**
   * The identifier of the keyword.
   * @type {string}
   * @memberof SponsoredProductsUpdateAdGroup
   */
  adGroupId: string;
  /**
   * A bid value for use when no bid is specified for keywords in the ad group. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
   * @type {number}
   * @memberof SponsoredProductsUpdateAdGroup
   */
  defaultBid?: number;
}

/**
 *
 * @export
 * @interface SponsoredProductsUpdateCampaign
 */
export interface SponsoredProductsUpdateCampaign {
  /**
   * Restrict the ad to a particular site. If the value is absent (ie null), it means no site restrictions and defaults to current Sponsored Products campaign behavior. This field is coming up and is not ready for use at the moment.
   * @type {Array<SponsoredProductsSiteRestriction>}
   * @memberof SponsoredProductsUpdateCampaign
   */
  siteRestrictions?: Array<SponsoredProductsSiteRestriction>;
  /**
   * The identifier of an existing portfolio to which the campaign is associated.
   * @type {string}
   * @memberof SponsoredProductsUpdateCampaign
   */
  portfolioId?: string | null;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateOffAmazonSettings}
   * @memberof SponsoredProductsUpdateCampaign
   */
  offAmazonSettings?: SponsoredProductsCreateOrUpdateOffAmazonSettings;
  /**
   * The format of the date is YYYY-MM-DD.
   * @type {string}
   * @memberof SponsoredProductsUpdateCampaign
   */
  endDate?: string | null;
  /**
   * The identifier of the campaign.
   * @type {string}
   * @memberof SponsoredProductsUpdateCampaign
   */
  campaignId: string;
  /**
   * The name of the campaign.
   * @type {string}
   * @memberof SponsoredProductsUpdateCampaign
   */
  name?: string;
  /**
   *
   * @type {SponsoredProductsTargetingType}
   * @memberof SponsoredProductsUpdateCampaign
   */
  targetingType?: SponsoredProductsTargetingType;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateEntityState}
   * @memberof SponsoredProductsUpdateCampaign
   */
  state?: SponsoredProductsCreateOrUpdateEntityState;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateDynamicBidding}
   * @memberof SponsoredProductsUpdateCampaign
   */
  dynamicBidding?: SponsoredProductsCreateOrUpdateDynamicBidding;
  /**
   * The format of the date is YYYY-MM-DD.
   * @type {string}
   * @memberof SponsoredProductsUpdateCampaign
   */
  startDate?: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateBudget}
   * @memberof SponsoredProductsUpdateCampaign
   */
  budget?: SponsoredProductsCreateOrUpdateBudget;
  /**
   * A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.
   * @type {{ [key: string]: string; }}
   * @memberof SponsoredProductsUpdateCampaign
   */
  tags?: { [key: string]: string };
}

/**
 *
 * @export
 * @interface SponsoredProductsUpdateCampaignNegativeKeyword
 */
export interface SponsoredProductsUpdateCampaignNegativeKeyword {
  /**
   * The identifier of the keyword.
   * @type {string}
   * @memberof SponsoredProductsUpdateCampaignNegativeKeyword
   */
  keywordId: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateEntityState}
   * @memberof SponsoredProductsUpdateCampaignNegativeKeyword
   */
  state?: SponsoredProductsCreateOrUpdateEntityState;
}

/**
 *
 * @export
 * @interface SponsoredProductsUpdateCampaignNegativeTargetingClause
 */
export interface SponsoredProductsUpdateCampaignNegativeTargetingClause {
  /**
   * The NegativeTargeting expression.
   * @type {Array<SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate>}
   * @memberof SponsoredProductsUpdateCampaignNegativeTargetingClause
   */
  expression?: Array<SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate>;
  /**
   * The target identifier
   * @type {string}
   * @memberof SponsoredProductsUpdateCampaignNegativeTargetingClause
   */
  targetId: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateEntityState}
   * @memberof SponsoredProductsUpdateCampaignNegativeTargetingClause
   */
  state?: SponsoredProductsCreateOrUpdateEntityState;
}

/**
 *
 * @export
 * @interface SponsoredProductsUpdateDraftCampaign
 */
export interface SponsoredProductsUpdateDraftCampaign {
  /**
   * Restrict the ad to a particular site. If the value is absent (ie null), it means no site restrictions and defaults to current Sponsored Products campaign behavior. This field is coming up and is not ready for use at the moment.
   * @type {Array<SponsoredProductsSiteRestriction>}
   * @memberof SponsoredProductsUpdateDraftCampaign
   */
  siteRestrictions?: Array<SponsoredProductsSiteRestriction>;
  /**
   * The identifier of an existing portfolio to which the draft is associated.
   * @type {string}
   * @memberof SponsoredProductsUpdateDraftCampaign
   */
  portfolioId?: string | null;
  /**
   * The format of the date is YYYY-MM-DD.
   * @type {string}
   * @memberof SponsoredProductsUpdateDraftCampaign
   */
  endDate?: string | null;
  /**
   * The identifier of the draft.
   * @type {string}
   * @memberof SponsoredProductsUpdateDraftCampaign
   */
  campaignId: string;
  /**
   * The name of the draft.
   * @type {string}
   * @memberof SponsoredProductsUpdateDraftCampaign
   */
  name?: string;
  /**
   *
   * @type {SponsoredProductsTargetingType}
   * @memberof SponsoredProductsUpdateDraftCampaign
   */
  targetingType?: SponsoredProductsTargetingType;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateDraftCampaignDynamicBidding}
   * @memberof SponsoredProductsUpdateDraftCampaign
   */
  dynamicBidding?: SponsoredProductsCreateOrUpdateDraftCampaignDynamicBidding;
  /**
   * The format of the date is YYYY-MM-DD.
   * @type {string}
   * @memberof SponsoredProductsUpdateDraftCampaign
   */
  startDate?: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateDraftCampaignBudget}
   * @memberof SponsoredProductsUpdateDraftCampaign
   */
  budget?: SponsoredProductsCreateOrUpdateDraftCampaignBudget;
  /**
   * A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.
   * @type {{ [key: string]: string; }}
   * @memberof SponsoredProductsUpdateDraftCampaign
   */
  tags?: { [key: string]: string };
}

/**
 *
 * @export
 * @interface SponsoredProductsUpdateGlobalAdGroup
 */
export interface SponsoredProductsUpdateGlobalAdGroup {
  /**
   *
   * @type {Array<string>}
   * @memberof SponsoredProductsUpdateGlobalAdGroup
   */
  applicableMarketplaces?: Array<string>;
  /**
   * The name of the ad group.
   * @type {string}
   * @memberof SponsoredProductsUpdateGlobalAdGroup
   */
  name?: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
   * @memberof SponsoredProductsUpdateGlobalAdGroup
   */
  state?: SponsoredProductsCreateOrUpdateGlobalEntityState;
  /**
   * The identifier of the keyword.
   * @type {string}
   * @memberof SponsoredProductsUpdateGlobalAdGroup
   */
  adGroupId: string;
  /**
   *
   * @type {SponsoredProductsGlobalBid}
   * @memberof SponsoredProductsUpdateGlobalAdGroup
   */
  defaultBid?: SponsoredProductsGlobalBid;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateGlobalCampaign
 */
export interface SponsoredProductsUpdateGlobalCampaign {
  /**
   * The format of the date is YYYY-MM-DD.
   * @type {string}
   * @memberof SponsoredProductsUpdateGlobalCampaign
   */
  endDate?: string;
  /**
   * The identifier of the campaign.
   * @type {string}
   * @memberof SponsoredProductsUpdateGlobalCampaign
   */
  campaignId: string;
  /**
   * The name of the campaign.
   * @type {string}
   * @memberof SponsoredProductsUpdateGlobalCampaign
   */
  name?: string;
  /**
   *
   * @type {SponsoredProductsTargetingType}
   * @memberof SponsoredProductsUpdateGlobalCampaign
   */
  targetingType?: SponsoredProductsTargetingType;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
   * @memberof SponsoredProductsUpdateGlobalCampaign
   */
  state?: SponsoredProductsCreateOrUpdateGlobalEntityState;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateDynamicBidding}
   * @memberof SponsoredProductsUpdateGlobalCampaign
   */
  dynamicBidding?: SponsoredProductsCreateOrUpdateDynamicBidding;
  /**
   * The format of the date is YYYY-MM-DD.
   * @type {string}
   * @memberof SponsoredProductsUpdateGlobalCampaign
   */
  startDate?: string;
  /**
   *
   * @type {SponsoredProductsGlobalBudget}
   * @memberof SponsoredProductsUpdateGlobalCampaign
   */
  budget?: SponsoredProductsGlobalBudget;
  /**
   * A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.
   * @type {{ [key: string]: string; }}
   * @memberof SponsoredProductsUpdateGlobalCampaign
   */
  tags?: { [key: string]: string };
}

/**
 *
 * @export
 * @interface SponsoredProductsUpdateGlobalCampaignNegativeKeyword
 */
export interface SponsoredProductsUpdateGlobalCampaignNegativeKeyword {
  /**
   * The identifier of the keyword.
   * @type {string}
   * @memberof SponsoredProductsUpdateGlobalCampaignNegativeKeyword
   */
  keywordId: string;
  /**
   * Name for the keyword
   * @type {string}
   * @memberof SponsoredProductsUpdateGlobalCampaignNegativeKeyword
   */
  name?: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
   * @memberof SponsoredProductsUpdateGlobalCampaignNegativeKeyword
   */
  state?: SponsoredProductsCreateOrUpdateGlobalEntityState;
  /**
   *
   * @type {SponsoredProductsGlobalNegativeKeywordText}
   * @memberof SponsoredProductsUpdateGlobalCampaignNegativeKeyword
   */
  keywordText?: SponsoredProductsGlobalNegativeKeywordText;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateGlobalKeyword
 */
export interface SponsoredProductsUpdateGlobalKeyword {
  /**
   * The identifier of the keyword.
   * @type {string}
   * @memberof SponsoredProductsUpdateGlobalKeyword
   */
  keywordId: string;
  /**
   * Name for the Keyword
   * @type {string}
   * @memberof SponsoredProductsUpdateGlobalKeyword
   */
  name?: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
   * @memberof SponsoredProductsUpdateGlobalKeyword
   */
  state?: SponsoredProductsCreateOrUpdateGlobalEntityState;
  /**
   *
   * @type {SponsoredProductsGlobalBid}
   * @memberof SponsoredProductsUpdateGlobalKeyword
   */
  bid?: SponsoredProductsGlobalBid;
  /**
   *
   * @type {SponsoredProductsGlobalKeywordText}
   * @memberof SponsoredProductsUpdateGlobalKeyword
   */
  keywordText?: SponsoredProductsGlobalKeywordText;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateGlobalNegativeKeyword
 */
export interface SponsoredProductsUpdateGlobalNegativeKeyword {
  /**
   * The identifier of the keyword.
   * @type {string}
   * @memberof SponsoredProductsUpdateGlobalNegativeKeyword
   */
  keywordId: string;
  /**
   * Name for the keyword
   * @type {string}
   * @memberof SponsoredProductsUpdateGlobalNegativeKeyword
   */
  name?: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
   * @memberof SponsoredProductsUpdateGlobalNegativeKeyword
   */
  state?: SponsoredProductsCreateOrUpdateGlobalEntityState;
  /**
   *
   * @type {SponsoredProductsGlobalNegativeKeywordText}
   * @memberof SponsoredProductsUpdateGlobalNegativeKeyword
   */
  keywordText?: SponsoredProductsGlobalNegativeKeywordText;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateGlobalNegativeTargetingClause
 */
export interface SponsoredProductsUpdateGlobalNegativeTargetingClause {
  /**
   * The NegativeTargeting expression.
   * @type {Array<SponsoredProductsGlobalTargetingExpressionPredicate>}
   * @memberof SponsoredProductsUpdateGlobalNegativeTargetingClause
   */
  expression?: Array<SponsoredProductsGlobalTargetingExpressionPredicate>;
  /**
   * The target identifier
   * @type {string}
   * @memberof SponsoredProductsUpdateGlobalNegativeTargetingClause
   */
  targetId: string;
  /**
   * Name for the negative targeting clause
   * @type {string}
   * @memberof SponsoredProductsUpdateGlobalNegativeTargetingClause
   */
  name?: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
   * @memberof SponsoredProductsUpdateGlobalNegativeTargetingClause
   */
  state?: SponsoredProductsCreateOrUpdateGlobalEntityState;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateGlobalProductAd
 */
export interface SponsoredProductsUpdateGlobalProductAd {
  /**
   * The product ad identifier.
   * @type {string}
   * @memberof SponsoredProductsUpdateGlobalProductAd
   */
  adId: string;
  /**
   * Name for the product Ad
   * @type {string}
   * @memberof SponsoredProductsUpdateGlobalProductAd
   */
  name?: string;
  /**
   *
   * @type {SponsoredProductsGlobalProductIdentifiers}
   * @memberof SponsoredProductsUpdateGlobalProductAd
   */
  asin?: SponsoredProductsGlobalProductIdentifiers;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
   * @memberof SponsoredProductsUpdateGlobalProductAd
   */
  state?: SponsoredProductsCreateOrUpdateGlobalEntityState;
  /**
   *
   * @type {SponsoredProductsGlobalProductIdentifiers}
   * @memberof SponsoredProductsUpdateGlobalProductAd
   */
  sku?: SponsoredProductsGlobalProductIdentifiers;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateGlobalTargetingClause
 */
export interface SponsoredProductsUpdateGlobalTargetingClause {
  /**
   * The targeting expression.
   * @type {Array<SponsoredProductsGlobalTargetingExpressionPredicate>}
   * @memberof SponsoredProductsUpdateGlobalTargetingClause
   */
  expression?: Array<SponsoredProductsGlobalTargetingExpressionPredicate>;
  /**
   * The target identifier
   * @type {string}
   * @memberof SponsoredProductsUpdateGlobalTargetingClause
   */
  targetId: string;
  /**
   * Name for the targeting clause
   * @type {string}
   * @memberof SponsoredProductsUpdateGlobalTargetingClause
   */
  name?: string;
  /**
   *
   * @type {SponsoredProductsExpressionTypeWithoutOther}
   * @memberof SponsoredProductsUpdateGlobalTargetingClause
   */
  expressionType?: SponsoredProductsExpressionTypeWithoutOther;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
   * @memberof SponsoredProductsUpdateGlobalTargetingClause
   */
  state?: SponsoredProductsCreateOrUpdateGlobalEntityState;
  /**
   *
   * @type {SponsoredProductsGlobalBid}
   * @memberof SponsoredProductsUpdateGlobalTargetingClause
   */
  bid?: SponsoredProductsGlobalBid;
}

/**
 *
 * @export
 * @interface SponsoredProductsUpdateKeyword
 */
export interface SponsoredProductsUpdateKeyword {
  /**
   * The identifier of the keyword.
   * @type {string}
   * @memberof SponsoredProductsUpdateKeyword
   */
  keywordId: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateEntityState}
   * @memberof SponsoredProductsUpdateKeyword
   */
  state?: SponsoredProductsCreateOrUpdateEntityState;
  /**
   * Bid associated with this keyword. Applicable to biddable match types only. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
   * @type {number}
   * @memberof SponsoredProductsUpdateKeyword
   */
  bid?: number | null;
}

/**
 *
 * @export
 * @interface SponsoredProductsUpdateNegativeKeyword
 */
export interface SponsoredProductsUpdateNegativeKeyword {
  /**
   * The identifier of the keyword.
   * @type {string}
   * @memberof SponsoredProductsUpdateNegativeKeyword
   */
  keywordId: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateEntityState}
   * @memberof SponsoredProductsUpdateNegativeKeyword
   */
  state?: SponsoredProductsCreateOrUpdateEntityState;
}

/**
 *
 * @export
 * @interface SponsoredProductsUpdateNegativeTargetingClause
 */
export interface SponsoredProductsUpdateNegativeTargetingClause {
  /**
   * The NegativeTargeting expression.
   * @type {Array<SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate>}
   * @memberof SponsoredProductsUpdateNegativeTargetingClause
   */
  expression?: Array<SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate>;
  /**
   * The target identifier
   * @type {string}
   * @memberof SponsoredProductsUpdateNegativeTargetingClause
   */
  targetId: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateEntityState}
   * @memberof SponsoredProductsUpdateNegativeTargetingClause
   */
  state?: SponsoredProductsCreateOrUpdateEntityState;
}

/**
 *
 * @export
 * @interface SponsoredProductsUpdateProductAd
 */
export interface SponsoredProductsUpdateProductAd {
  /**
   * The product ad identifier.
   * @type {string}
   * @memberof SponsoredProductsUpdateProductAd
   */
  adId: string;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateEntityState}
   * @memberof SponsoredProductsUpdateProductAd
   */
  state?: SponsoredProductsCreateOrUpdateEntityState;
}

/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent {
  /**
   * An array of adGroups with updated values.
   * @type {Array<SponsoredProductsUpdateAdGroup>}
   * @memberof SponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent
   */
  adGroups: Array<SponsoredProductsUpdateAdGroup>;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsAdGroupsResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsAdGroupsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkAdGroupOperationResponse}
   * @memberof SponsoredProductsUpdateSponsoredProductsAdGroupsResponseContent
   */
  adGroups: SponsoredProductsBulkAdGroupOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent {
  /**
   * An array of campaignNegativeKeywords with updated values.
   * @type {Array<SponsoredProductsUpdateCampaignNegativeKeyword>}
   * @memberof SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent
   */
  campaignNegativeKeywords: Array<SponsoredProductsUpdateCampaignNegativeKeyword>;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkCampaignNegativeKeywordOperationResponse}
   * @memberof SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsResponseContent
   */
  campaignNegativeKeywords: SponsoredProductsBulkCampaignNegativeKeywordOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent {
  /**
   * An array of Campaign Negative TargetingClauses with updated values.
   * @type {Array<SponsoredProductsUpdateCampaignNegativeTargetingClause>}
   * @memberof SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent
   */
  campaignNegativeTargetingClauses: Array<SponsoredProductsUpdateCampaignNegativeTargetingClause>;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkCampaignNegativeTargetingClauseOperationResponse}
   * @memberof SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesResponseContent
   */
  campaignNegativeTargetingClauses: SponsoredProductsBulkCampaignNegativeTargetingClauseOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsCampaignsRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsCampaignsRequestContent {
  /**
   * An array of campaigns with updated values. Note: targetingType cannot be updated
   * @type {Array<SponsoredProductsUpdateCampaign>}
   * @memberof SponsoredProductsUpdateSponsoredProductsCampaignsRequestContent
   */
  campaigns: Array<SponsoredProductsUpdateCampaign>;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsCampaignsResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsCampaignsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkCampaignOperationResponse}
   * @memberof SponsoredProductsUpdateSponsoredProductsCampaignsResponseContent
   */
  campaigns: SponsoredProductsBulkCampaignOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsDraftCampaignsRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsDraftCampaignsRequestContent {
  /**
   * An array of drafts with updated values.
   * @type {Array<SponsoredProductsUpdateDraftCampaign>}
   * @memberof SponsoredProductsUpdateSponsoredProductsDraftCampaignsRequestContent
   */
  campaigns: Array<SponsoredProductsUpdateDraftCampaign>;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsDraftCampaignsResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsDraftCampaignsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkDraftCampaignOperationResponse}
   * @memberof SponsoredProductsUpdateSponsoredProductsDraftCampaignsResponseContent
   */
  campaigns: SponsoredProductsBulkDraftCampaignOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalAdGroupsRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalAdGroupsRequestContent {
  /**
   * An array of adGroups with updated values.
   * @type {Array<SponsoredProductsUpdateGlobalAdGroup>}
   * @memberof SponsoredProductsUpdateSponsoredProductsGlobalAdGroupsRequestContent
   */
  adGroups: Array<SponsoredProductsUpdateGlobalAdGroup>;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalAdGroupsResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalAdGroupsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkGlobalAdGroupOperationResponse}
   * @memberof SponsoredProductsUpdateSponsoredProductsGlobalAdGroupsResponseContent
   */
  adGroups: SponsoredProductsBulkGlobalAdGroupOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent {
  /**
   * An array of campaignNegativeKeywords with updated values.
   * @type {Array<SponsoredProductsUpdateGlobalCampaignNegativeKeyword>}
   * @memberof SponsoredProductsUpdateSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent
   */
  campaignNegativeKeywords: Array<SponsoredProductsUpdateGlobalCampaignNegativeKeyword>;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkGlobalCampaignNegativeKeywordOperationResponse}
   * @memberof SponsoredProductsUpdateSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent
   */
  campaignNegativeKeywords: SponsoredProductsBulkGlobalCampaignNegativeKeywordOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalCampaignsRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalCampaignsRequestContent {
  /**
   * An array of campaigns with updated values.
   * @type {Array<SponsoredProductsUpdateGlobalCampaign>}
   * @memberof SponsoredProductsUpdateSponsoredProductsGlobalCampaignsRequestContent
   */
  campaigns: Array<SponsoredProductsUpdateGlobalCampaign>;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalCampaignsResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalCampaignsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkGlobalCampaignOperationResponse}
   * @memberof SponsoredProductsUpdateSponsoredProductsGlobalCampaignsResponseContent
   */
  campaigns: SponsoredProductsBulkGlobalCampaignOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalKeywordsRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalKeywordsRequestContent {
  /**
   * An array of keywords with updated values.
   * @type {Array<SponsoredProductsUpdateGlobalKeyword>}
   * @memberof SponsoredProductsUpdateSponsoredProductsGlobalKeywordsRequestContent
   */
  keywords: Array<SponsoredProductsUpdateGlobalKeyword>;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalKeywordsResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalKeywordsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkGlobalKeywordOperationResponse}
   * @memberof SponsoredProductsUpdateSponsoredProductsGlobalKeywordsResponseContent
   */
  keywords: SponsoredProductsBulkGlobalKeywordOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalNegativeKeywordsRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalNegativeKeywordsRequestContent {
  /**
   * An array of negativeKeywords with updated values.
   * @type {Array<SponsoredProductsUpdateGlobalNegativeKeyword>}
   * @memberof SponsoredProductsUpdateSponsoredProductsGlobalNegativeKeywordsRequestContent
   */
  negativeKeywords: Array<SponsoredProductsUpdateGlobalNegativeKeyword>;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalNegativeKeywordsResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalNegativeKeywordsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkGlobalNegativeKeywordOperationResponse}
   * @memberof SponsoredProductsUpdateSponsoredProductsGlobalNegativeKeywordsResponseContent
   */
  negativeKeywords: SponsoredProductsBulkGlobalNegativeKeywordOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalNegativeTargetingClausesRequestContent {
  /**
   * An array of negativeTargeting with updated values.
   * @type {Array<SponsoredProductsUpdateGlobalNegativeTargetingClause>}
   * @memberof SponsoredProductsUpdateSponsoredProductsGlobalNegativeTargetingClausesRequestContent
   */
  negativeTargetingClauses: Array<SponsoredProductsUpdateGlobalNegativeTargetingClause>;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalNegativeTargetingClausesResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkGlobalNegativeTargetingClauseOperationResponse}
   * @memberof SponsoredProductsUpdateSponsoredProductsGlobalNegativeTargetingClausesResponseContent
   */
  negativeTargetingClauses: SponsoredProductsBulkGlobalNegativeTargetingClauseOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalProductAdsRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalProductAdsRequestContent {
  /**
   * An array of ads with updated values.
   * @type {Array<SponsoredProductsUpdateGlobalProductAd>}
   * @memberof SponsoredProductsUpdateSponsoredProductsGlobalProductAdsRequestContent
   */
  productAds: Array<SponsoredProductsUpdateGlobalProductAd>;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalProductAdsResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalProductAdsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkGlobalProductAdOperationResponse}
   * @memberof SponsoredProductsUpdateSponsoredProductsGlobalProductAdsResponseContent
   */
  productAds: SponsoredProductsBulkGlobalProductAdOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalTargetingClausesRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalTargetingClausesRequestContent {
  /**
   * An array of targetingClauses with updated values.
   * @type {Array<SponsoredProductsUpdateGlobalTargetingClause>}
   * @memberof SponsoredProductsUpdateSponsoredProductsGlobalTargetingClausesRequestContent
   */
  targetingClauses: Array<SponsoredProductsUpdateGlobalTargetingClause>;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalTargetingClausesResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalTargetingClausesResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkGlobalTargetingClauseOperationResponse}
   * @memberof SponsoredProductsUpdateSponsoredProductsGlobalTargetingClausesResponseContent
   */
  targetingClauses: SponsoredProductsBulkGlobalTargetingClauseOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsKeywordsRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsKeywordsRequestContent {
  /**
   * An array of keywords with updated values.
   * @type {Array<SponsoredProductsUpdateKeyword>}
   * @memberof SponsoredProductsUpdateSponsoredProductsKeywordsRequestContent
   */
  keywords: Array<SponsoredProductsUpdateKeyword>;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsKeywordsResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsKeywordsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkKeywordOperationResponse}
   * @memberof SponsoredProductsUpdateSponsoredProductsKeywordsResponseContent
   */
  keywords: SponsoredProductsBulkKeywordOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent {
  /**
   * An array of negativeKeywords with updated values.
   * @type {Array<SponsoredProductsUpdateNegativeKeyword>}
   * @memberof SponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent
   */
  negativeKeywords: Array<SponsoredProductsUpdateNegativeKeyword>;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsNegativeKeywordsResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsNegativeKeywordsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkNegativeKeywordOperationResponse}
   * @memberof SponsoredProductsUpdateSponsoredProductsNegativeKeywordsResponseContent
   */
  negativeKeywords: SponsoredProductsBulkNegativeKeywordOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent {
  /**
   * An array of negativeTargeting with updated values.
   * @type {Array<SponsoredProductsUpdateNegativeTargetingClause>}
   * @memberof SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent
   */
  negativeTargetingClauses: Array<SponsoredProductsUpdateNegativeTargetingClause>;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkNegativeTargetingClauseOperationResponse}
   * @memberof SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesResponseContent
   */
  negativeTargetingClauses: SponsoredProductsBulkNegativeTargetingClauseOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent {
  /**
   * An array of ads with updated values.
   * @type {Array<SponsoredProductsUpdateProductAd>}
   * @memberof SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent
   */
  productAds: Array<SponsoredProductsUpdateProductAd>;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkProductAdOperationResponse}
   * @memberof SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent
   */
  productAds: SponsoredProductsBulkProductAdOperationResponse;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent {
  /**
   * An array of targetingClauses with updated values.
   * @type {Array<SponsoredProductsUpdateTargetingClause>}
   * @memberof SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent
   */
  targetingClauses: Array<SponsoredProductsUpdateTargetingClause>;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent {
  /**
   *
   * @type {SponsoredProductsBulkTargetingClauseOperationResponse}
   * @memberof SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent
   */
  targetingClauses: SponsoredProductsBulkTargetingClauseOperationResponse;
}
/**
 * Request object for updating target promotion groups.
 * @export
 * @interface SponsoredProductsUpdateTargetPromotionGroupsRequestContent
 */
export interface SponsoredProductsUpdateTargetPromotionGroupsRequestContent {
  /**
   * The id of the target promotion group that will be updated.
   * @type {string}
   * @memberof SponsoredProductsUpdateTargetPromotionGroupsRequestContent
   */
  targetPromotionGroupId: string;
  /**
   * The updated name of the target promotion group.
   * @type {string}
   * @memberof SponsoredProductsUpdateTargetPromotionGroupsRequestContent
   */
  targetPromotionGroupName?: string;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateTargetPromotionGroupsResponseContent
 */
export interface SponsoredProductsUpdateTargetPromotionGroupsResponseContent {
  /**
   *
   * @type {SponsoredProductsTargetPromotionGroupV2}
   * @memberof SponsoredProductsUpdateTargetPromotionGroupsResponseContent
   */
  targetPromotionGroup?: SponsoredProductsTargetPromotionGroupV2;
}
/**
 *
 * @export
 * @interface SponsoredProductsUpdateTargetingClause
 */
export interface SponsoredProductsUpdateTargetingClause {
  /**
   * The targeting expression.
   * @type {Array<SponsoredProductsTargetingExpressionPredicateWithoutOther>}
   * @memberof SponsoredProductsUpdateTargetingClause
   */
  expression?: Array<SponsoredProductsTargetingExpressionPredicateWithoutOther>;
  /**
   * The target identifier
   * @type {string}
   * @memberof SponsoredProductsUpdateTargetingClause
   */
  targetId: string;
  /**
   *
   * @type {SponsoredProductsExpressionTypeWithoutOther}
   * @memberof SponsoredProductsUpdateTargetingClause
   */
  expressionType?: SponsoredProductsExpressionTypeWithoutOther;
  /**
   *
   * @type {SponsoredProductsCreateOrUpdateEntityState}
   * @memberof SponsoredProductsUpdateTargetingClause
   */
  state?: SponsoredProductsCreateOrUpdateEntityState;
  /**
   * The bid for ads sourced using the target. Targets that do not have bid values in listTargetingClauses will inherit the defaultBid from the adGroup level. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
   * @type {number}
   * @memberof SponsoredProductsUpdateTargetingClause
   */
  bid?: number | null;
}

/**
 *
 * @export
 * @enum {string}
 */

export const SponsoredProductsValueLimitErrorReason = {
  TooLow: 'TOO_LOW',
  TooHigh: 'TOO_HIGH',
  InvalidEnumValue: 'INVALID_ENUM_VALUE',
  NotInList: 'NOT_IN_LIST',
} as const;

export type SponsoredProductsValueLimitErrorReason =
  (typeof SponsoredProductsValueLimitErrorReason)[keyof typeof SponsoredProductsValueLimitErrorReason];

/**
 * The budget rule state.
 * @export
 * @enum {string}
 */

export const State = {
  Active: 'ACTIVE',
  Paused: 'PAUSED',
} as const;

export type State = (typeof State)[keyof typeof State];

/**
 * Response object to get number of targetable asins for refinements provided by the user
 * @export
 * @interface TargetableAsinCounts
 */
export interface TargetableAsinCounts {
  /**
   *
   * @type {IntegerRange}
   * @memberof TargetableAsinCounts
   */
  asinCounts?: IntegerRange;
}
/**
 * Response object containing all targetable categories for the advertiser\'s marketplace. ID is the category ID. NA is the name. CH is the list of child categories. TA is if the category is targetable. AsinCountRange is the AsinCounts of the node. Version 4 adds the number of targetable ASINs to each category.
 * @export
 * @interface TargetableCategories
 */
export interface TargetableCategories {
  /**
   *
   * @type {string}
   * @memberof TargetableCategories
   */
  categoryTree?: string;
}
/**
 * Response object containing all targetable categories for the advertiser\'s marketplace in a language of preference (LoP) provide by the locale query parameter. ID is the category ID. NA is the name. TN is the translated name in the language of preference. CH is the list of child categories. TA is if the category is targetable. AsinCountRange is the AsinCounts of the node. Version 4 adds the number of targetable ASINs to each category.
 * @export
 * @interface TargetableCategoriesLoP
 */
export interface TargetableCategoriesLoP {
  /**
   *
   * @type {string}
   * @memberof TargetableCategoriesLoP
   */
  categoryTree?: string;
}
/**
 *
 * @export
 * @interface TargetingClauseSetupError
 */
export interface TargetingClauseSetupError {
  /**
   *
   * @type {SponsoredProductsTargetingClauseSetupError}
   * @memberof TargetingClauseSetupError
   */
  targetingClauseSetupError: SponsoredProductsTargetingClauseSetupError;
}
/**
 * The targeting expression. The `type` property specifies the targeting option. Use `CLOSE_MATCH` to match your auto targeting ads closely to the specified value. Use `LOOSE_MATCH` to match your auto targeting ads broadly to the specified value. Use `SUBSTITUTES` to display your auto targeting ads along with substitutable products. Use `COMPLEMENTS` to display your auto targeting ads along with affiliated products. Use `KEYWORD_BROAD_MATCH` to broadly match your keyword targeting ads with search queries. Use `KEYWORD_EXACT_MATCH` to exactly match your keyword targeting ads with search queries. Use `KEYWORD_PHRASE_MATCH` to match your keyword targeting ads with search phrases. your keyword targeting ads with search phrases.
 * @export
 * @interface TargetingExpression
 */
export interface TargetingExpression {
  /**
   *
   * @type {string}
   * @memberof TargetingExpression
   */
  type: TargetingExpressionTypeEnum;
  /**
   * The targeting expression value.
   * @type {string}
   * @memberof TargetingExpression
   */
  value?: string;
}

export const TargetingExpressionTypeEnum = {
  CloseMatch: 'CLOSE_MATCH',
  LooseMatch: 'LOOSE_MATCH',
  Substitutes: 'SUBSTITUTES',
  Complements: 'COMPLEMENTS',
  KeywordBroadMatch: 'KEYWORD_BROAD_MATCH',
  KeywordExactMatch: 'KEYWORD_EXACT_MATCH',
  KeywordPhraseMatch: 'KEYWORD_PHRASE_MATCH',
} as const;

export type TargetingExpressionTypeEnum = (typeof TargetingExpressionTypeEnum)[keyof typeof TargetingExpressionTypeEnum];

/**
 * The targeting expression. The `type` property specifies the targeting option. Use `CLOSE_MATCH` to match your auto targeting ads closely to the specified value. Use `LOOSE_MATCH` to match your auto targeting ads broadly to the specified value. Use `SUBSTITUTES` to display your auto targeting ads along with substitutable products. Use `COMPLEMENTS` to display your auto targeting ads along with affiliated products. Use `KEYWORD_BROAD_MATCH` to broadly match your keyword targeting ads with search queries. Use `KEYWORD_EXACT_MATCH` to exactly match your keyword targeting ads with search queries. Use `KEYWORD_PHRASE_MATCH` to match your keyword targeting ads with search phrases. your keyword targeting ads with search phrases. Use `PAT_ASIN` to match your product attribute targeting ads with product ASIN. Use `PAT_CATEGORY` to match your product attribute targeting ads with product category. Use `PAT_CATEGORY_REFINEMENT` to match your product attribute targeting ads with product attribute, including brand, price, rating, prime shipping eligible, age range and genre. Use `KEYWORD_GROUP` to match your keyword targeting ads with keyword group.
 * @export
 * @interface TargetingExpressionV4
 */
export interface TargetingExpressionV4 {
  /**
   *
   * @type {string}
   * @memberof TargetingExpressionV4
   */
  type: TargetingExpressionV4TypeEnum;
  /**
   * The targeting expression value.
   * @type {string}
   * @memberof TargetingExpressionV4
   */
  value?: string;
}

export const TargetingExpressionV4TypeEnum = {
  CloseMatch: 'CLOSE_MATCH',
  LooseMatch: 'LOOSE_MATCH',
  Substitutes: 'SUBSTITUTES',
  Complements: 'COMPLEMENTS',
  KeywordBroadMatch: 'KEYWORD_BROAD_MATCH',
  KeywordExactMatch: 'KEYWORD_EXACT_MATCH',
  KeywordPhraseMatch: 'KEYWORD_PHRASE_MATCH',
  PatAsin: 'PAT_ASIN',
  PatCategory: 'PAT_CATEGORY',
  PatCategoryRefinement: 'PAT_CATEGORY_REFINEMENT',
  KeywordGroup: 'KEYWORD_GROUP',
} as const;

export type TargetingExpressionV4TypeEnum = (typeof TargetingExpressionV4TypeEnum)[keyof typeof TargetingExpressionV4TypeEnum];

/**
 * Contains suggested recommendation for the auto targeting group.
 * @export
 * @interface TargetingGroupBidRecommendation
 */
export interface TargetingGroupBidRecommendation {
  /**
   * The suggested bid value associated with this targeting.
   * @type {number}
   * @memberof TargetingGroupBidRecommendation
   */
  suggestedBid?: number;
  /**
   * The target identifier.
   * @type {string}
   * @memberof TargetingGroupBidRecommendation
   */
  targetId?: string;
  /**
   * The type of targeting group expression. | Value | Description | | --- | --- | | `LOOSE_MATCH` | This will show your ad to shoppers who use search terms loosely related to your products.| | `CLOSE_MATCH` | This will show your ad to shoppers who use search terms closely related to your products.| | `COMPLEMENTS` | This will show your ad to shoppers who view the detail pages of products that complement your product.| | `SUBSTITUTES` | This will show your ad to shoppers who use detail pages of products similar to yours.|
   * @type {string}
   * @memberof TargetingGroupBidRecommendation
   */
  targetingGroupExpression?: TargetingGroupBidRecommendationTargetingGroupExpressionEnum;
  /**
   * Type of suggested action.
   * @type {string}
   * @memberof TargetingGroupBidRecommendation
   */
  action?: TargetingGroupBidRecommendationActionEnum;
  /**
   * The ad group identifier.
   * @type {string}
   * @memberof TargetingGroupBidRecommendation
   */
  adGroupId?: string;
}

export const TargetingGroupBidRecommendationTargetingGroupExpressionEnum = {
  CloseMatch: 'CLOSE_MATCH',
  LooseMatch: 'LOOSE_MATCH',
  Substitutes: 'SUBSTITUTES',
  Complements: 'COMPLEMENTS',
} as const;

export type TargetingGroupBidRecommendationTargetingGroupExpressionEnum =
  (typeof TargetingGroupBidRecommendationTargetingGroupExpressionEnum)[keyof typeof TargetingGroupBidRecommendationTargetingGroupExpressionEnum];
export const TargetingGroupBidRecommendationActionEnum = {
  Add: 'ADD',
  Remove: 'REMOVE',
  Increase: 'INCREASE',
  Decrease: 'DECREASE',
} as const;

export type TargetingGroupBidRecommendationActionEnum =
  (typeof TargetingGroupBidRecommendationActionEnum)[keyof typeof TargetingGroupBidRecommendationActionEnum];

/**
 * The bid recommendation theme. This API currently supports `CONVERSION_OPPORTUNITIES`, `PRIME_DAY`, `FALL_PRIME_DEAL_EVENT`, and `BFCM_HOLIDAY` themes.
 * @export
 * @enum {string}
 */

export const Theme = {
  ConversionOpportunities: 'CONVERSION_OPPORTUNITIES',
  PrimeDay: 'PRIME_DAY',
  FallPrimeDealEvent: 'FALL_PRIME_DEAL_EVENT',
  BfcmHoliday: 'BFCM_HOLIDAY',
} as const;

export type Theme = (typeof Theme)[keyof typeof Theme];

/**
 *
 * @export
 * @interface ThemeBasedBidRecommendation
 */
export interface ThemeBasedBidRecommendation {
  /**
   *
   * @type {Theme}
   * @memberof ThemeBasedBidRecommendation
   */
  theme: Theme;
  /**
   * The bid recommendations for targeting expressions listed in the request.
   * @type {Array<BidRecommendationPerTargetingExpression>}
   * @memberof ThemeBasedBidRecommendation
   */
  bidRecommendationsForTargetingExpressions: Array<BidRecommendationPerTargetingExpression>;
  /**
   *
   * @type {ImpactMetrics}
   * @memberof ThemeBasedBidRecommendation
   */
  impactMetrics?: ImpactMetrics | null;
}

/**
 * A list of bid recommendation themes and associated bid recommendations.
 * @export
 * @interface ThemeBasedBidRecommendationResponse
 */
export interface ThemeBasedBidRecommendationResponse {
  /**
   *
   * @type {Array<ThemeBasedBidRecommendation>}
   * @memberof ThemeBasedBidRecommendationResponse
   */
  bidRecommendations: Array<ThemeBasedBidRecommendation>;
}
/**
 * A list of bid recommendation themes and associated bid recommendations.
 * @export
 * @interface ThemeBasedBidRecommendationResponseV4
 */
export interface ThemeBasedBidRecommendationResponseV4 {
  /**
   *
   * @type {Array<ThemeBasedBidRecommendationV4>}
   * @memberof ThemeBasedBidRecommendationResponseV4
   */
  bidRecommendations: Array<ThemeBasedBidRecommendationV4>;
}
/**
 * A list of bid recommendation themes and associated bid recommendations.
 * @export
 * @interface ThemeBasedBidRecommendationResponseV5
 */
export interface ThemeBasedBidRecommendationResponseV5 {
  /**
   *
   * @type {Array<ThemeBasedBidRecommendationV5>}
   * @memberof ThemeBasedBidRecommendationResponseV5
   */
  bidRecommendations: Array<ThemeBasedBidRecommendationV5>;
}
/**
 *
 * @export
 * @interface ThemeBasedBidRecommendationV4
 */
export interface ThemeBasedBidRecommendationV4 {
  /**
   *
   * @type {Theme}
   * @memberof ThemeBasedBidRecommendationV4
   */
  theme: Theme;
  /**
   * The bid recommendations for targeting expressions listed in the request.
   * @type {Array<BidRecommendationPerTargetingExpressionV4>}
   * @memberof ThemeBasedBidRecommendationV4
   */
  bidRecommendationsForTargetingExpressions: Array<BidRecommendationPerTargetingExpressionV4>;
}

/**
 *
 * @export
 * @interface ThemeBasedBidRecommendationV5
 */
export interface ThemeBasedBidRecommendationV5 {
  /**
   *
   * @type {Theme}
   * @memberof ThemeBasedBidRecommendationV5
   */
  theme: Theme;
  /**
   * The bid analyses for targeting expressions listed in the request.
   * @type {Array<BidAnalysesPerTargetingExpression>}
   * @memberof ThemeBasedBidRecommendationV5
   */
  bidAnalysesForTargetingExpressions?: Array<BidAnalysesPerTargetingExpression>;
  /**
   * The bid recommendations for targeting expressions listed in the request.
   * @type {Array<BidRecommendationPerTargetingExpressionV5>}
   * @memberof ThemeBasedBidRecommendationV5
   */
  bidRecommendationsForTargetingExpressions: Array<BidRecommendationPerTargetingExpressionV5>;
}

/**
 * Recommended asins grouped by theme attribute.
 * @export
 * @interface ThemeRecommendation
 */
export interface ThemeRecommendation {
  /**
   * A theme name representing the context around the recommended list of ASINs.
   * @type {string}
   * @memberof ThemeRecommendation
   */
  description?: string;
  /**
   * List of recommended ASINs under current theme.
   * @type {Array<string>}
   * @memberof ThemeRecommendation
   */
  recommendedAsins?: Array<string>;
  /**
   * A theme name representing the context around the recommended list of ASINs.
   * @type {string}
   * @memberof ThemeRecommendation
   */
  theme?: string;
}
/**
 *
 * @export
 * @interface ThemedBid
 */
export interface ThemedBid {
  /**
   *
   * @type {BidValues}
   * @memberof ThemedBid
   */
  suggestedBid?: BidValues;
  /**
   * Keyword match type. The default value will be BROAD.
   * @type {string}
   * @memberof ThemedBid
   */
  matchType?: ThemedBidMatchTypeEnum;
  /**
   * The keyword target rank.
   * @type {number}
   * @memberof ThemedBid
   */
  rank?: number;
  /**
   * The theme of the bid recommendation. The default theme is CONVERSION_OPPORTUNITIES.
   * @type {string}
   * @memberof ThemedBid
   */
  theme?: string;
  /**
   * The bid value for the keyword, in minor currency units (example: cents). The default value will be the suggested bid.
   * @type {number}
   * @memberof ThemedBid
   */
  bid?: number;
}

export const ThemedBidMatchTypeEnum = {
  Broad: 'BROAD',
  Exact: 'EXACT',
  Phrase: 'PHRASE',
} as const;

export type ThemedBidMatchTypeEnum = (typeof ThemedBidMatchTypeEnum)[keyof typeof ThemedBidMatchTypeEnum];

/**
 *
 * @export
 * @interface ThrottledError
 */
export interface ThrottledError {
  /**
   *
   * @type {SponsoredProductsThrottledError}
   * @memberof ThrottledError
   */
  throttledError: SponsoredProductsThrottledError;
}
/**
 * Returns information about a ThrottlingException.
 * @export
 * @interface ThrottlingException
 */
export interface ThrottlingException {
  /**
   * The HTTP status code of the response.
   * @type {string}
   * @memberof ThrottlingException
   */
  code?: string;
  /**
   * A human-readable description of the response.
   * @type {string}
   * @memberof ThrottlingException
   */
  details?: string;
}
/**
 *
 * @export
 * @interface TimeOfDay
 */
export interface TimeOfDay {
  /**
   * The start time of intra-day budget rule window in the format \'hh:mm:ss\'
   * @type {string}
   * @memberof TimeOfDay
   */
  startTime?: string;
  /**
   * The end time of intra-day budget rule window in the format \'hh:mm:ss\'. Required to be greater than start-time.
   * @type {string}
   * @memberof TimeOfDay
   */
  endTime?: string;
}
/**
 * Returns information about an UnauthorizedException.
 * @export
 * @interface UnauthorizedException
 */
export interface UnauthorizedException {
  /**
   * The HTTP status code of the response.
   * @type {string}
   * @memberof UnauthorizedException
   */
  code?: string;
  /**
   * A human-readable description of the response.
   * @type {string}
   * @memberof UnauthorizedException
   */
  details?: string;
}
/**
 * Returns information about UnprocessableEntityException.
 * @export
 * @interface UnprocessableEntityException
 */
export interface UnprocessableEntityException {
  /**
   * The HTTP status code of the response.
   * @type {string}
   * @memberof UnprocessableEntityException
   */
  code?: string;
  /**
   * A human-readable description of the response.
   * @type {string}
   * @memberof UnprocessableEntityException
   */
  details?: string;
}
/**
 *
 * @export
 * @interface UpdateBudgetRulesResponse
 */
export interface UpdateBudgetRulesResponse {
  /**
   *
   * @type {Array<BudgetRuleResponse>}
   * @memberof UpdateBudgetRulesResponse
   */
  responses?: Array<BudgetRuleResponse>;
}
/**
 * Request object for updating budget rule for RMS campaign
 * @export
 * @interface UpdateRMSBudgetRulesRequest
 */
export interface UpdateRMSBudgetRulesRequest {
  /**
   * A list of budget rule details.
   * @type {Array<RMSBudgetRule>}
   * @memberof UpdateRMSBudgetRulesRequest
   */
  budgetRulesDetails?: Array<RMSBudgetRule>;
}
/**
 *
 * @export
 * @interface UpdateSBBudgetRulesRequest
 */
export interface UpdateSBBudgetRulesRequest {
  /**
   * A list of budget rule details.
   * @type {Array<SBBudgetRule>}
   * @memberof UpdateSBBudgetRulesRequest
   */
  budgetRulesDetails?: Array<SBBudgetRule>;
}
/**
 * Request object for updating budget rule for SD campaign
 * @export
 * @interface UpdateSDBudgetRulesRequest
 */
export interface UpdateSDBudgetRulesRequest {
  /**
   * A list of budget rule details.
   * @type {Array<SDBudgetRule>}
   * @memberof UpdateSDBudgetRulesRequest
   */
  budgetRulesDetails?: Array<SDBudgetRule>;
}
/**
 * Request object for updating budget rule for SP campaign
 * @export
 * @interface UpdateSPBudgetRulesRequest
 */
export interface UpdateSPBudgetRulesRequest {
  /**
   * A list of budget rule details.
   * @type {Array<SPBudgetRule>}
   * @memberof UpdateSPBudgetRulesRequest
   */
  budgetRulesDetails?: Array<SPBudgetRule>;
}
/**
 *
 * @export
 * @interface UpdateSPCampaignOptimizationRuleResponse
 */
export interface UpdateSPCampaignOptimizationRuleResponse {
  /**
   * The persistent rule identifier.
   * @type {string}
   * @memberof UpdateSPCampaignOptimizationRuleResponse
   */
  campaignOptimizationId?: string;
  /**
   * An enumerated success or error code for machine use.
   * @type {string}
   * @memberof UpdateSPCampaignOptimizationRuleResponse
   */
  code?: string;
  /**
   * A human-readable description of the error, if unsuccessful
   * @type {string}
   * @memberof UpdateSPCampaignOptimizationRuleResponse
   */
  details?: string;
}
/**
 * Request object for updating campaign optimization rule
 * @export
 * @interface UpdateSPCampaignOptimizationRulesRequest
 */
export interface UpdateSPCampaignOptimizationRulesRequest {
  /**
   *
   * @type {RecurrenceType}
   * @memberof UpdateSPCampaignOptimizationRulesRequest
   */
  recurrence: RecurrenceType;
  /**
   *
   * @type {RuleAction}
   * @memberof UpdateSPCampaignOptimizationRulesRequest
   */
  ruleAction: RuleAction;
  /**
   * The persistent rule identifier.
   * @type {string}
   * @memberof UpdateSPCampaignOptimizationRulesRequest
   */
  campaignOptimizationId: string;
  /**
   *
   * @type {Array<RuleCondition>}
   * @memberof UpdateSPCampaignOptimizationRulesRequest
   */
  ruleCondition: Array<RuleCondition>;
  /**
   *
   * @type {RuleType}
   * @memberof UpdateSPCampaignOptimizationRulesRequest
   */
  ruleType: RuleType;
  /**
   * The campaign optimization rule name.
   * @type {string}
   * @memberof UpdateSPCampaignOptimizationRulesRequest
   */
  ruleName?: string;
  /**
   * A list of campaign ids
   * @type {Array<string>}
   * @memberof UpdateSPCampaignOptimizationRulesRequest
   */
  campaignIds: Array<string>;
}

/**
 * Returns information about a ValidationException.
 * @export
 * @interface ValidationException
 */
export interface ValidationException {
  /**
   * The HTTP status code of the response.
   * @type {string}
   * @memberof ValidationException
   */
  code?: string;
  /**
   * A human-readable description of the response.
   * @type {string}
   * @memberof ValidationException
   */
  details?: string;
}
/**
 * Metrics benchmark values.
 * @export
 * @interface Values
 */
export interface Values {
  /**
   *
   * @type {Conversions}
   * @memberof Values
   */
  conversions?: Conversions;
  /**
   *
   * @type {Clicks}
   * @memberof Values
   */
  clicks?: Clicks;
  /**
   *
   * @type {Impressions}
   * @memberof Values
   */
  impressions?: Impressions;
}

/**
 * AdGroupsApi - axios parameter creator
 * @export
 */
export const AdGroupsApiAxiosParamCreator = function (configuration?: Configuration) {
  return {
    /**
     * Create ad groups  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsCreateSponsoredProductsAdGroupsRequestContent} sponsoredProductsCreateSponsoredProductsAdGroupsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createSponsoredProductsAdGroups: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateSponsoredProductsAdGroupsRequestContent: SponsoredProductsCreateSponsoredProductsAdGroupsRequestContent,
      prefer?: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('createSponsoredProductsAdGroups', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('createSponsoredProductsAdGroups', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'sponsoredProductsCreateSponsoredProductsAdGroupsRequestContent' is not null or undefined
      assertParamExists(
        'createSponsoredProductsAdGroups',
        'sponsoredProductsCreateSponsoredProductsAdGroupsRequestContent',
        sponsoredProductsCreateSponsoredProductsAdGroupsRequestContent
      );
      const localVarPath = `/sp/adGroups`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spAdGroup.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      if (prefer != null) {
        localVarHeaderParameter['Prefer'] = String(prefer);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsCreateSponsoredProductsAdGroupsRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * Delete ad groups  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent} sponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteSponsoredProductsAdGroups: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent: SponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('deleteSponsoredProductsAdGroups', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('deleteSponsoredProductsAdGroups', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'sponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent' is not null or undefined
      assertParamExists(
        'deleteSponsoredProductsAdGroups',
        'sponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent',
        sponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent
      );
      const localVarPath = `/sp/adGroups/delete`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spAdGroup.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * List ad groups  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsListSponsoredProductsAdGroupsRequestContent} [sponsoredProductsListSponsoredProductsAdGroupsRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listSponsoredProductsAdGroups: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListSponsoredProductsAdGroupsRequestContent?: SponsoredProductsListSponsoredProductsAdGroupsRequestContent,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('listSponsoredProductsAdGroups', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('listSponsoredProductsAdGroups', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      const localVarPath = `/sp/adGroups/list`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spAdGroup.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsListSponsoredProductsAdGroupsRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * Update ad groups  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent} sponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateSponsoredProductsAdGroups: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent: SponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent,
      prefer?: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('updateSponsoredProductsAdGroups', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('updateSponsoredProductsAdGroups', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'sponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent' is not null or undefined
      assertParamExists(
        'updateSponsoredProductsAdGroups',
        'sponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent',
        sponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent
      );
      const localVarPath = `/sp/adGroups`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spAdGroup.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      if (prefer != null) {
        localVarHeaderParameter['Prefer'] = String(prefer);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
  };
};

/**
 * AdGroupsApi - functional programming interface
 * @export
 */
export const AdGroupsApiFp = function (configuration?: Configuration) {
  const localVarAxiosParamCreator = AdGroupsApiAxiosParamCreator(configuration);
  return {
    /**
     * Create ad groups  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsCreateSponsoredProductsAdGroupsRequestContent} sponsoredProductsCreateSponsoredProductsAdGroupsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async createSponsoredProductsAdGroups(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateSponsoredProductsAdGroupsRequestContent: SponsoredProductsCreateSponsoredProductsAdGroupsRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsCreateSponsoredProductsAdGroupsResponseContent>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.createSponsoredProductsAdGroups(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsCreateSponsoredProductsAdGroupsRequestContent,
        prefer,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath = operationServerMap['AdGroupsApi.createSponsoredProductsAdGroups']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * Delete ad groups  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent} sponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async deleteSponsoredProductsAdGroups(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent: SponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsDeleteSponsoredProductsAdGroupsResponseContent>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteSponsoredProductsAdGroups(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath = operationServerMap['AdGroupsApi.deleteSponsoredProductsAdGroups']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * List ad groups  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsListSponsoredProductsAdGroupsRequestContent} [sponsoredProductsListSponsoredProductsAdGroupsRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async listSponsoredProductsAdGroups(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListSponsoredProductsAdGroupsRequestContent?: SponsoredProductsListSponsoredProductsAdGroupsRequestContent,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsListSponsoredProductsAdGroupsResponseContent>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.listSponsoredProductsAdGroups(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsListSponsoredProductsAdGroupsRequestContent,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath = operationServerMap['AdGroupsApi.listSponsoredProductsAdGroups']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * Update ad groups  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent} sponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async updateSponsoredProductsAdGroups(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent: SponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsUpdateSponsoredProductsAdGroupsResponseContent>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.updateSponsoredProductsAdGroups(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent,
        prefer,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath = operationServerMap['AdGroupsApi.updateSponsoredProductsAdGroups']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
  };
};

/**
 * AdGroupsApi - factory interface
 * @export
 */
export const AdGroupsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
  const localVarFp = AdGroupsApiFp(configuration);
  return {
    /**
     * Create ad groups  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsCreateSponsoredProductsAdGroupsRequestContent} sponsoredProductsCreateSponsoredProductsAdGroupsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createSponsoredProductsAdGroups(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateSponsoredProductsAdGroupsRequestContent: SponsoredProductsCreateSponsoredProductsAdGroupsRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsCreateSponsoredProductsAdGroupsResponseContent> {
      return localVarFp
        .createSponsoredProductsAdGroups(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsCreateSponsoredProductsAdGroupsRequestContent,
          prefer,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * Delete ad groups  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent} sponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteSponsoredProductsAdGroups(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent: SponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsDeleteSponsoredProductsAdGroupsResponseContent> {
      return localVarFp
        .deleteSponsoredProductsAdGroups(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * List ad groups  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsListSponsoredProductsAdGroupsRequestContent} [sponsoredProductsListSponsoredProductsAdGroupsRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listSponsoredProductsAdGroups(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListSponsoredProductsAdGroupsRequestContent?: SponsoredProductsListSponsoredProductsAdGroupsRequestContent,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsListSponsoredProductsAdGroupsResponseContent> {
      return localVarFp
        .listSponsoredProductsAdGroups(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsListSponsoredProductsAdGroupsRequestContent,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * Update ad groups  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent} sponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateSponsoredProductsAdGroups(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent: SponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsUpdateSponsoredProductsAdGroupsResponseContent> {
      return localVarFp
        .updateSponsoredProductsAdGroups(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent,
          prefer,
          options
        )
        .then(request => request(axios, basePath));
    },
  };
};

/**
 * AdGroupsApi - object-oriented interface
 * @export
 * @class AdGroupsApi
 * @extends {BaseAPI}
 */
export class AdGroupsApi extends BaseAPI {
  /**
   * Create ad groups  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsCreateSponsoredProductsAdGroupsRequestContent} sponsoredProductsCreateSponsoredProductsAdGroupsRequestContent
   * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof AdGroupsApi
   */
  public createSponsoredProductsAdGroups(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsCreateSponsoredProductsAdGroupsRequestContent: SponsoredProductsCreateSponsoredProductsAdGroupsRequestContent,
    prefer?: string,
    options?: RawAxiosRequestConfig
  ) {
    return AdGroupsApiFp(this.configuration)
      .createSponsoredProductsAdGroups(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsCreateSponsoredProductsAdGroupsRequestContent,
        prefer,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * Delete ad groups  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent} sponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof AdGroupsApi
   */
  public deleteSponsoredProductsAdGroups(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent: SponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent,
    options?: RawAxiosRequestConfig
  ) {
    return AdGroupsApiFp(this.configuration)
      .deleteSponsoredProductsAdGroups(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * List ad groups  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsListSponsoredProductsAdGroupsRequestContent} [sponsoredProductsListSponsoredProductsAdGroupsRequestContent]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof AdGroupsApi
   */
  public listSponsoredProductsAdGroups(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsListSponsoredProductsAdGroupsRequestContent?: SponsoredProductsListSponsoredProductsAdGroupsRequestContent,
    options?: RawAxiosRequestConfig
  ) {
    return AdGroupsApiFp(this.configuration)
      .listSponsoredProductsAdGroups(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsListSponsoredProductsAdGroupsRequestContent,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * Update ad groups  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent} sponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent
   * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof AdGroupsApi
   */
  public updateSponsoredProductsAdGroups(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent: SponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent,
    prefer?: string,
    options?: RawAxiosRequestConfig
  ) {
    return AdGroupsApiFp(this.configuration)
      .updateSponsoredProductsAdGroups(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent,
        prefer,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }
}

/**
 * BudgetRecommendationNewCampaignsApi - axios parameter creator
 * @export
 */
export const BudgetRecommendationNewCampaignsApiAxiosParamCreator = function (configuration?: Configuration) {
  return {
    /**
     * Creates daily budget recommendation along with benchmark metrics when creating a new campaign.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @param {InitialBudgetRecommendationRequest} [initialBudgetRecommendationRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBudgetRecommendation: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      initialBudgetRecommendationRequest?: InitialBudgetRecommendationRequest,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('getBudgetRecommendation', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('getBudgetRecommendation', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      const localVarPath = `/sp/campaigns/initialBudgetRecommendation`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spinitialbudgetrecommendation.v3.4+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(initialBudgetRecommendationRequest, localVarRequestOptions, configuration);

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
  };
};

/**
 * BudgetRecommendationNewCampaignsApi - functional programming interface
 * @export
 */
export const BudgetRecommendationNewCampaignsApiFp = function (configuration?: Configuration) {
  const localVarAxiosParamCreator = BudgetRecommendationNewCampaignsApiAxiosParamCreator(configuration);
  return {
    /**
     * Creates daily budget recommendation along with benchmark metrics when creating a new campaign.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @param {InitialBudgetRecommendationRequest} [initialBudgetRecommendationRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async getBudgetRecommendation(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      initialBudgetRecommendationRequest?: InitialBudgetRecommendationRequest,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InitialBudgetRecommendationResponse>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.getBudgetRecommendation(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        initialBudgetRecommendationRequest,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['BudgetRecommendationNewCampaignsApi.getBudgetRecommendation']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
  };
};

/**
 * BudgetRecommendationNewCampaignsApi - factory interface
 * @export
 */
export const BudgetRecommendationNewCampaignsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
  const localVarFp = BudgetRecommendationNewCampaignsApiFp(configuration);
  return {
    /**
     * Creates daily budget recommendation along with benchmark metrics when creating a new campaign.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @param {InitialBudgetRecommendationRequest} [initialBudgetRecommendationRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBudgetRecommendation(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      initialBudgetRecommendationRequest?: InitialBudgetRecommendationRequest,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<InitialBudgetRecommendationResponse> {
      return localVarFp
        .getBudgetRecommendation(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, initialBudgetRecommendationRequest, options)
        .then(request => request(axios, basePath));
    },
  };
};

/**
 * BudgetRecommendationNewCampaignsApi - object-oriented interface
 * @export
 * @class BudgetRecommendationNewCampaignsApi
 * @extends {BaseAPI}
 */
export class BudgetRecommendationNewCampaignsApi extends BaseAPI {
  /**
   * Creates daily budget recommendation along with benchmark metrics when creating a new campaign.
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
   * @param {InitialBudgetRecommendationRequest} [initialBudgetRecommendationRequest]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof BudgetRecommendationNewCampaignsApi
   */
  public getBudgetRecommendation(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    initialBudgetRecommendationRequest?: InitialBudgetRecommendationRequest,
    options?: RawAxiosRequestConfig
  ) {
    return BudgetRecommendationNewCampaignsApiFp(this.configuration)
      .getBudgetRecommendation(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, initialBudgetRecommendationRequest, options)
      .then(request => request(this.axios, this.basePath));
  }
}

/**
 * BudgetRecommendationsAndMissedOpportunitiesApi - axios parameter creator
 * @export
 */
export const BudgetRecommendationsAndMissedOpportunitiesApiAxiosParamCreator = function (configuration?: Configuration) {
  return {
    /**
     * Given a list of campaigns as input, this API provides the following metrics -  <br> <b>1. Recommended daily budget - </b> Estimated daily budget needed to keep the campaign in budget for the full 24-hour period in a day. Consider this daily budget to minimize your campaign\'s chances of running out of budget. <br> <b>2. Percent time in budget </b> - Actual average percentage of time the campaign was in budget between the start and end date specified in the response. Note: value -1 means we don’t have enough information to compute the campaign’s percent time in budget. <br> <b>3. Estimated missed impressions, clicks and sales </b> - These are the estimated range of additional impressions, clicks and sales the campaign might have generated between the start and end date specified in the response had it been in budget 100% of the time. These are estimates based on historical traffic and the campaign\'s past performance (e.g. impressions & clicks generated) but not guaranteed.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Get recommended daily budget and estimated missed opportunities for campaigns.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {BudgetRecommendationRequest} budgetRecommendationRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBudgetRecommendations: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      budgetRecommendationRequest: BudgetRecommendationRequest,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('getBudgetRecommendations', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('getBudgetRecommendations', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'budgetRecommendationRequest' is not null or undefined
      assertParamExists('getBudgetRecommendations', 'budgetRecommendationRequest', budgetRecommendationRequest);
      const localVarPath = `/sp/campaigns/budgetRecommendations`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.budgetrecommendation.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(budgetRecommendationRequest, localVarRequestOptions, configuration);

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
  };
};

/**
 * BudgetRecommendationsAndMissedOpportunitiesApi - functional programming interface
 * @export
 */
export const BudgetRecommendationsAndMissedOpportunitiesApiFp = function (configuration?: Configuration) {
  const localVarAxiosParamCreator = BudgetRecommendationsAndMissedOpportunitiesApiAxiosParamCreator(configuration);
  return {
    /**
     * Given a list of campaigns as input, this API provides the following metrics -  <br> <b>1. Recommended daily budget - </b> Estimated daily budget needed to keep the campaign in budget for the full 24-hour period in a day. Consider this daily budget to minimize your campaign\'s chances of running out of budget. <br> <b>2. Percent time in budget </b> - Actual average percentage of time the campaign was in budget between the start and end date specified in the response. Note: value -1 means we don’t have enough information to compute the campaign’s percent time in budget. <br> <b>3. Estimated missed impressions, clicks and sales </b> - These are the estimated range of additional impressions, clicks and sales the campaign might have generated between the start and end date specified in the response had it been in budget 100% of the time. These are estimates based on historical traffic and the campaign\'s past performance (e.g. impressions & clicks generated) but not guaranteed.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Get recommended daily budget and estimated missed opportunities for campaigns.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {BudgetRecommendationRequest} budgetRecommendationRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async getBudgetRecommendations(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      budgetRecommendationRequest: BudgetRecommendationRequest,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BudgetRecommendationResponse>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.getBudgetRecommendations(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        budgetRecommendationRequest,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['BudgetRecommendationsAndMissedOpportunitiesApi.getBudgetRecommendations']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
  };
};

/**
 * BudgetRecommendationsAndMissedOpportunitiesApi - factory interface
 * @export
 */
export const BudgetRecommendationsAndMissedOpportunitiesApiFactory = function (
  configuration?: Configuration,
  basePath?: string,
  axios?: AxiosInstance
) {
  const localVarFp = BudgetRecommendationsAndMissedOpportunitiesApiFp(configuration);
  return {
    /**
     * Given a list of campaigns as input, this API provides the following metrics -  <br> <b>1. Recommended daily budget - </b> Estimated daily budget needed to keep the campaign in budget for the full 24-hour period in a day. Consider this daily budget to minimize your campaign\'s chances of running out of budget. <br> <b>2. Percent time in budget </b> - Actual average percentage of time the campaign was in budget between the start and end date specified in the response. Note: value -1 means we don’t have enough information to compute the campaign’s percent time in budget. <br> <b>3. Estimated missed impressions, clicks and sales </b> - These are the estimated range of additional impressions, clicks and sales the campaign might have generated between the start and end date specified in the response had it been in budget 100% of the time. These are estimates based on historical traffic and the campaign\'s past performance (e.g. impressions & clicks generated) but not guaranteed.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Get recommended daily budget and estimated missed opportunities for campaigns.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {BudgetRecommendationRequest} budgetRecommendationRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBudgetRecommendations(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      budgetRecommendationRequest: BudgetRecommendationRequest,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<BudgetRecommendationResponse> {
      return localVarFp
        .getBudgetRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRecommendationRequest, options)
        .then(request => request(axios, basePath));
    },
  };
};

/**
 * BudgetRecommendationsAndMissedOpportunitiesApi - object-oriented interface
 * @export
 * @class BudgetRecommendationsAndMissedOpportunitiesApi
 * @extends {BaseAPI}
 */
export class BudgetRecommendationsAndMissedOpportunitiesApi extends BaseAPI {
  /**
   * Given a list of campaigns as input, this API provides the following metrics -  <br> <b>1. Recommended daily budget - </b> Estimated daily budget needed to keep the campaign in budget for the full 24-hour period in a day. Consider this daily budget to minimize your campaign\'s chances of running out of budget. <br> <b>2. Percent time in budget </b> - Actual average percentage of time the campaign was in budget between the start and end date specified in the response. Note: value -1 means we don’t have enough information to compute the campaign’s percent time in budget. <br> <b>3. Estimated missed impressions, clicks and sales </b> - These are the estimated range of additional impressions, clicks and sales the campaign might have generated between the start and end date specified in the response had it been in budget 100% of the time. These are estimates based on historical traffic and the campaign\'s past performance (e.g. impressions & clicks generated) but not guaranteed.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
   * @summary Get recommended daily budget and estimated missed opportunities for campaigns.
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {BudgetRecommendationRequest} budgetRecommendationRequest
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof BudgetRecommendationsAndMissedOpportunitiesApi
   */
  public getBudgetRecommendations(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    budgetRecommendationRequest: BudgetRecommendationRequest,
    options?: RawAxiosRequestConfig
  ) {
    return BudgetRecommendationsAndMissedOpportunitiesApiFp(this.configuration)
      .getBudgetRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRecommendationRequest, options)
      .then(request => request(this.axios, this.basePath));
  }
}

/**
 * BudgetRulesApi - axios parameter creator
 * @export
 */
export const BudgetRulesApiAxiosParamCreator = function (configuration?: Configuration) {
  return {
    /**
     * A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Associates one or more budget rules to a campaign specified by identifer.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {number} campaignId The campaign identifier.
     * @param {CreateAssociatedBudgetRulesRequest} createAssociatedBudgetRulesRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAssociatedBudgetRulesForSPCampaigns: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      campaignId: number,
      createAssociatedBudgetRulesRequest: CreateAssociatedBudgetRulesRequest,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('createAssociatedBudgetRulesForSPCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('createAssociatedBudgetRulesForSPCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'campaignId' is not null or undefined
      assertParamExists('createAssociatedBudgetRulesForSPCampaigns', 'campaignId', campaignId);
      // verify required parameter 'createAssociatedBudgetRulesRequest' is not null or undefined
      assertParamExists('createAssociatedBudgetRulesForSPCampaigns', 'createAssociatedBudgetRulesRequest', createAssociatedBudgetRulesRequest);
      const localVarPath = `/sp/campaigns/{campaignId}/budgetRules`.replace(`{${'campaignId'}}`, encodeURIComponent(String(campaignId)));
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(createAssociatedBudgetRulesRequest, localVarRequestOptions, configuration);

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Creates one or more budget rules.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {CreateSPBudgetRulesRequest} createSPBudgetRulesRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createBudgetRulesForSPCampaigns: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      createSPBudgetRulesRequest: CreateSPBudgetRulesRequest,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('createBudgetRulesForSPCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('createBudgetRulesForSPCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'createSPBudgetRulesRequest' is not null or undefined
      assertParamExists('createBudgetRulesForSPCampaigns', 'createSPBudgetRulesRequest', createSPBudgetRulesRequest);
      const localVarPath = `/sp/budgetRules`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(createSPBudgetRulesRequest, localVarRequestOptions, configuration);

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Disassociates a budget rule specified by identifier from a campaign specified by identifier.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {number} campaignId The campaign identifier.
     * @param {string} budgetRuleId The budget rule identifier.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    disassociateAssociatedBudgetRuleForSPCampaigns: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      campaignId: number,
      budgetRuleId: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('disassociateAssociatedBudgetRuleForSPCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('disassociateAssociatedBudgetRuleForSPCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'campaignId' is not null or undefined
      assertParamExists('disassociateAssociatedBudgetRuleForSPCampaigns', 'campaignId', campaignId);
      // verify required parameter 'budgetRuleId' is not null or undefined
      assertParamExists('disassociateAssociatedBudgetRuleForSPCampaigns', 'budgetRuleId', budgetRuleId);
      const localVarPath = `/sp/campaigns/{campaignId}/budgetRules/{budgetRuleId}`
        .replace(`{${'campaignId'}}`, encodeURIComponent(String(campaignId)))
        .replace(`{${'budgetRuleId'}}`, encodeURIComponent(String(budgetRuleId)));
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     *   **Authorized resource type**: Global Ad Account ID, Profile ID  **Parameter name**: Amazon-Ads-AccountId  **Parameter in**: header  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a budget rule specified by identifier.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} budgetRuleId The budget rule identifier.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBudgetRuleByRuleIdForSPCampaigns: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      budgetRuleId: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('getBudgetRuleByRuleIdForSPCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('getBudgetRuleByRuleIdForSPCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'budgetRuleId' is not null or undefined
      assertParamExists('getBudgetRuleByRuleIdForSPCampaigns', 'budgetRuleId', budgetRuleId);
      const localVarPath = `/sp/budgetRules/{budgetRuleId}`.replace(`{${'budgetRuleId'}}`, encodeURIComponent(String(budgetRuleId)));
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     *
     * @summary Gets all the campaigns associated with a budget rule
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} budgetRuleId The budget rule identifier.
     * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
     * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCampaignsAssociatedWithSPBudgetRule: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      budgetRuleId: string,
      pageSize: number,
      nextToken?: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('getCampaignsAssociatedWithSPBudgetRule', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('getCampaignsAssociatedWithSPBudgetRule', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'budgetRuleId' is not null or undefined
      assertParamExists('getCampaignsAssociatedWithSPBudgetRule', 'budgetRuleId', budgetRuleId);
      // verify required parameter 'pageSize' is not null or undefined
      assertParamExists('getCampaignsAssociatedWithSPBudgetRule', 'pageSize', pageSize);
      const localVarPath = `/sp/budgetRules/{budgetRuleId}/campaigns`.replace(`{${'budgetRuleId'}}`, encodeURIComponent(String(budgetRuleId)));
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      if (nextToken !== undefined) {
        localVarQueryParameter['nextToken'] = nextToken;
      }

      if (pageSize !== undefined) {
        localVarQueryParameter['pageSize'] = pageSize;
      }

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     *
     * @summary Get all budget rules created by an advertiser
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
     * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSPBudgetRulesForAdvertiser: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      pageSize: number,
      nextToken?: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('getSPBudgetRulesForAdvertiser', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('getSPBudgetRulesForAdvertiser', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'pageSize' is not null or undefined
      assertParamExists('getSPBudgetRulesForAdvertiser', 'pageSize', pageSize);
      const localVarPath = `/sp/budgetRules`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      if (nextToken !== undefined) {
        localVarQueryParameter['nextToken'] = nextToken;
      }

      if (pageSize !== undefined) {
        localVarQueryParameter['pageSize'] = pageSize;
      }

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     *   **Authorized resource type**: Global Ad Account ID, Profile ID  **Parameter name**: Amazon-Ads-AccountId  **Parameter in**: header  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a list of budget rules associated to a campaign specified by identifier.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {number} campaignId The campaign identifier.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociatedBudgetRulesForSPCampaigns: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      campaignId: number,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('listAssociatedBudgetRulesForSPCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('listAssociatedBudgetRulesForSPCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'campaignId' is not null or undefined
      assertParamExists('listAssociatedBudgetRulesForSPCampaigns', 'campaignId', campaignId);
      const localVarPath = `/sp/campaigns/{campaignId}/budgetRules`.replace(`{${'campaignId'}}`, encodeURIComponent(String(campaignId)));
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Updates one or more budget rules.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {UpdateSPBudgetRulesRequest} updateSPBudgetRulesRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateBudgetRulesForSPCampaigns: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      updateSPBudgetRulesRequest: UpdateSPBudgetRulesRequest,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('updateBudgetRulesForSPCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('updateBudgetRulesForSPCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'updateSPBudgetRulesRequest' is not null or undefined
      assertParamExists('updateBudgetRulesForSPCampaigns', 'updateSPBudgetRulesRequest', updateSPBudgetRulesRequest);
      const localVarPath = `/sp/budgetRules`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(updateSPBudgetRulesRequest, localVarRequestOptions, configuration);

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
  };
};

/**
 * BudgetRulesApi - functional programming interface
 * @export
 */
export const BudgetRulesApiFp = function (configuration?: Configuration) {
  const localVarAxiosParamCreator = BudgetRulesApiAxiosParamCreator(configuration);
  return {
    /**
     * A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Associates one or more budget rules to a campaign specified by identifer.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {number} campaignId The campaign identifier.
     * @param {CreateAssociatedBudgetRulesRequest} createAssociatedBudgetRulesRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async createAssociatedBudgetRulesForSPCampaigns(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      campaignId: number,
      createAssociatedBudgetRulesRequest: CreateAssociatedBudgetRulesRequest,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateAssociatedBudgetRulesResponse>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.createAssociatedBudgetRulesForSPCampaigns(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        campaignId,
        createAssociatedBudgetRulesRequest,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['BudgetRulesApi.createAssociatedBudgetRulesForSPCampaigns']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Creates one or more budget rules.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {CreateSPBudgetRulesRequest} createSPBudgetRulesRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async createBudgetRulesForSPCampaigns(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      createSPBudgetRulesRequest: CreateSPBudgetRulesRequest,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateBudgetRulesResponse>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.createBudgetRulesForSPCampaigns(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        createSPBudgetRulesRequest,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['BudgetRulesApi.createBudgetRulesForSPCampaigns']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Disassociates a budget rule specified by identifier from a campaign specified by identifier.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {number} campaignId The campaign identifier.
     * @param {string} budgetRuleId The budget rule identifier.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async disassociateAssociatedBudgetRuleForSPCampaigns(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      campaignId: number,
      budgetRuleId: string,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.disassociateAssociatedBudgetRuleForSPCampaigns(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        campaignId,
        budgetRuleId,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['BudgetRulesApi.disassociateAssociatedBudgetRuleForSPCampaigns']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     *   **Authorized resource type**: Global Ad Account ID, Profile ID  **Parameter name**: Amazon-Ads-AccountId  **Parameter in**: header  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a budget rule specified by identifier.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} budgetRuleId The budget rule identifier.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async getBudgetRuleByRuleIdForSPCampaigns(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      budgetRuleId: string,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetSPBudgetRuleResponse>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.getBudgetRuleByRuleIdForSPCampaigns(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        budgetRuleId,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['BudgetRulesApi.getBudgetRuleByRuleIdForSPCampaigns']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     *
     * @summary Gets all the campaigns associated with a budget rule
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} budgetRuleId The budget rule identifier.
     * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
     * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async getCampaignsAssociatedWithSPBudgetRule(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      budgetRuleId: string,
      pageSize: number,
      nextToken?: string,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SPGetAssociatedCampaignsResponse>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.getCampaignsAssociatedWithSPBudgetRule(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        budgetRuleId,
        pageSize,
        nextToken,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['BudgetRulesApi.getCampaignsAssociatedWithSPBudgetRule']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     *
     * @summary Get all budget rules created by an advertiser
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
     * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async getSPBudgetRulesForAdvertiser(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      pageSize: number,
      nextToken?: string,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetSPBudgetRulesForAdvertiserResponse>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.getSPBudgetRulesForAdvertiser(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        pageSize,
        nextToken,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath = operationServerMap['BudgetRulesApi.getSPBudgetRulesForAdvertiser']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     *   **Authorized resource type**: Global Ad Account ID, Profile ID  **Parameter name**: Amazon-Ads-AccountId  **Parameter in**: header  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a list of budget rules associated to a campaign specified by identifier.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {number} campaignId The campaign identifier.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async listAssociatedBudgetRulesForSPCampaigns(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      campaignId: number,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SPListAssociatedBudgetRulesResponse>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.listAssociatedBudgetRulesForSPCampaigns(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        campaignId,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['BudgetRulesApi.listAssociatedBudgetRulesForSPCampaigns']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Updates one or more budget rules.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {UpdateSPBudgetRulesRequest} updateSPBudgetRulesRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async updateBudgetRulesForSPCampaigns(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      updateSPBudgetRulesRequest: UpdateSPBudgetRulesRequest,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UpdateBudgetRulesResponse>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.updateBudgetRulesForSPCampaigns(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        updateSPBudgetRulesRequest,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['BudgetRulesApi.updateBudgetRulesForSPCampaigns']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
  };
};

/**
 * BudgetRulesApi - factory interface
 * @export
 */
export const BudgetRulesApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
  const localVarFp = BudgetRulesApiFp(configuration);
  return {
    /**
     * A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Associates one or more budget rules to a campaign specified by identifer.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {number} campaignId The campaign identifier.
     * @param {CreateAssociatedBudgetRulesRequest} createAssociatedBudgetRulesRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAssociatedBudgetRulesForSPCampaigns(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      campaignId: number,
      createAssociatedBudgetRulesRequest: CreateAssociatedBudgetRulesRequest,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<CreateAssociatedBudgetRulesResponse> {
      return localVarFp
        .createAssociatedBudgetRulesForSPCampaigns(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          campaignId,
          createAssociatedBudgetRulesRequest,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Creates one or more budget rules.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {CreateSPBudgetRulesRequest} createSPBudgetRulesRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createBudgetRulesForSPCampaigns(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      createSPBudgetRulesRequest: CreateSPBudgetRulesRequest,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<CreateBudgetRulesResponse> {
      return localVarFp
        .createBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSPBudgetRulesRequest, options)
        .then(request => request(axios, basePath));
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Disassociates a budget rule specified by identifier from a campaign specified by identifier.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {number} campaignId The campaign identifier.
     * @param {string} budgetRuleId The budget rule identifier.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    disassociateAssociatedBudgetRuleForSPCampaigns(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      campaignId: number,
      budgetRuleId: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<object> {
      return localVarFp
        .disassociateAssociatedBudgetRuleForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, budgetRuleId, options)
        .then(request => request(axios, basePath));
    },
    /**
     *   **Authorized resource type**: Global Ad Account ID, Profile ID  **Parameter name**: Amazon-Ads-AccountId  **Parameter in**: header  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a budget rule specified by identifier.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} budgetRuleId The budget rule identifier.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBudgetRuleByRuleIdForSPCampaigns(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      budgetRuleId: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<GetSPBudgetRuleResponse> {
      return localVarFp
        .getBudgetRuleByRuleIdForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRuleId, options)
        .then(request => request(axios, basePath));
    },
    /**
     *
     * @summary Gets all the campaigns associated with a budget rule
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} budgetRuleId The budget rule identifier.
     * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
     * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCampaignsAssociatedWithSPBudgetRule(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      budgetRuleId: string,
      pageSize: number,
      nextToken?: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SPGetAssociatedCampaignsResponse> {
      return localVarFp
        .getCampaignsAssociatedWithSPBudgetRule(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRuleId, pageSize, nextToken, options)
        .then(request => request(axios, basePath));
    },
    /**
     *
     * @summary Get all budget rules created by an advertiser
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
     * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSPBudgetRulesForAdvertiser(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      pageSize: number,
      nextToken?: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<GetSPBudgetRulesForAdvertiserResponse> {
      return localVarFp
        .getSPBudgetRulesForAdvertiser(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, pageSize, nextToken, options)
        .then(request => request(axios, basePath));
    },
    /**
     *   **Authorized resource type**: Global Ad Account ID, Profile ID  **Parameter name**: Amazon-Ads-AccountId  **Parameter in**: header  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a list of budget rules associated to a campaign specified by identifier.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {number} campaignId The campaign identifier.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociatedBudgetRulesForSPCampaigns(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      campaignId: number,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SPListAssociatedBudgetRulesResponse> {
      return localVarFp
        .listAssociatedBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, options)
        .then(request => request(axios, basePath));
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Updates one or more budget rules.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {UpdateSPBudgetRulesRequest} updateSPBudgetRulesRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateBudgetRulesForSPCampaigns(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      updateSPBudgetRulesRequest: UpdateSPBudgetRulesRequest,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<UpdateBudgetRulesResponse> {
      return localVarFp
        .updateBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, updateSPBudgetRulesRequest, options)
        .then(request => request(axios, basePath));
    },
  };
};

/**
 * BudgetRulesApi - object-oriented interface
 * @export
 * @class BudgetRulesApi
 * @extends {BaseAPI}
 */
export class BudgetRulesApi extends BaseAPI {
  /**
   * A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @summary Associates one or more budget rules to a campaign specified by identifer.
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
   * @param {number} campaignId The campaign identifier.
   * @param {CreateAssociatedBudgetRulesRequest} createAssociatedBudgetRulesRequest
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof BudgetRulesApi
   */
  public createAssociatedBudgetRulesForSPCampaigns(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    campaignId: number,
    createAssociatedBudgetRulesRequest: CreateAssociatedBudgetRulesRequest,
    options?: RawAxiosRequestConfig
  ) {
    return BudgetRulesApiFp(this.configuration)
      .createAssociatedBudgetRulesForSPCampaigns(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        campaignId,
        createAssociatedBudgetRulesRequest,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @summary Creates one or more budget rules.
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
   * @param {CreateSPBudgetRulesRequest} createSPBudgetRulesRequest
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof BudgetRulesApi
   */
  public createBudgetRulesForSPCampaigns(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    createSPBudgetRulesRequest: CreateSPBudgetRulesRequest,
    options?: RawAxiosRequestConfig
  ) {
    return BudgetRulesApiFp(this.configuration)
      .createBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSPBudgetRulesRequest, options)
      .then(request => request(this.axios, this.basePath));
  }

  /**
   *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @summary Disassociates a budget rule specified by identifier from a campaign specified by identifier.
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
   * @param {number} campaignId The campaign identifier.
   * @param {string} budgetRuleId The budget rule identifier.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof BudgetRulesApi
   */
  public disassociateAssociatedBudgetRuleForSPCampaigns(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    campaignId: number,
    budgetRuleId: string,
    options?: RawAxiosRequestConfig
  ) {
    return BudgetRulesApiFp(this.configuration)
      .disassociateAssociatedBudgetRuleForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, budgetRuleId, options)
      .then(request => request(this.axios, this.basePath));
  }

  /**
   *   **Authorized resource type**: Global Ad Account ID, Profile ID  **Parameter name**: Amazon-Ads-AccountId  **Parameter in**: header  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
   * @summary Gets a budget rule specified by identifier.
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} budgetRuleId The budget rule identifier.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof BudgetRulesApi
   */
  public getBudgetRuleByRuleIdForSPCampaigns(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    budgetRuleId: string,
    options?: RawAxiosRequestConfig
  ) {
    return BudgetRulesApiFp(this.configuration)
      .getBudgetRuleByRuleIdForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRuleId, options)
      .then(request => request(this.axios, this.basePath));
  }

  /**
   *
   * @summary Gets all the campaigns associated with a budget rule
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} budgetRuleId The budget rule identifier.
   * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
   * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof BudgetRulesApi
   */
  public getCampaignsAssociatedWithSPBudgetRule(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    budgetRuleId: string,
    pageSize: number,
    nextToken?: string,
    options?: RawAxiosRequestConfig
  ) {
    return BudgetRulesApiFp(this.configuration)
      .getCampaignsAssociatedWithSPBudgetRule(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRuleId, pageSize, nextToken, options)
      .then(request => request(this.axios, this.basePath));
  }

  /**
   *
   * @summary Get all budget rules created by an advertiser
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
   * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
   * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof BudgetRulesApi
   */
  public getSPBudgetRulesForAdvertiser(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    pageSize: number,
    nextToken?: string,
    options?: RawAxiosRequestConfig
  ) {
    return BudgetRulesApiFp(this.configuration)
      .getSPBudgetRulesForAdvertiser(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, pageSize, nextToken, options)
      .then(request => request(this.axios, this.basePath));
  }

  /**
   *   **Authorized resource type**: Global Ad Account ID, Profile ID  **Parameter name**: Amazon-Ads-AccountId  **Parameter in**: header  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
   * @summary Gets a list of budget rules associated to a campaign specified by identifier.
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
   * @param {number} campaignId The campaign identifier.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof BudgetRulesApi
   */
  public listAssociatedBudgetRulesForSPCampaigns(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    campaignId: number,
    options?: RawAxiosRequestConfig
  ) {
    return BudgetRulesApiFp(this.configuration)
      .listAssociatedBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, options)
      .then(request => request(this.axios, this.basePath));
  }

  /**
   *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @summary Updates one or more budget rules.
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
   * @param {UpdateSPBudgetRulesRequest} updateSPBudgetRulesRequest
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof BudgetRulesApi
   */
  public updateBudgetRulesForSPCampaigns(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    updateSPBudgetRulesRequest: UpdateSPBudgetRulesRequest,
    options?: RawAxiosRequestConfig
  ) {
    return BudgetRulesApiFp(this.configuration)
      .updateBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, updateSPBudgetRulesRequest, options)
      .then(request => request(this.axios, this.basePath));
  }
}

/**
 * BudgetRulesRecommendationApi - axios parameter creator
 * @export
 */
export const BudgetRulesRecommendationApiAxiosParamCreator = function (configuration?: Configuration) {
  return {
    /**
     * A rule enables an automatic budget increase for a specified date range or for a special event. The response includes the suggested date range for each special event.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets all special individual and grouped events with suggested date range in advertiser\'s marketplace.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {object} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sPGetAllRuleEvents: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      body?: object,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('sPGetAllRuleEvents', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('sPGetAllRuleEvents', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      const localVarPath = `/sp/v1/events`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(body, localVarRequestOptions, configuration);

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * A rule enables an automatic budget increase for a specified date range or for a special event. The response also includes a suggested budget increase for each special event.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a list of special events with suggested date range and suggested budget increase for a campaign specified by identifier.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SPGetBudgetRulesRecommendationRequest} [sPGetBudgetRulesRecommendationRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sPGetBudgetRulesRecommendation: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sPGetBudgetRulesRecommendationRequest?: SPGetBudgetRulesRecommendationRequest,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('sPGetBudgetRulesRecommendation', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('sPGetBudgetRulesRecommendation', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      const localVarPath = `/sp/campaigns/budgetRules/recommendations`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spbudgetrulesrecommendation.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(sPGetBudgetRulesRecommendationRequest, localVarRequestOptions, configuration);

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
  };
};

/**
 * BudgetRulesRecommendationApi - functional programming interface
 * @export
 */
export const BudgetRulesRecommendationApiFp = function (configuration?: Configuration) {
  const localVarAxiosParamCreator = BudgetRulesRecommendationApiAxiosParamCreator(configuration);
  return {
    /**
     * A rule enables an automatic budget increase for a specified date range or for a special event. The response includes the suggested date range for each special event.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets all special individual and grouped events with suggested date range in advertiser\'s marketplace.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {object} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async sPGetAllRuleEvents(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      body?: object,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SPGetAllRuleEventResponse>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.sPGetAllRuleEvents(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        body,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['BudgetRulesRecommendationApi.sPGetAllRuleEvents']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * A rule enables an automatic budget increase for a specified date range or for a special event. The response also includes a suggested budget increase for each special event.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a list of special events with suggested date range and suggested budget increase for a campaign specified by identifier.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SPGetBudgetRulesRecommendationRequest} [sPGetBudgetRulesRecommendationRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async sPGetBudgetRulesRecommendation(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sPGetBudgetRulesRecommendationRequest?: SPGetBudgetRulesRecommendationRequest,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SPBudgetRulesRecommendationEventResponse>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.sPGetBudgetRulesRecommendation(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sPGetBudgetRulesRecommendationRequest,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['BudgetRulesRecommendationApi.sPGetBudgetRulesRecommendation']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
  };
};

/**
 * BudgetRulesRecommendationApi - factory interface
 * @export
 */
export const BudgetRulesRecommendationApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
  const localVarFp = BudgetRulesRecommendationApiFp(configuration);
  return {
    /**
     * A rule enables an automatic budget increase for a specified date range or for a special event. The response includes the suggested date range for each special event.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets all special individual and grouped events with suggested date range in advertiser\'s marketplace.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {object} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sPGetAllRuleEvents(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      body?: object,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SPGetAllRuleEventResponse> {
      return localVarFp
        .sPGetAllRuleEvents(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, body, options)
        .then(request => request(axios, basePath));
    },
    /**
     * A rule enables an automatic budget increase for a specified date range or for a special event. The response also includes a suggested budget increase for each special event.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a list of special events with suggested date range and suggested budget increase for a campaign specified by identifier.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SPGetBudgetRulesRecommendationRequest} [sPGetBudgetRulesRecommendationRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sPGetBudgetRulesRecommendation(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sPGetBudgetRulesRecommendationRequest?: SPGetBudgetRulesRecommendationRequest,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SPBudgetRulesRecommendationEventResponse> {
      return localVarFp
        .sPGetBudgetRulesRecommendation(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sPGetBudgetRulesRecommendationRequest, options)
        .then(request => request(axios, basePath));
    },
  };
};

/**
 * BudgetRulesRecommendationApi - object-oriented interface
 * @export
 * @class BudgetRulesRecommendationApi
 * @extends {BaseAPI}
 */
export class BudgetRulesRecommendationApi extends BaseAPI {
  /**
   * A rule enables an automatic budget increase for a specified date range or for a special event. The response includes the suggested date range for each special event.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
   * @summary Gets all special individual and grouped events with suggested date range in advertiser\'s marketplace.
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {object} [body]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof BudgetRulesRecommendationApi
   */
  public sPGetAllRuleEvents(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, body?: object, options?: RawAxiosRequestConfig) {
    return BudgetRulesRecommendationApiFp(this.configuration)
      .sPGetAllRuleEvents(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, body, options)
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * A rule enables an automatic budget increase for a specified date range or for a special event. The response also includes a suggested budget increase for each special event.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
   * @summary Gets a list of special events with suggested date range and suggested budget increase for a campaign specified by identifier.
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SPGetBudgetRulesRecommendationRequest} [sPGetBudgetRulesRecommendationRequest]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof BudgetRulesRecommendationApi
   */
  public sPGetBudgetRulesRecommendation(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sPGetBudgetRulesRecommendationRequest?: SPGetBudgetRulesRecommendationRequest,
    options?: RawAxiosRequestConfig
  ) {
    return BudgetRulesRecommendationApiFp(this.configuration)
      .sPGetBudgetRulesRecommendation(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sPGetBudgetRulesRecommendationRequest, options)
      .then(request => request(this.axios, this.basePath));
  }
}

/**
 * BudgetUsageApi - axios parameter creator
 * @export
 */
export const BudgetUsageApiAxiosParamCreator = function (configuration?: Configuration) {
  return {
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Budget usage API for SP campaigns
     * @param {any} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {any} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {BudgetUsageCampaignRequest} budgetUsageCampaignRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    spCampaignsBudgetUsage: async (
      amazonAdvertisingAPIClientId: any,
      amazonAdvertisingAPIScope: any,
      budgetUsageCampaignRequest: BudgetUsageCampaignRequest,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('spCampaignsBudgetUsage', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('spCampaignsBudgetUsage', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'budgetUsageCampaignRequest' is not null or undefined
      assertParamExists('spCampaignsBudgetUsage', 'budgetUsageCampaignRequest', budgetUsageCampaignRequest);
      const localVarPath = `/sp/campaigns/budget/usage`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spcampaignbudgetusage.v1+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] =
          typeof amazonAdvertisingAPIClientId === 'string' ? amazonAdvertisingAPIClientId : JSON.stringify(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] =
          typeof amazonAdvertisingAPIScope === 'string' ? amazonAdvertisingAPIScope : JSON.stringify(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(budgetUsageCampaignRequest, localVarRequestOptions, configuration);

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
  };
};

/**
 * BudgetUsageApi - functional programming interface
 * @export
 */
export const BudgetUsageApiFp = function (configuration?: Configuration) {
  const localVarAxiosParamCreator = BudgetUsageApiAxiosParamCreator(configuration);
  return {
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Budget usage API for SP campaigns
     * @param {any} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {any} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {BudgetUsageCampaignRequest} budgetUsageCampaignRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async spCampaignsBudgetUsage(
      amazonAdvertisingAPIClientId: any,
      amazonAdvertisingAPIScope: any,
      budgetUsageCampaignRequest: BudgetUsageCampaignRequest,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BudgetUsageCampaignResponse>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.spCampaignsBudgetUsage(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        budgetUsageCampaignRequest,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath = operationServerMap['BudgetUsageApi.spCampaignsBudgetUsage']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
  };
};

/**
 * BudgetUsageApi - factory interface
 * @export
 */
export const BudgetUsageApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
  const localVarFp = BudgetUsageApiFp(configuration);
  return {
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Budget usage API for SP campaigns
     * @param {any} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {any} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {BudgetUsageCampaignRequest} budgetUsageCampaignRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    spCampaignsBudgetUsage(
      amazonAdvertisingAPIClientId: any,
      amazonAdvertisingAPIScope: any,
      budgetUsageCampaignRequest: BudgetUsageCampaignRequest,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<BudgetUsageCampaignResponse> {
      return localVarFp
        .spCampaignsBudgetUsage(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetUsageCampaignRequest, options)
        .then(request => request(axios, basePath));
    },
  };
};

/**
 * BudgetUsageApi - object-oriented interface
 * @export
 * @class BudgetUsageApi
 * @extends {BaseAPI}
 */
export class BudgetUsageApi extends BaseAPI {
  /**
   *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
   * @summary Budget usage API for SP campaigns
   * @param {any} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
   * @param {any} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
   * @param {BudgetUsageCampaignRequest} budgetUsageCampaignRequest
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof BudgetUsageApi
   */
  public spCampaignsBudgetUsage(
    amazonAdvertisingAPIClientId: any,
    amazonAdvertisingAPIScope: any,
    budgetUsageCampaignRequest: BudgetUsageCampaignRequest,
    options?: RawAxiosRequestConfig
  ) {
    return BudgetUsageApiFp(this.configuration)
      .spCampaignsBudgetUsage(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetUsageCampaignRequest, options)
      .then(request => request(this.axios, this.basePath));
  }
}

/**
 * CampaignNegativeKeywordsApi - axios parameter creator
 * @export
 */
export const CampaignNegativeKeywordsApiAxiosParamCreator = function (configuration?: Configuration) {
  return {
    /**
     * Create campaign negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent} sponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createSponsoredProductsCampaignNegativeKeywords: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent: SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent,
      prefer?: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('createSponsoredProductsCampaignNegativeKeywords', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('createSponsoredProductsCampaignNegativeKeywords', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'sponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent' is not null or undefined
      assertParamExists(
        'createSponsoredProductsCampaignNegativeKeywords',
        'sponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent',
        sponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent
      );
      const localVarPath = `/sp/campaignNegativeKeywords`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spCampaignNegativeKeyword.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      if (prefer != null) {
        localVarHeaderParameter['Prefer'] = String(prefer);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * Delete campaign negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent} sponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteSponsoredProductsCampaignNegativeKeywords: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent: SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('deleteSponsoredProductsCampaignNegativeKeywords', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('deleteSponsoredProductsCampaignNegativeKeywords', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'sponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent' is not null or undefined
      assertParamExists(
        'deleteSponsoredProductsCampaignNegativeKeywords',
        'sponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent',
        sponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent
      );
      const localVarPath = `/sp/campaignNegativeKeywords/delete`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spCampaignNegativeKeyword.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * List campaign negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent} [sponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listSponsoredProductsCampaignNegativeKeywords: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent?: SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('listSponsoredProductsCampaignNegativeKeywords', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('listSponsoredProductsCampaignNegativeKeywords', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      const localVarPath = `/sp/campaignNegativeKeywords/list`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spCampaignNegativeKeyword.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * Update campaign negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent} sponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateSponsoredProductsCampaignNegativeKeywords: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent: SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent,
      prefer?: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('updateSponsoredProductsCampaignNegativeKeywords', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('updateSponsoredProductsCampaignNegativeKeywords', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'sponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent' is not null or undefined
      assertParamExists(
        'updateSponsoredProductsCampaignNegativeKeywords',
        'sponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent',
        sponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent
      );
      const localVarPath = `/sp/campaignNegativeKeywords`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spCampaignNegativeKeyword.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      if (prefer != null) {
        localVarHeaderParameter['Prefer'] = String(prefer);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
  };
};

/**
 * CampaignNegativeKeywordsApi - functional programming interface
 * @export
 */
export const CampaignNegativeKeywordsApiFp = function (configuration?: Configuration) {
  const localVarAxiosParamCreator = CampaignNegativeKeywordsApiAxiosParamCreator(configuration);
  return {
    /**
     * Create campaign negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent} sponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async createSponsoredProductsCampaignNegativeKeywords(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent: SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): Promise<
      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsResponseContent>
    > {
      const localVarAxiosArgs = await localVarAxiosParamCreator.createSponsoredProductsCampaignNegativeKeywords(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent,
        prefer,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['CampaignNegativeKeywordsApi.createSponsoredProductsCampaignNegativeKeywords']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * Delete campaign negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent} sponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async deleteSponsoredProductsCampaignNegativeKeywords(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent: SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent,
      options?: RawAxiosRequestConfig
    ): Promise<
      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsResponseContent>
    > {
      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteSponsoredProductsCampaignNegativeKeywords(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['CampaignNegativeKeywordsApi.deleteSponsoredProductsCampaignNegativeKeywords']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * List campaign negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent} [sponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async listSponsoredProductsCampaignNegativeKeywords(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent?: SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent,
      options?: RawAxiosRequestConfig
    ): Promise<
      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsResponseContent>
    > {
      const localVarAxiosArgs = await localVarAxiosParamCreator.listSponsoredProductsCampaignNegativeKeywords(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['CampaignNegativeKeywordsApi.listSponsoredProductsCampaignNegativeKeywords']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * Update campaign negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent} sponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async updateSponsoredProductsCampaignNegativeKeywords(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent: SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): Promise<
      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsResponseContent>
    > {
      const localVarAxiosArgs = await localVarAxiosParamCreator.updateSponsoredProductsCampaignNegativeKeywords(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent,
        prefer,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['CampaignNegativeKeywordsApi.updateSponsoredProductsCampaignNegativeKeywords']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
  };
};

/**
 * CampaignNegativeKeywordsApi - factory interface
 * @export
 */
export const CampaignNegativeKeywordsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
  const localVarFp = CampaignNegativeKeywordsApiFp(configuration);
  return {
    /**
     * Create campaign negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent} sponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createSponsoredProductsCampaignNegativeKeywords(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent: SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsResponseContent> {
      return localVarFp
        .createSponsoredProductsCampaignNegativeKeywords(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent,
          prefer,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * Delete campaign negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent} sponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteSponsoredProductsCampaignNegativeKeywords(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent: SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsResponseContent> {
      return localVarFp
        .deleteSponsoredProductsCampaignNegativeKeywords(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * List campaign negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent} [sponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listSponsoredProductsCampaignNegativeKeywords(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent?: SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsResponseContent> {
      return localVarFp
        .listSponsoredProductsCampaignNegativeKeywords(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * Update campaign negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent} sponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateSponsoredProductsCampaignNegativeKeywords(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent: SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsResponseContent> {
      return localVarFp
        .updateSponsoredProductsCampaignNegativeKeywords(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent,
          prefer,
          options
        )
        .then(request => request(axios, basePath));
    },
  };
};

/**
 * CampaignNegativeKeywordsApi - object-oriented interface
 * @export
 * @class CampaignNegativeKeywordsApi
 * @extends {BaseAPI}
 */
export class CampaignNegativeKeywordsApi extends BaseAPI {
  /**
   * Create campaign negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent} sponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent
   * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof CampaignNegativeKeywordsApi
   */
  public createSponsoredProductsCampaignNegativeKeywords(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent: SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent,
    prefer?: string,
    options?: RawAxiosRequestConfig
  ) {
    return CampaignNegativeKeywordsApiFp(this.configuration)
      .createSponsoredProductsCampaignNegativeKeywords(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent,
        prefer,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * Delete campaign negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent} sponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof CampaignNegativeKeywordsApi
   */
  public deleteSponsoredProductsCampaignNegativeKeywords(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent: SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent,
    options?: RawAxiosRequestConfig
  ) {
    return CampaignNegativeKeywordsApiFp(this.configuration)
      .deleteSponsoredProductsCampaignNegativeKeywords(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * List campaign negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent} [sponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof CampaignNegativeKeywordsApi
   */
  public listSponsoredProductsCampaignNegativeKeywords(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent?: SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent,
    options?: RawAxiosRequestConfig
  ) {
    return CampaignNegativeKeywordsApiFp(this.configuration)
      .listSponsoredProductsCampaignNegativeKeywords(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * Update campaign negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent} sponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent
   * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof CampaignNegativeKeywordsApi
   */
  public updateSponsoredProductsCampaignNegativeKeywords(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent: SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent,
    prefer?: string,
    options?: RawAxiosRequestConfig
  ) {
    return CampaignNegativeKeywordsApiFp(this.configuration)
      .updateSponsoredProductsCampaignNegativeKeywords(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent,
        prefer,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }
}

/**
 * CampaignNegativeTargetingClausesApi - axios parameter creator
 * @export
 */
export const CampaignNegativeTargetingClausesApiAxiosParamCreator = function (configuration?: Configuration) {
  return {
    /**
     * Create campaign negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent} sponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createSponsoredProductsCampaignNegativeTargetingClauses: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent: SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
      prefer?: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('createSponsoredProductsCampaignNegativeTargetingClauses', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('createSponsoredProductsCampaignNegativeTargetingClauses', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'sponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent' is not null or undefined
      assertParamExists(
        'createSponsoredProductsCampaignNegativeTargetingClauses',
        'sponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent',
        sponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent
      );
      const localVarPath = `/sp/campaignNegativeTargets`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spCampaignNegativeTargetingClause.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      if (prefer != null) {
        localVarHeaderParameter['Prefer'] = String(prefer);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * Delete campaign negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent} sponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteSponsoredProductsCampaignNegativeTargetingClauses: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent: SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('deleteSponsoredProductsCampaignNegativeTargetingClauses', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('deleteSponsoredProductsCampaignNegativeTargetingClauses', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'sponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent' is not null or undefined
      assertParamExists(
        'deleteSponsoredProductsCampaignNegativeTargetingClauses',
        'sponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent',
        sponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent
      );
      const localVarPath = `/sp/campaignNegativeTargets/delete`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spCampaignNegativeTargetingClause.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * List campaign negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent} [sponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listSponsoredProductsCampaignNegativeTargetingClauses: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent?: SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('listSponsoredProductsCampaignNegativeTargetingClauses', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('listSponsoredProductsCampaignNegativeTargetingClauses', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      const localVarPath = `/sp/campaignNegativeTargets/list`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spCampaignNegativeTargetingClause.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * Update campaign negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent} sponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateSponsoredProductsCampaignNegativeTargetingClauses: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent: SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
      prefer?: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('updateSponsoredProductsCampaignNegativeTargetingClauses', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('updateSponsoredProductsCampaignNegativeTargetingClauses', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'sponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent' is not null or undefined
      assertParamExists(
        'updateSponsoredProductsCampaignNegativeTargetingClauses',
        'sponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent',
        sponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent
      );
      const localVarPath = `/sp/campaignNegativeTargets`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spCampaignNegativeTargetingClause.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      if (prefer != null) {
        localVarHeaderParameter['Prefer'] = String(prefer);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
  };
};

/**
 * CampaignNegativeTargetingClausesApi - functional programming interface
 * @export
 */
export const CampaignNegativeTargetingClausesApiFp = function (configuration?: Configuration) {
  const localVarAxiosParamCreator = CampaignNegativeTargetingClausesApiAxiosParamCreator(configuration);
  return {
    /**
     * Create campaign negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent} sponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async createSponsoredProductsCampaignNegativeTargetingClauses(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent: SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): Promise<
      (
        axios?: AxiosInstance,
        basePath?: string
      ) => AxiosPromise<SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesResponseContent>
    > {
      const localVarAxiosArgs = await localVarAxiosParamCreator.createSponsoredProductsCampaignNegativeTargetingClauses(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
        prefer,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['CampaignNegativeTargetingClausesApi.createSponsoredProductsCampaignNegativeTargetingClauses']?.[
          localVarOperationServerIndex
        ]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * Delete campaign negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent} sponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async deleteSponsoredProductsCampaignNegativeTargetingClauses(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent: SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
      options?: RawAxiosRequestConfig
    ): Promise<
      (
        axios?: AxiosInstance,
        basePath?: string
      ) => AxiosPromise<SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesResponseContent>
    > {
      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteSponsoredProductsCampaignNegativeTargetingClauses(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['CampaignNegativeTargetingClausesApi.deleteSponsoredProductsCampaignNegativeTargetingClauses']?.[
          localVarOperationServerIndex
        ]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * List campaign negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent} [sponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async listSponsoredProductsCampaignNegativeTargetingClauses(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent?: SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
      options?: RawAxiosRequestConfig
    ): Promise<
      (
        axios?: AxiosInstance,
        basePath?: string
      ) => AxiosPromise<SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesResponseContent>
    > {
      const localVarAxiosArgs = await localVarAxiosParamCreator.listSponsoredProductsCampaignNegativeTargetingClauses(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['CampaignNegativeTargetingClausesApi.listSponsoredProductsCampaignNegativeTargetingClauses']?.[
          localVarOperationServerIndex
        ]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * Update campaign negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent} sponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async updateSponsoredProductsCampaignNegativeTargetingClauses(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent: SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): Promise<
      (
        axios?: AxiosInstance,
        basePath?: string
      ) => AxiosPromise<SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesResponseContent>
    > {
      const localVarAxiosArgs = await localVarAxiosParamCreator.updateSponsoredProductsCampaignNegativeTargetingClauses(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
        prefer,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['CampaignNegativeTargetingClausesApi.updateSponsoredProductsCampaignNegativeTargetingClauses']?.[
          localVarOperationServerIndex
        ]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
  };
};

/**
 * CampaignNegativeTargetingClausesApi - factory interface
 * @export
 */
export const CampaignNegativeTargetingClausesApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
  const localVarFp = CampaignNegativeTargetingClausesApiFp(configuration);
  return {
    /**
     * Create campaign negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent} sponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createSponsoredProductsCampaignNegativeTargetingClauses(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent: SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesResponseContent> {
      return localVarFp
        .createSponsoredProductsCampaignNegativeTargetingClauses(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
          prefer,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * Delete campaign negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent} sponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteSponsoredProductsCampaignNegativeTargetingClauses(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent: SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesResponseContent> {
      return localVarFp
        .deleteSponsoredProductsCampaignNegativeTargetingClauses(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * List campaign negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent} [sponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listSponsoredProductsCampaignNegativeTargetingClauses(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent?: SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesResponseContent> {
      return localVarFp
        .listSponsoredProductsCampaignNegativeTargetingClauses(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * Update campaign negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent} sponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateSponsoredProductsCampaignNegativeTargetingClauses(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent: SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesResponseContent> {
      return localVarFp
        .updateSponsoredProductsCampaignNegativeTargetingClauses(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
          prefer,
          options
        )
        .then(request => request(axios, basePath));
    },
  };
};

/**
 * CampaignNegativeTargetingClausesApi - object-oriented interface
 * @export
 * @class CampaignNegativeTargetingClausesApi
 * @extends {BaseAPI}
 */
export class CampaignNegativeTargetingClausesApi extends BaseAPI {
  /**
   * Create campaign negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent} sponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent
   * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof CampaignNegativeTargetingClausesApi
   */
  public createSponsoredProductsCampaignNegativeTargetingClauses(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent: SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
    prefer?: string,
    options?: RawAxiosRequestConfig
  ) {
    return CampaignNegativeTargetingClausesApiFp(this.configuration)
      .createSponsoredProductsCampaignNegativeTargetingClauses(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
        prefer,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * Delete campaign negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent} sponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof CampaignNegativeTargetingClausesApi
   */
  public deleteSponsoredProductsCampaignNegativeTargetingClauses(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent: SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
    options?: RawAxiosRequestConfig
  ) {
    return CampaignNegativeTargetingClausesApiFp(this.configuration)
      .deleteSponsoredProductsCampaignNegativeTargetingClauses(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * List campaign negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent} [sponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof CampaignNegativeTargetingClausesApi
   */
  public listSponsoredProductsCampaignNegativeTargetingClauses(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent?: SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
    options?: RawAxiosRequestConfig
  ) {
    return CampaignNegativeTargetingClausesApiFp(this.configuration)
      .listSponsoredProductsCampaignNegativeTargetingClauses(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * Update campaign negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent} sponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent
   * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof CampaignNegativeTargetingClausesApi
   */
  public updateSponsoredProductsCampaignNegativeTargetingClauses(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent: SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
    prefer?: string,
    options?: RawAxiosRequestConfig
  ) {
    return CampaignNegativeTargetingClausesApiFp(this.configuration)
      .updateSponsoredProductsCampaignNegativeTargetingClauses(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent,
        prefer,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }
}

/**
 * CampaignOptimizationRulesApi - axios parameter creator
 * @export
 */
export const CampaignOptimizationRulesApiAxiosParamCreator = function (configuration?: Configuration) {
  return {
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Creates a campaign optimization rule.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {CreateSPCampaignOptimizationRulesRequest} createSPCampaignOptimizationRulesRequest
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createOptimizationRule: async (
      amazonAdvertisingAPIClientId: string,
      createSPCampaignOptimizationRulesRequest: CreateSPCampaignOptimizationRulesRequest,
      amazonAdvertisingAPIScope?: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('createOptimizationRule', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'createSPCampaignOptimizationRulesRequest' is not null or undefined
      assertParamExists('createOptimizationRule', 'createSPCampaignOptimizationRulesRequest', createSPCampaignOptimizationRulesRequest);
      const localVarPath = `/sp/rules/campaignOptimization`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.optimizationrules.v1+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(createSPCampaignOptimizationRulesRequest, localVarRequestOptions, configuration);

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Deletes a campaign optimization rule specified by identifier.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} campaignOptimizationId The sp campaign optimization rule identifier.
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteCampaignOptimizationRule: async (
      amazonAdvertisingAPIClientId: string,
      campaignOptimizationId: string,
      amazonAdvertisingAPIScope?: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('deleteCampaignOptimizationRule', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'campaignOptimizationId' is not null or undefined
      assertParamExists('deleteCampaignOptimizationRule', 'campaignOptimizationId', campaignOptimizationId);
      const localVarPath = `/sp/rules/campaignOptimization/{campaignOptimizationId}`.replace(
        `{${'campaignOptimizationId'}}`,
        encodeURIComponent(String(campaignOptimizationId))
      );
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a campaign optimization rule specified by identifier.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} campaignOptimizationId The sp campaign optimization rule identifier.
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCampaignOptimizationRule: async (
      amazonAdvertisingAPIClientId: string,
      campaignOptimizationId: string,
      amazonAdvertisingAPIScope?: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('getCampaignOptimizationRule', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'campaignOptimizationId' is not null or undefined
      assertParamExists('getCampaignOptimizationRule', 'campaignOptimizationId', campaignOptimizationId);
      const localVarPath = `/sp/rules/campaignOptimization/{campaignOptimizationId}`.replace(
        `{${'campaignOptimizationId'}}`,
        encodeURIComponent(String(campaignOptimizationId))
      );
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a campaign optimization rule eligibility for SP campaigns.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {SPCampaignOptimizationRecommendationsAPIRequest} sPCampaignOptimizationRecommendationsAPIRequest
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOptimizationRuleEligibility: async (
      amazonAdvertisingAPIClientId: string,
      sPCampaignOptimizationRecommendationsAPIRequest: SPCampaignOptimizationRecommendationsAPIRequest,
      amazonAdvertisingAPIScope?: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('getOptimizationRuleEligibility', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'sPCampaignOptimizationRecommendationsAPIRequest' is not null or undefined
      assertParamExists(
        'getOptimizationRuleEligibility',
        'sPCampaignOptimizationRecommendationsAPIRequest',
        sPCampaignOptimizationRecommendationsAPIRequest
      );
      const localVarPath = `/sp/rules/campaignOptimization/eligibility`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.optimizationrules.v1+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(sPCampaignOptimizationRecommendationsAPIRequest, localVarRequestOptions, configuration);

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets campaign optimization rule state. Recommended refresh frequency is once a day.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {SPCampaignOptimizationNotificationAPIRequest} sPCampaignOptimizationNotificationAPIRequest
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRuleNotification: async (
      amazonAdvertisingAPIClientId: string,
      sPCampaignOptimizationNotificationAPIRequest: SPCampaignOptimizationNotificationAPIRequest,
      amazonAdvertisingAPIScope?: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('getRuleNotification', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'sPCampaignOptimizationNotificationAPIRequest' is not null or undefined
      assertParamExists('getRuleNotification', 'sPCampaignOptimizationNotificationAPIRequest', sPCampaignOptimizationNotificationAPIRequest);
      const localVarPath = `/sp/rules/campaignOptimization/state`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.optimizationrules.v1+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(sPCampaignOptimizationNotificationAPIRequest, localVarRequestOptions, configuration);

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Updates a campaign optimization rule.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {UpdateSPCampaignOptimizationRulesRequest} updateSPCampaignOptimizationRulesRequest
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateOptimizationRule: async (
      amazonAdvertisingAPIClientId: string,
      updateSPCampaignOptimizationRulesRequest: UpdateSPCampaignOptimizationRulesRequest,
      amazonAdvertisingAPIScope?: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('updateOptimizationRule', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'updateSPCampaignOptimizationRulesRequest' is not null or undefined
      assertParamExists('updateOptimizationRule', 'updateSPCampaignOptimizationRulesRequest', updateSPCampaignOptimizationRulesRequest);
      const localVarPath = `/sp/rules/campaignOptimization`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.optimizationrules.v1+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(updateSPCampaignOptimizationRulesRequest, localVarRequestOptions, configuration);

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
  };
};

/**
 * CampaignOptimizationRulesApi - functional programming interface
 * @export
 */
export const CampaignOptimizationRulesApiFp = function (configuration?: Configuration) {
  const localVarAxiosParamCreator = CampaignOptimizationRulesApiAxiosParamCreator(configuration);
  return {
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Creates a campaign optimization rule.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {CreateSPCampaignOptimizationRulesRequest} createSPCampaignOptimizationRulesRequest
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async createOptimizationRule(
      amazonAdvertisingAPIClientId: string,
      createSPCampaignOptimizationRulesRequest: CreateSPCampaignOptimizationRulesRequest,
      amazonAdvertisingAPIScope?: string,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateSPCampaignOptimizationRulesResponse>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.createOptimizationRule(
        amazonAdvertisingAPIClientId,
        createSPCampaignOptimizationRulesRequest,
        amazonAdvertisingAPIScope,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['CampaignOptimizationRulesApi.createOptimizationRule']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Deletes a campaign optimization rule specified by identifier.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} campaignOptimizationId The sp campaign optimization rule identifier.
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async deleteCampaignOptimizationRule(
      amazonAdvertisingAPIClientId: string,
      campaignOptimizationId: string,
      amazonAdvertisingAPIScope?: string,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DeleteSPCampaignOptimizationRuleResponse>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteCampaignOptimizationRule(
        amazonAdvertisingAPIClientId,
        campaignOptimizationId,
        amazonAdvertisingAPIScope,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['CampaignOptimizationRulesApi.deleteCampaignOptimizationRule']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a campaign optimization rule specified by identifier.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} campaignOptimizationId The sp campaign optimization rule identifier.
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async getCampaignOptimizationRule(
      amazonAdvertisingAPIClientId: string,
      campaignOptimizationId: string,
      amazonAdvertisingAPIScope?: string,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetSPCampaignOptimizationRuleResponse>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.getCampaignOptimizationRule(
        amazonAdvertisingAPIClientId,
        campaignOptimizationId,
        amazonAdvertisingAPIScope,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['CampaignOptimizationRulesApi.getCampaignOptimizationRule']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a campaign optimization rule eligibility for SP campaigns.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {SPCampaignOptimizationRecommendationsAPIRequest} sPCampaignOptimizationRecommendationsAPIRequest
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async getOptimizationRuleEligibility(
      amazonAdvertisingAPIClientId: string,
      sPCampaignOptimizationRecommendationsAPIRequest: SPCampaignOptimizationRecommendationsAPIRequest,
      amazonAdvertisingAPIScope?: string,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SPCampaignOptimizationRecommendationAPIResponse>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.getOptimizationRuleEligibility(
        amazonAdvertisingAPIClientId,
        sPCampaignOptimizationRecommendationsAPIRequest,
        amazonAdvertisingAPIScope,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['CampaignOptimizationRulesApi.getOptimizationRuleEligibility']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets campaign optimization rule state. Recommended refresh frequency is once a day.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {SPCampaignOptimizationNotificationAPIRequest} sPCampaignOptimizationNotificationAPIRequest
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async getRuleNotification(
      amazonAdvertisingAPIClientId: string,
      sPCampaignOptimizationNotificationAPIRequest: SPCampaignOptimizationNotificationAPIRequest,
      amazonAdvertisingAPIScope?: string,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SPCampaignOptimizationNotificationAPIResponse>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.getRuleNotification(
        amazonAdvertisingAPIClientId,
        sPCampaignOptimizationNotificationAPIRequest,
        amazonAdvertisingAPIScope,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['CampaignOptimizationRulesApi.getRuleNotification']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Updates a campaign optimization rule.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {UpdateSPCampaignOptimizationRulesRequest} updateSPCampaignOptimizationRulesRequest
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async updateOptimizationRule(
      amazonAdvertisingAPIClientId: string,
      updateSPCampaignOptimizationRulesRequest: UpdateSPCampaignOptimizationRulesRequest,
      amazonAdvertisingAPIScope?: string,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UpdateSPCampaignOptimizationRuleResponse>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.updateOptimizationRule(
        amazonAdvertisingAPIClientId,
        updateSPCampaignOptimizationRulesRequest,
        amazonAdvertisingAPIScope,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['CampaignOptimizationRulesApi.updateOptimizationRule']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
  };
};

/**
 * CampaignOptimizationRulesApi - factory interface
 * @export
 */
export const CampaignOptimizationRulesApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
  const localVarFp = CampaignOptimizationRulesApiFp(configuration);
  return {
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Creates a campaign optimization rule.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {CreateSPCampaignOptimizationRulesRequest} createSPCampaignOptimizationRulesRequest
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createOptimizationRule(
      amazonAdvertisingAPIClientId: string,
      createSPCampaignOptimizationRulesRequest: CreateSPCampaignOptimizationRulesRequest,
      amazonAdvertisingAPIScope?: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<CreateSPCampaignOptimizationRulesResponse> {
      return localVarFp
        .createOptimizationRule(amazonAdvertisingAPIClientId, createSPCampaignOptimizationRulesRequest, amazonAdvertisingAPIScope, options)
        .then(request => request(axios, basePath));
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Deletes a campaign optimization rule specified by identifier.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} campaignOptimizationId The sp campaign optimization rule identifier.
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteCampaignOptimizationRule(
      amazonAdvertisingAPIClientId: string,
      campaignOptimizationId: string,
      amazonAdvertisingAPIScope?: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<DeleteSPCampaignOptimizationRuleResponse> {
      return localVarFp
        .deleteCampaignOptimizationRule(amazonAdvertisingAPIClientId, campaignOptimizationId, amazonAdvertisingAPIScope, options)
        .then(request => request(axios, basePath));
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a campaign optimization rule specified by identifier.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} campaignOptimizationId The sp campaign optimization rule identifier.
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCampaignOptimizationRule(
      amazonAdvertisingAPIClientId: string,
      campaignOptimizationId: string,
      amazonAdvertisingAPIScope?: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<GetSPCampaignOptimizationRuleResponse> {
      return localVarFp
        .getCampaignOptimizationRule(amazonAdvertisingAPIClientId, campaignOptimizationId, amazonAdvertisingAPIScope, options)
        .then(request => request(axios, basePath));
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a campaign optimization rule eligibility for SP campaigns.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {SPCampaignOptimizationRecommendationsAPIRequest} sPCampaignOptimizationRecommendationsAPIRequest
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOptimizationRuleEligibility(
      amazonAdvertisingAPIClientId: string,
      sPCampaignOptimizationRecommendationsAPIRequest: SPCampaignOptimizationRecommendationsAPIRequest,
      amazonAdvertisingAPIScope?: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SPCampaignOptimizationRecommendationAPIResponse> {
      return localVarFp
        .getOptimizationRuleEligibility(
          amazonAdvertisingAPIClientId,
          sPCampaignOptimizationRecommendationsAPIRequest,
          amazonAdvertisingAPIScope,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets campaign optimization rule state. Recommended refresh frequency is once a day.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {SPCampaignOptimizationNotificationAPIRequest} sPCampaignOptimizationNotificationAPIRequest
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRuleNotification(
      amazonAdvertisingAPIClientId: string,
      sPCampaignOptimizationNotificationAPIRequest: SPCampaignOptimizationNotificationAPIRequest,
      amazonAdvertisingAPIScope?: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SPCampaignOptimizationNotificationAPIResponse> {
      return localVarFp
        .getRuleNotification(amazonAdvertisingAPIClientId, sPCampaignOptimizationNotificationAPIRequest, amazonAdvertisingAPIScope, options)
        .then(request => request(axios, basePath));
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Updates a campaign optimization rule.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {UpdateSPCampaignOptimizationRulesRequest} updateSPCampaignOptimizationRulesRequest
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateOptimizationRule(
      amazonAdvertisingAPIClientId: string,
      updateSPCampaignOptimizationRulesRequest: UpdateSPCampaignOptimizationRulesRequest,
      amazonAdvertisingAPIScope?: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<UpdateSPCampaignOptimizationRuleResponse> {
      return localVarFp
        .updateOptimizationRule(amazonAdvertisingAPIClientId, updateSPCampaignOptimizationRulesRequest, amazonAdvertisingAPIScope, options)
        .then(request => request(axios, basePath));
    },
  };
};

/**
 * CampaignOptimizationRulesApi - object-oriented interface
 * @export
 * @class CampaignOptimizationRulesApi
 * @extends {BaseAPI}
 */
export class CampaignOptimizationRulesApi extends BaseAPI {
  /**
   *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @summary Creates a campaign optimization rule.
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
   * @param {CreateSPCampaignOptimizationRulesRequest} createSPCampaignOptimizationRulesRequest
   * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof CampaignOptimizationRulesApi
   */
  public createOptimizationRule(
    amazonAdvertisingAPIClientId: string,
    createSPCampaignOptimizationRulesRequest: CreateSPCampaignOptimizationRulesRequest,
    amazonAdvertisingAPIScope?: string,
    options?: RawAxiosRequestConfig
  ) {
    return CampaignOptimizationRulesApiFp(this.configuration)
      .createOptimizationRule(amazonAdvertisingAPIClientId, createSPCampaignOptimizationRulesRequest, amazonAdvertisingAPIScope, options)
      .then(request => request(this.axios, this.basePath));
  }

  /**
   *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @summary Deletes a campaign optimization rule specified by identifier.
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} campaignOptimizationId The sp campaign optimization rule identifier.
   * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof CampaignOptimizationRulesApi
   */
  public deleteCampaignOptimizationRule(
    amazonAdvertisingAPIClientId: string,
    campaignOptimizationId: string,
    amazonAdvertisingAPIScope?: string,
    options?: RawAxiosRequestConfig
  ) {
    return CampaignOptimizationRulesApiFp(this.configuration)
      .deleteCampaignOptimizationRule(amazonAdvertisingAPIClientId, campaignOptimizationId, amazonAdvertisingAPIScope, options)
      .then(request => request(this.axios, this.basePath));
  }

  /**
   *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
   * @summary Gets a campaign optimization rule specified by identifier.
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} campaignOptimizationId The sp campaign optimization rule identifier.
   * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof CampaignOptimizationRulesApi
   */
  public getCampaignOptimizationRule(
    amazonAdvertisingAPIClientId: string,
    campaignOptimizationId: string,
    amazonAdvertisingAPIScope?: string,
    options?: RawAxiosRequestConfig
  ) {
    return CampaignOptimizationRulesApiFp(this.configuration)
      .getCampaignOptimizationRule(amazonAdvertisingAPIClientId, campaignOptimizationId, amazonAdvertisingAPIScope, options)
      .then(request => request(this.axios, this.basePath));
  }

  /**
   *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
   * @summary Gets a campaign optimization rule eligibility for SP campaigns.
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
   * @param {SPCampaignOptimizationRecommendationsAPIRequest} sPCampaignOptimizationRecommendationsAPIRequest
   * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof CampaignOptimizationRulesApi
   */
  public getOptimizationRuleEligibility(
    amazonAdvertisingAPIClientId: string,
    sPCampaignOptimizationRecommendationsAPIRequest: SPCampaignOptimizationRecommendationsAPIRequest,
    amazonAdvertisingAPIScope?: string,
    options?: RawAxiosRequestConfig
  ) {
    return CampaignOptimizationRulesApiFp(this.configuration)
      .getOptimizationRuleEligibility(
        amazonAdvertisingAPIClientId,
        sPCampaignOptimizationRecommendationsAPIRequest,
        amazonAdvertisingAPIScope,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
   * @summary Gets campaign optimization rule state. Recommended refresh frequency is once a day.
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
   * @param {SPCampaignOptimizationNotificationAPIRequest} sPCampaignOptimizationNotificationAPIRequest
   * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof CampaignOptimizationRulesApi
   */
  public getRuleNotification(
    amazonAdvertisingAPIClientId: string,
    sPCampaignOptimizationNotificationAPIRequest: SPCampaignOptimizationNotificationAPIRequest,
    amazonAdvertisingAPIScope?: string,
    options?: RawAxiosRequestConfig
  ) {
    return CampaignOptimizationRulesApiFp(this.configuration)
      .getRuleNotification(amazonAdvertisingAPIClientId, sPCampaignOptimizationNotificationAPIRequest, amazonAdvertisingAPIScope, options)
      .then(request => request(this.axios, this.basePath));
  }

  /**
   *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @summary Updates a campaign optimization rule.
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
   * @param {UpdateSPCampaignOptimizationRulesRequest} updateSPCampaignOptimizationRulesRequest
   * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof CampaignOptimizationRulesApi
   */
  public updateOptimizationRule(
    amazonAdvertisingAPIClientId: string,
    updateSPCampaignOptimizationRulesRequest: UpdateSPCampaignOptimizationRulesRequest,
    amazonAdvertisingAPIScope?: string,
    options?: RawAxiosRequestConfig
  ) {
    return CampaignOptimizationRulesApiFp(this.configuration)
      .updateOptimizationRule(amazonAdvertisingAPIClientId, updateSPCampaignOptimizationRulesRequest, amazonAdvertisingAPIScope, options)
      .then(request => request(this.axios, this.basePath));
  }
}

/**
 * CampaignsApi - axios parameter creator
 * @export
 */
export const CampaignsApiAxiosParamCreator = function (configuration?: Configuration) {
  return {
    /**
     * Create campaigns  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsCreateSponsoredProductsCampaignsRequestContent} sponsoredProductsCreateSponsoredProductsCampaignsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createSponsoredProductsCampaigns: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateSponsoredProductsCampaignsRequestContent: SponsoredProductsCreateSponsoredProductsCampaignsRequestContent,
      prefer?: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('createSponsoredProductsCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('createSponsoredProductsCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'sponsoredProductsCreateSponsoredProductsCampaignsRequestContent' is not null or undefined
      assertParamExists(
        'createSponsoredProductsCampaigns',
        'sponsoredProductsCreateSponsoredProductsCampaignsRequestContent',
        sponsoredProductsCreateSponsoredProductsCampaignsRequestContent
      );
      const localVarPath = `/sp/campaigns`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spCampaign.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      if (prefer != null) {
        localVarHeaderParameter['Prefer'] = String(prefer);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsCreateSponsoredProductsCampaignsRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * Delete campaigns  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsDeleteSponsoredProductsCampaignsRequestContent} sponsoredProductsDeleteSponsoredProductsCampaignsRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteSponsoredProductsCampaigns: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsDeleteSponsoredProductsCampaignsRequestContent: SponsoredProductsDeleteSponsoredProductsCampaignsRequestContent,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('deleteSponsoredProductsCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('deleteSponsoredProductsCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'sponsoredProductsDeleteSponsoredProductsCampaignsRequestContent' is not null or undefined
      assertParamExists(
        'deleteSponsoredProductsCampaigns',
        'sponsoredProductsDeleteSponsoredProductsCampaignsRequestContent',
        sponsoredProductsDeleteSponsoredProductsCampaignsRequestContent
      );
      const localVarPath = `/sp/campaigns/delete`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spCampaign.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsDeleteSponsoredProductsCampaignsRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * List campaigns  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsListSponsoredProductsCampaignsRequestContent} [sponsoredProductsListSponsoredProductsCampaignsRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listSponsoredProductsCampaigns: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListSponsoredProductsCampaignsRequestContent?: SponsoredProductsListSponsoredProductsCampaignsRequestContent,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('listSponsoredProductsCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('listSponsoredProductsCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      const localVarPath = `/sp/campaigns/list`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spCampaign.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsListSponsoredProductsCampaignsRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * Update campaigns  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsUpdateSponsoredProductsCampaignsRequestContent} sponsoredProductsUpdateSponsoredProductsCampaignsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateSponsoredProductsCampaigns: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsUpdateSponsoredProductsCampaignsRequestContent: SponsoredProductsUpdateSponsoredProductsCampaignsRequestContent,
      prefer?: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('updateSponsoredProductsCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('updateSponsoredProductsCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'sponsoredProductsUpdateSponsoredProductsCampaignsRequestContent' is not null or undefined
      assertParamExists(
        'updateSponsoredProductsCampaigns',
        'sponsoredProductsUpdateSponsoredProductsCampaignsRequestContent',
        sponsoredProductsUpdateSponsoredProductsCampaignsRequestContent
      );
      const localVarPath = `/sp/campaigns`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spCampaign.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      if (prefer != null) {
        localVarHeaderParameter['Prefer'] = String(prefer);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsUpdateSponsoredProductsCampaignsRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
  };
};

/**
 * CampaignsApi - functional programming interface
 * @export
 */
export const CampaignsApiFp = function (configuration?: Configuration) {
  const localVarAxiosParamCreator = CampaignsApiAxiosParamCreator(configuration);
  return {
    /**
     * Create campaigns  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsCreateSponsoredProductsCampaignsRequestContent} sponsoredProductsCreateSponsoredProductsCampaignsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async createSponsoredProductsCampaigns(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateSponsoredProductsCampaignsRequestContent: SponsoredProductsCreateSponsoredProductsCampaignsRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsCreateSponsoredProductsCampaignsResponseContent>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.createSponsoredProductsCampaigns(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsCreateSponsoredProductsCampaignsRequestContent,
        prefer,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['CampaignsApi.createSponsoredProductsCampaigns']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * Delete campaigns  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsDeleteSponsoredProductsCampaignsRequestContent} sponsoredProductsDeleteSponsoredProductsCampaignsRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async deleteSponsoredProductsCampaigns(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsDeleteSponsoredProductsCampaignsRequestContent: SponsoredProductsDeleteSponsoredProductsCampaignsRequestContent,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsDeleteSponsoredProductsCampaignsResponseContent>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteSponsoredProductsCampaigns(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsDeleteSponsoredProductsCampaignsRequestContent,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['CampaignsApi.deleteSponsoredProductsCampaigns']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * List campaigns  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsListSponsoredProductsCampaignsRequestContent} [sponsoredProductsListSponsoredProductsCampaignsRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async listSponsoredProductsCampaigns(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListSponsoredProductsCampaignsRequestContent?: SponsoredProductsListSponsoredProductsCampaignsRequestContent,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsListSponsoredProductsCampaignsResponseContent>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.listSponsoredProductsCampaigns(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsListSponsoredProductsCampaignsRequestContent,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath = operationServerMap['CampaignsApi.listSponsoredProductsCampaigns']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * Update campaigns  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsUpdateSponsoredProductsCampaignsRequestContent} sponsoredProductsUpdateSponsoredProductsCampaignsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async updateSponsoredProductsCampaigns(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsUpdateSponsoredProductsCampaignsRequestContent: SponsoredProductsUpdateSponsoredProductsCampaignsRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsUpdateSponsoredProductsCampaignsResponseContent>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.updateSponsoredProductsCampaigns(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsUpdateSponsoredProductsCampaignsRequestContent,
        prefer,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['CampaignsApi.updateSponsoredProductsCampaigns']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
  };
};

/**
 * CampaignsApi - factory interface
 * @export
 */
export const CampaignsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
  const localVarFp = CampaignsApiFp(configuration);
  return {
    /**
     * Create campaigns  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsCreateSponsoredProductsCampaignsRequestContent} sponsoredProductsCreateSponsoredProductsCampaignsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createSponsoredProductsCampaigns(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateSponsoredProductsCampaignsRequestContent: SponsoredProductsCreateSponsoredProductsCampaignsRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsCreateSponsoredProductsCampaignsResponseContent> {
      return localVarFp
        .createSponsoredProductsCampaigns(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsCreateSponsoredProductsCampaignsRequestContent,
          prefer,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * Delete campaigns  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsDeleteSponsoredProductsCampaignsRequestContent} sponsoredProductsDeleteSponsoredProductsCampaignsRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteSponsoredProductsCampaigns(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsDeleteSponsoredProductsCampaignsRequestContent: SponsoredProductsDeleteSponsoredProductsCampaignsRequestContent,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsDeleteSponsoredProductsCampaignsResponseContent> {
      return localVarFp
        .deleteSponsoredProductsCampaigns(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsDeleteSponsoredProductsCampaignsRequestContent,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * List campaigns  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsListSponsoredProductsCampaignsRequestContent} [sponsoredProductsListSponsoredProductsCampaignsRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listSponsoredProductsCampaigns(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListSponsoredProductsCampaignsRequestContent?: SponsoredProductsListSponsoredProductsCampaignsRequestContent,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsListSponsoredProductsCampaignsResponseContent> {
      return localVarFp
        .listSponsoredProductsCampaigns(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsListSponsoredProductsCampaignsRequestContent,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * Update campaigns  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsUpdateSponsoredProductsCampaignsRequestContent} sponsoredProductsUpdateSponsoredProductsCampaignsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateSponsoredProductsCampaigns(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsUpdateSponsoredProductsCampaignsRequestContent: SponsoredProductsUpdateSponsoredProductsCampaignsRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsUpdateSponsoredProductsCampaignsResponseContent> {
      return localVarFp
        .updateSponsoredProductsCampaigns(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsUpdateSponsoredProductsCampaignsRequestContent,
          prefer,
          options
        )
        .then(request => request(axios, basePath));
    },
  };
};

/**
 * CampaignsApi - object-oriented interface
 * @export
 * @class CampaignsApi
 * @extends {BaseAPI}
 */
export class CampaignsApi extends BaseAPI {
  /**
   * Create campaigns  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsCreateSponsoredProductsCampaignsRequestContent} sponsoredProductsCreateSponsoredProductsCampaignsRequestContent
   * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof CampaignsApi
   */
  public createSponsoredProductsCampaigns(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsCreateSponsoredProductsCampaignsRequestContent: SponsoredProductsCreateSponsoredProductsCampaignsRequestContent,
    prefer?: string,
    options?: RawAxiosRequestConfig
  ) {
    return CampaignsApiFp(this.configuration)
      .createSponsoredProductsCampaigns(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsCreateSponsoredProductsCampaignsRequestContent,
        prefer,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * Delete campaigns  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsDeleteSponsoredProductsCampaignsRequestContent} sponsoredProductsDeleteSponsoredProductsCampaignsRequestContent
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof CampaignsApi
   */
  public deleteSponsoredProductsCampaigns(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsDeleteSponsoredProductsCampaignsRequestContent: SponsoredProductsDeleteSponsoredProductsCampaignsRequestContent,
    options?: RawAxiosRequestConfig
  ) {
    return CampaignsApiFp(this.configuration)
      .deleteSponsoredProductsCampaigns(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsDeleteSponsoredProductsCampaignsRequestContent,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * List campaigns  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsListSponsoredProductsCampaignsRequestContent} [sponsoredProductsListSponsoredProductsCampaignsRequestContent]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof CampaignsApi
   */
  public listSponsoredProductsCampaigns(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsListSponsoredProductsCampaignsRequestContent?: SponsoredProductsListSponsoredProductsCampaignsRequestContent,
    options?: RawAxiosRequestConfig
  ) {
    return CampaignsApiFp(this.configuration)
      .listSponsoredProductsCampaigns(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsListSponsoredProductsCampaignsRequestContent,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * Update campaigns  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsUpdateSponsoredProductsCampaignsRequestContent} sponsoredProductsUpdateSponsoredProductsCampaignsRequestContent
   * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof CampaignsApi
   */
  public updateSponsoredProductsCampaigns(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsUpdateSponsoredProductsCampaignsRequestContent: SponsoredProductsUpdateSponsoredProductsCampaignsRequestContent,
    prefer?: string,
    options?: RawAxiosRequestConfig
  ) {
    return CampaignsApiFp(this.configuration)
      .updateSponsoredProductsCampaigns(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsUpdateSponsoredProductsCampaignsRequestContent,
        prefer,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }
}

/**
 * ConsolidatedRecommendationsApi - axios parameter creator
 * @export
 */
export const ConsolidatedRecommendationsApiAxiosParamCreator = function (configuration?: Configuration) {
  return {
    /**
     * Gets the top consolidated recommendations across bid, budget, targeting for SP campaigns given an advertiser profile id. The recommendations are refreshed everyday.  **Requires one of these permissions**: [\"advertiser_campaign_view\",\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @param {Array<string>} [campaignIds] Optional.  Returns or generates recommendations only for the specified campaignIds.
     * @param {string} [nextToken] Optional. Token to retrieve subsequent page of results.
     * @param {string} [maxResults] Optional. Limits the number of items to return in the response.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCampaignRecommendations: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      campaignIds?: Array<string>,
      nextToken?: string,
      maxResults?: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('getCampaignRecommendations', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('getCampaignRecommendations', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      const localVarPath = `/sp/campaign/recommendations`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      if (campaignIds) {
        localVarQueryParameter['campaignIds'] = campaignIds;
      }

      if (nextToken !== undefined) {
        localVarQueryParameter['nextToken'] = nextToken;
      }

      if (maxResults !== undefined) {
        localVarQueryParameter['maxResults'] = maxResults;
      }

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
  };
};

/**
 * ConsolidatedRecommendationsApi - functional programming interface
 * @export
 */
export const ConsolidatedRecommendationsApiFp = function (configuration?: Configuration) {
  const localVarAxiosParamCreator = ConsolidatedRecommendationsApiAxiosParamCreator(configuration);
  return {
    /**
     * Gets the top consolidated recommendations across bid, budget, targeting for SP campaigns given an advertiser profile id. The recommendations are refreshed everyday.  **Requires one of these permissions**: [\"advertiser_campaign_view\",\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @param {Array<string>} [campaignIds] Optional.  Returns or generates recommendations only for the specified campaignIds.
     * @param {string} [nextToken] Optional. Token to retrieve subsequent page of results.
     * @param {string} [maxResults] Optional. Limits the number of items to return in the response.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async getCampaignRecommendations(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      campaignIds?: Array<string>,
      nextToken?: string,
      maxResults?: string,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCampaignRecommendationsResponse>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.getCampaignRecommendations(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        campaignIds,
        nextToken,
        maxResults,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['ConsolidatedRecommendationsApi.getCampaignRecommendations']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
  };
};

/**
 * ConsolidatedRecommendationsApi - factory interface
 * @export
 */
export const ConsolidatedRecommendationsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
  const localVarFp = ConsolidatedRecommendationsApiFp(configuration);
  return {
    /**
     * Gets the top consolidated recommendations across bid, budget, targeting for SP campaigns given an advertiser profile id. The recommendations are refreshed everyday.  **Requires one of these permissions**: [\"advertiser_campaign_view\",\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @param {Array<string>} [campaignIds] Optional.  Returns or generates recommendations only for the specified campaignIds.
     * @param {string} [nextToken] Optional. Token to retrieve subsequent page of results.
     * @param {string} [maxResults] Optional. Limits the number of items to return in the response.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCampaignRecommendations(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      campaignIds?: Array<string>,
      nextToken?: string,
      maxResults?: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<GetCampaignRecommendationsResponse> {
      return localVarFp
        .getCampaignRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignIds, nextToken, maxResults, options)
        .then(request => request(axios, basePath));
    },
  };
};

/**
 * ConsolidatedRecommendationsApi - object-oriented interface
 * @export
 * @class ConsolidatedRecommendationsApi
 * @extends {BaseAPI}
 */
export class ConsolidatedRecommendationsApi extends BaseAPI {
  /**
   * Gets the top consolidated recommendations across bid, budget, targeting for SP campaigns given an advertiser profile id. The recommendations are refreshed everyday.  **Requires one of these permissions**: [\"advertiser_campaign_view\",\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
   * @param {Array<string>} [campaignIds] Optional.  Returns or generates recommendations only for the specified campaignIds.
   * @param {string} [nextToken] Optional. Token to retrieve subsequent page of results.
   * @param {string} [maxResults] Optional. Limits the number of items to return in the response.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof ConsolidatedRecommendationsApi
   */
  public getCampaignRecommendations(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    campaignIds?: Array<string>,
    nextToken?: string,
    maxResults?: string,
    options?: RawAxiosRequestConfig
  ) {
    return ConsolidatedRecommendationsApiFp(this.configuration)
      .getCampaignRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignIds, nextToken, maxResults, options)
      .then(request => request(this.axios, this.basePath));
  }
}

/**
 * KeywordGroupTargetingRecommendationsApi - axios parameter creator
 * @export
 */
export const KeywordGroupTargetingRecommendationsApiAxiosParamCreator = function (configuration?: Configuration) {
  return {
    /**
     * This API (currently beta) recommends Keyword Group targets for a given list of Ad ASINs. Keyword Groups is a new control for Amazon Ads Sponsored Products keyword-based campaigns that enables advertisers to reach relevant audiences through a collection of keywords.  Once a Keyword Group specification is created, the performance of Keyword Groups will be available in the search terms report. Keyword Groups improves campaign performance by dynamically updating the keywords within a group through the campaign lifecycle and eliminates the need for advertisers to constantly curate new keywords. Additionally, Keyword Groups can be used alongside keywords within the same ad group.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @param {string} [locale] User specified locale. If nothing is passed the default for the marketplace will be used. The value should confirm to the IETF BCP 47 standard, using language tags composed of language- and optionally region specific sub-tags (e.g., \&#39;en-us\&#39; for American English and \&#39;fr-CA\&#39; for Canadian French).
     * @param {KeywordGroupsRecommendationsRequest} [keywordGroupsRecommendationsRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getKeywordGroupRecommendations: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      locale?: string,
      keywordGroupsRecommendationsRequest?: KeywordGroupsRecommendationsRequest,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('getKeywordGroupRecommendations', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('getKeywordGroupRecommendations', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      const localVarPath = `/sp/targeting/recommendations/keywordGroups`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spkeywordgroupsrecommendations.v1.0+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      if (locale != null) {
        localVarHeaderParameter['locale'] = String(locale);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(keywordGroupsRecommendationsRequest, localVarRequestOptions, configuration);

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
  };
};

/**
 * KeywordGroupTargetingRecommendationsApi - functional programming interface
 * @export
 */
export const KeywordGroupTargetingRecommendationsApiFp = function (configuration?: Configuration) {
  const localVarAxiosParamCreator = KeywordGroupTargetingRecommendationsApiAxiosParamCreator(configuration);
  return {
    /**
     * This API (currently beta) recommends Keyword Group targets for a given list of Ad ASINs. Keyword Groups is a new control for Amazon Ads Sponsored Products keyword-based campaigns that enables advertisers to reach relevant audiences through a collection of keywords.  Once a Keyword Group specification is created, the performance of Keyword Groups will be available in the search terms report. Keyword Groups improves campaign performance by dynamically updating the keywords within a group through the campaign lifecycle and eliminates the need for advertisers to constantly curate new keywords. Additionally, Keyword Groups can be used alongside keywords within the same ad group.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @param {string} [locale] User specified locale. If nothing is passed the default for the marketplace will be used. The value should confirm to the IETF BCP 47 standard, using language tags composed of language- and optionally region specific sub-tags (e.g., \&#39;en-us\&#39; for American English and \&#39;fr-CA\&#39; for Canadian French).
     * @param {KeywordGroupsRecommendationsRequest} [keywordGroupsRecommendationsRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async getKeywordGroupRecommendations(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      locale?: string,
      keywordGroupsRecommendationsRequest?: KeywordGroupsRecommendationsRequest,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<KeywordGroupsRecommendationsResponse>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.getKeywordGroupRecommendations(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        locale,
        keywordGroupsRecommendationsRequest,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['KeywordGroupTargetingRecommendationsApi.getKeywordGroupRecommendations']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
  };
};

/**
 * KeywordGroupTargetingRecommendationsApi - factory interface
 * @export
 */
export const KeywordGroupTargetingRecommendationsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
  const localVarFp = KeywordGroupTargetingRecommendationsApiFp(configuration);
  return {
    /**
     * This API (currently beta) recommends Keyword Group targets for a given list of Ad ASINs. Keyword Groups is a new control for Amazon Ads Sponsored Products keyword-based campaigns that enables advertisers to reach relevant audiences through a collection of keywords.  Once a Keyword Group specification is created, the performance of Keyword Groups will be available in the search terms report. Keyword Groups improves campaign performance by dynamically updating the keywords within a group through the campaign lifecycle and eliminates the need for advertisers to constantly curate new keywords. Additionally, Keyword Groups can be used alongside keywords within the same ad group.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @param {string} [locale] User specified locale. If nothing is passed the default for the marketplace will be used. The value should confirm to the IETF BCP 47 standard, using language tags composed of language- and optionally region specific sub-tags (e.g., \&#39;en-us\&#39; for American English and \&#39;fr-CA\&#39; for Canadian French).
     * @param {KeywordGroupsRecommendationsRequest} [keywordGroupsRecommendationsRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getKeywordGroupRecommendations(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      locale?: string,
      keywordGroupsRecommendationsRequest?: KeywordGroupsRecommendationsRequest,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<KeywordGroupsRecommendationsResponse> {
      return localVarFp
        .getKeywordGroupRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, locale, keywordGroupsRecommendationsRequest, options)
        .then(request => request(axios, basePath));
    },
  };
};

/**
 * KeywordGroupTargetingRecommendationsApi - object-oriented interface
 * @export
 * @class KeywordGroupTargetingRecommendationsApi
 * @extends {BaseAPI}
 */
export class KeywordGroupTargetingRecommendationsApi extends BaseAPI {
  /**
   * This API (currently beta) recommends Keyword Group targets for a given list of Ad ASINs. Keyword Groups is a new control for Amazon Ads Sponsored Products keyword-based campaigns that enables advertisers to reach relevant audiences through a collection of keywords.  Once a Keyword Group specification is created, the performance of Keyword Groups will be available in the search terms report. Keyword Groups improves campaign performance by dynamically updating the keywords within a group through the campaign lifecycle and eliminates the need for advertisers to constantly curate new keywords. Additionally, Keyword Groups can be used alongside keywords within the same ad group.
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
   * @param {string} [locale] User specified locale. If nothing is passed the default for the marketplace will be used. The value should confirm to the IETF BCP 47 standard, using language tags composed of language- and optionally region specific sub-tags (e.g., \&#39;en-us\&#39; for American English and \&#39;fr-CA\&#39; for Canadian French).
   * @param {KeywordGroupsRecommendationsRequest} [keywordGroupsRecommendationsRequest]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof KeywordGroupTargetingRecommendationsApi
   */
  public getKeywordGroupRecommendations(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    locale?: string,
    keywordGroupsRecommendationsRequest?: KeywordGroupsRecommendationsRequest,
    options?: RawAxiosRequestConfig
  ) {
    return KeywordGroupTargetingRecommendationsApiFp(this.configuration)
      .getKeywordGroupRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, locale, keywordGroupsRecommendationsRequest, options)
      .then(request => request(this.axios, this.basePath));
  }
}

/**
 * KeywordTargetsApi - axios parameter creator
 * @export
 */
export const KeywordTargetsApiAxiosParamCreator = function (configuration?: Configuration) {
  return {
    /**
     * The <b> POST /sp/global/targets/keywords/recommendations/list </b> endpoint returns recommended keyword targets for a list of countries given either A) a list of ad ASINs per target country or B) a global campaign ID and ad group ID. Please use the recommendationType field to specify if you want to use option A or option B. This endpoint will also return recommended bids along with each recommendation keyword target.<br><br> <b> Asins</b> <br>Global API endpoint accepts <b>asins</b> array. Item is a <b>country asin map</b> Key is the 2-letter country code. Value is an asin.<br><br> <b> Targets</b> <br>Global API endpoint accepts <b>targets</b> array. Item is a <b>country target object</b> Object has two fields: matchType and countryKeywords. CountryKeywords is a map with a key as the 2-letter country code and value as a keyword object. <br/><br/>Each country will be processed in parallel according to rules of <a href=\"https://advertising.amazon.com/API/docs/en-us/sponsored-products/3-0/openapi/prod#tag/Keyword-Targets:~:text=keywords/localize%20endpoint.-,Version%205.0,-New%20Features\">version 5</a> recommendation API.<h3> Availability </h3> Global keyword recommendation API is available in all the marketplaces.
     * @summary Get global keyword recommendations
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdsAccountId The identifier of a profile associated with the advertiser account. Used for authentication of Global Account.
     * @param {string} [amazonAdvertisingAPIMarketplaceId] The advertiser\&#39;s Marketplace ID associated with the advertiser account to support single marketplace request. Will not be used if global account id is provided.
     * @param {string} [amazonAdvertisingAPIAdvertiserId] The advertiser\&#39;s ID associated with the advertiser account to support single marketplace request. Will not be used if global account id is provided.
     * @param {GetGlobalRankedKeywordRecommendationRequest} [getGlobalRankedKeywordRecommendationRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getGlobalRankedKeywordRecommendation: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      amazonAdsAccountId: string,
      amazonAdvertisingAPIMarketplaceId?: string,
      amazonAdvertisingAPIAdvertiserId?: string,
      getGlobalRankedKeywordRecommendationRequest?: GetGlobalRankedKeywordRecommendationRequest,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('getGlobalRankedKeywordRecommendation', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('getGlobalRankedKeywordRecommendation', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'amazonAdsAccountId' is not null or undefined
      assertParamExists('getGlobalRankedKeywordRecommendation', 'amazonAdsAccountId', amazonAdsAccountId);
      const localVarPath = `/sp/global/targets/keywords/recommendations/list`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spkeywordsrecommendation.v5+json';

      if (amazonAdvertisingAPIMarketplaceId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-MarketplaceId'] = String(amazonAdvertisingAPIMarketplaceId);
      }
      if (amazonAdvertisingAPIAdvertiserId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-AdvertiserId'] = String(amazonAdvertisingAPIAdvertiserId);
      }
      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      if (amazonAdsAccountId != null) {
        localVarHeaderParameter['Amazon-Ads-AccountId'] = String(amazonAdsAccountId);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(getGlobalRankedKeywordRecommendationRequest, localVarRequestOptions, configuration);

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * The <b> POST /sp/targets/keywords/recommendations </b> endpoint returns recommended keyword targets given either A) a list of ad ASINs or B) a campaign ID and ad group ID. Please use the recommendationType field to specify if you want to use option A or option B. This endpoint will also return recommended bids along with each recommendation keyword target.<br><br> <b> Ranking </b> <br> The keyword recommendations will be ranked in descending order of clicks or impressions, depending on the <b>sortDimension</b> field provided by the user. You may also input your own keyword targets to be ranked alongside the keyword recommendations by using the <b>targets</b> array. <br><br> <b> Localization </b> <br> Use the <b> locale </b> field to get keywords in your specified locale. Supported marketplace to locale mappings can be found at the <a href=\'https://advertising.amazon.com/API/docs/en-us/localization/#/Keyword%20Localization\'>POST /keywords/localize</a> endpoint. <h1> Version 5.0 </h1>  <h2> New Features </h2> Version 5.0 utilizes the new theme-based bid recommendations, which can be retrieved at the endpoint <b>/sp/targets/bid/recommendations</b>, to return improved bid recommendations for each keyword. Theme-based bid recommendations provide \\\\\\\"themes\\\\\\\" and \\\\\\\"impact metrics\\\\\\\" along with each bid suggestion to help you choose the right bid for your keyword target.<br><br><b>Themes</b><br> We now may return multiple bid suggestions for each keyword target. Each suggestion will have a theme to express the business objective of the bid. Available themes are: <ul> <li> CONVERSION_OPPORTUNITIES - The default theme which aims to maximize number of conversions. </li> <li> SPECIAL_DAYS - A theme available during high sales events such as Prime Day, to anticipate an increase in sales and competition.</li></ul><b>Impact Metrics</b><br>We have added impact metrics which provide insight on the number of clicks and conversions you will receive for targeting a keyword at a certain bid. <br><br><b>Bidding Strategy</b><br> You may now specify your bidding strategy in the KEYWORDS_BY_ASINS request to get bid suggestions tailored to your bidding strategy. For KEYWORDS_BY_ADGROUP requests, you will not specify a bidding strategy, because the bidding strategy of the ad group is used. The three bidding strategies are: <ul> <li> LEGACY_FOR_SALES - Dynamic bids (down only) </li> <li> AUTO_FOR_SALES - Dynamic bids (up and down) </li> <li> MANUAL - Fixed bids </li> </ul> <h3> Availability </h3> Version 5.0 is only available in the following marketplaces: US, CA, UK, DE, FR, ES, IN, JP. <h1> Version 4.0 </h1> <h2> New features </h2> Version 4.0 allows users to retrieve recommended keyword targets which are sorted in descending order of clicks or conversions. The default sort dimension, if not specified, ranks recommendations by our interal ranking mechanism. We have also added search term metrics. <b> Search term impression share </b> indicates the percentage share of all ad-attributed impressions you received on that keyword in the last 30 days. This metric helps advertisers identify potential opportunities based on their share on relevant keywords. <b> Search term impression rank </b> indicates your ranking among all advertisers for the keyword by ad impressions in a marketplace. It tells an advertiser how many advertisers had higher share of ad impressions. <i> Search term information is only available for keywords the advertiser targeted with ad impressions. </i> <h3> Availability </h3> Version 4.0 is available in all marketplaces.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Get keyword recommendations
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [amazonAdvertisingAPIMarketplaceId] The advertiser\&#39;s Marketplace ID associated with the advertiser. account.
     * @param {string} [amazonAdvertisingAPIAdvertiserId] The advertiser\&#39;s ID associated with the advertiser account.
     * @param {GetRankedKeywordRecommendationRequest} [getRankedKeywordRecommendationRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRankedKeywordRecommendation: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      amazonAdvertisingAPIMarketplaceId?: string,
      amazonAdvertisingAPIAdvertiserId?: string,
      getRankedKeywordRecommendationRequest?: GetRankedKeywordRecommendationRequest,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('getRankedKeywordRecommendation', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('getRankedKeywordRecommendation', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      const localVarPath = `/sp/targets/keywords/recommendations`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spkeywordsrecommendation.v3+json';

      if (amazonAdvertisingAPIMarketplaceId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-MarketplaceId'] = String(amazonAdvertisingAPIMarketplaceId);
      }
      if (amazonAdvertisingAPIAdvertiserId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-AdvertiserId'] = String(amazonAdvertisingAPIAdvertiserId);
      }
      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(getRankedKeywordRecommendationRequest, localVarRequestOptions, configuration);

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
  };
};

/**
 * KeywordTargetsApi - functional programming interface
 * @export
 */
export const KeywordTargetsApiFp = function (configuration?: Configuration) {
  const localVarAxiosParamCreator = KeywordTargetsApiAxiosParamCreator(configuration);
  return {
    /**
     * The <b> POST /sp/global/targets/keywords/recommendations/list </b> endpoint returns recommended keyword targets for a list of countries given either A) a list of ad ASINs per target country or B) a global campaign ID and ad group ID. Please use the recommendationType field to specify if you want to use option A or option B. This endpoint will also return recommended bids along with each recommendation keyword target.<br><br> <b> Asins</b> <br>Global API endpoint accepts <b>asins</b> array. Item is a <b>country asin map</b> Key is the 2-letter country code. Value is an asin.<br><br> <b> Targets</b> <br>Global API endpoint accepts <b>targets</b> array. Item is a <b>country target object</b> Object has two fields: matchType and countryKeywords. CountryKeywords is a map with a key as the 2-letter country code and value as a keyword object. <br/><br/>Each country will be processed in parallel according to rules of <a href=\"https://advertising.amazon.com/API/docs/en-us/sponsored-products/3-0/openapi/prod#tag/Keyword-Targets:~:text=keywords/localize%20endpoint.-,Version%205.0,-New%20Features\">version 5</a> recommendation API.<h3> Availability </h3> Global keyword recommendation API is available in all the marketplaces.
     * @summary Get global keyword recommendations
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdsAccountId The identifier of a profile associated with the advertiser account. Used for authentication of Global Account.
     * @param {string} [amazonAdvertisingAPIMarketplaceId] The advertiser\&#39;s Marketplace ID associated with the advertiser account to support single marketplace request. Will not be used if global account id is provided.
     * @param {string} [amazonAdvertisingAPIAdvertiserId] The advertiser\&#39;s ID associated with the advertiser account to support single marketplace request. Will not be used if global account id is provided.
     * @param {GetGlobalRankedKeywordRecommendationRequest} [getGlobalRankedKeywordRecommendationRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async getGlobalRankedKeywordRecommendation(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      amazonAdsAccountId: string,
      amazonAdvertisingAPIMarketplaceId?: string,
      amazonAdvertisingAPIAdvertiserId?: string,
      getGlobalRankedKeywordRecommendationRequest?: GetGlobalRankedKeywordRecommendationRequest,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GlobalRankedTargetWithThemedBidsResponse>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.getGlobalRankedKeywordRecommendation(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        amazonAdsAccountId,
        amazonAdvertisingAPIMarketplaceId,
        amazonAdvertisingAPIAdvertiserId,
        getGlobalRankedKeywordRecommendationRequest,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['KeywordTargetsApi.getGlobalRankedKeywordRecommendation']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * The <b> POST /sp/targets/keywords/recommendations </b> endpoint returns recommended keyword targets given either A) a list of ad ASINs or B) a campaign ID and ad group ID. Please use the recommendationType field to specify if you want to use option A or option B. This endpoint will also return recommended bids along with each recommendation keyword target.<br><br> <b> Ranking </b> <br> The keyword recommendations will be ranked in descending order of clicks or impressions, depending on the <b>sortDimension</b> field provided by the user. You may also input your own keyword targets to be ranked alongside the keyword recommendations by using the <b>targets</b> array. <br><br> <b> Localization </b> <br> Use the <b> locale </b> field to get keywords in your specified locale. Supported marketplace to locale mappings can be found at the <a href=\'https://advertising.amazon.com/API/docs/en-us/localization/#/Keyword%20Localization\'>POST /keywords/localize</a> endpoint. <h1> Version 5.0 </h1>  <h2> New Features </h2> Version 5.0 utilizes the new theme-based bid recommendations, which can be retrieved at the endpoint <b>/sp/targets/bid/recommendations</b>, to return improved bid recommendations for each keyword. Theme-based bid recommendations provide \\\\\\\"themes\\\\\\\" and \\\\\\\"impact metrics\\\\\\\" along with each bid suggestion to help you choose the right bid for your keyword target.<br><br><b>Themes</b><br> We now may return multiple bid suggestions for each keyword target. Each suggestion will have a theme to express the business objective of the bid. Available themes are: <ul> <li> CONVERSION_OPPORTUNITIES - The default theme which aims to maximize number of conversions. </li> <li> SPECIAL_DAYS - A theme available during high sales events such as Prime Day, to anticipate an increase in sales and competition.</li></ul><b>Impact Metrics</b><br>We have added impact metrics which provide insight on the number of clicks and conversions you will receive for targeting a keyword at a certain bid. <br><br><b>Bidding Strategy</b><br> You may now specify your bidding strategy in the KEYWORDS_BY_ASINS request to get bid suggestions tailored to your bidding strategy. For KEYWORDS_BY_ADGROUP requests, you will not specify a bidding strategy, because the bidding strategy of the ad group is used. The three bidding strategies are: <ul> <li> LEGACY_FOR_SALES - Dynamic bids (down only) </li> <li> AUTO_FOR_SALES - Dynamic bids (up and down) </li> <li> MANUAL - Fixed bids </li> </ul> <h3> Availability </h3> Version 5.0 is only available in the following marketplaces: US, CA, UK, DE, FR, ES, IN, JP. <h1> Version 4.0 </h1> <h2> New features </h2> Version 4.0 allows users to retrieve recommended keyword targets which are sorted in descending order of clicks or conversions. The default sort dimension, if not specified, ranks recommendations by our interal ranking mechanism. We have also added search term metrics. <b> Search term impression share </b> indicates the percentage share of all ad-attributed impressions you received on that keyword in the last 30 days. This metric helps advertisers identify potential opportunities based on their share on relevant keywords. <b> Search term impression rank </b> indicates your ranking among all advertisers for the keyword by ad impressions in a marketplace. It tells an advertiser how many advertisers had higher share of ad impressions. <i> Search term information is only available for keywords the advertiser targeted with ad impressions. </i> <h3> Availability </h3> Version 4.0 is available in all marketplaces.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Get keyword recommendations
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [amazonAdvertisingAPIMarketplaceId] The advertiser\&#39;s Marketplace ID associated with the advertiser. account.
     * @param {string} [amazonAdvertisingAPIAdvertiserId] The advertiser\&#39;s ID associated with the advertiser account.
     * @param {GetRankedKeywordRecommendationRequest} [getRankedKeywordRecommendationRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async getRankedKeywordRecommendation(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      amazonAdvertisingAPIMarketplaceId?: string,
      amazonAdvertisingAPIAdvertiserId?: string,
      getRankedKeywordRecommendationRequest?: GetRankedKeywordRecommendationRequest,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<KeywordTargetResponse>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.getRankedKeywordRecommendation(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        amazonAdvertisingAPIMarketplaceId,
        amazonAdvertisingAPIAdvertiserId,
        getRankedKeywordRecommendationRequest,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['KeywordTargetsApi.getRankedKeywordRecommendation']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
  };
};

/**
 * KeywordTargetsApi - factory interface
 * @export
 */
export const KeywordTargetsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
  const localVarFp = KeywordTargetsApiFp(configuration);
  return {
    /**
     * The <b> POST /sp/global/targets/keywords/recommendations/list </b> endpoint returns recommended keyword targets for a list of countries given either A) a list of ad ASINs per target country or B) a global campaign ID and ad group ID. Please use the recommendationType field to specify if you want to use option A or option B. This endpoint will also return recommended bids along with each recommendation keyword target.<br><br> <b> Asins</b> <br>Global API endpoint accepts <b>asins</b> array. Item is a <b>country asin map</b> Key is the 2-letter country code. Value is an asin.<br><br> <b> Targets</b> <br>Global API endpoint accepts <b>targets</b> array. Item is a <b>country target object</b> Object has two fields: matchType and countryKeywords. CountryKeywords is a map with a key as the 2-letter country code and value as a keyword object. <br/><br/>Each country will be processed in parallel according to rules of <a href=\"https://advertising.amazon.com/API/docs/en-us/sponsored-products/3-0/openapi/prod#tag/Keyword-Targets:~:text=keywords/localize%20endpoint.-,Version%205.0,-New%20Features\">version 5</a> recommendation API.<h3> Availability </h3> Global keyword recommendation API is available in all the marketplaces.
     * @summary Get global keyword recommendations
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdsAccountId The identifier of a profile associated with the advertiser account. Used for authentication of Global Account.
     * @param {string} [amazonAdvertisingAPIMarketplaceId] The advertiser\&#39;s Marketplace ID associated with the advertiser account to support single marketplace request. Will not be used if global account id is provided.
     * @param {string} [amazonAdvertisingAPIAdvertiserId] The advertiser\&#39;s ID associated with the advertiser account to support single marketplace request. Will not be used if global account id is provided.
     * @param {GetGlobalRankedKeywordRecommendationRequest} [getGlobalRankedKeywordRecommendationRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getGlobalRankedKeywordRecommendation(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      amazonAdsAccountId: string,
      amazonAdvertisingAPIMarketplaceId?: string,
      amazonAdvertisingAPIAdvertiserId?: string,
      getGlobalRankedKeywordRecommendationRequest?: GetGlobalRankedKeywordRecommendationRequest,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<GlobalRankedTargetWithThemedBidsResponse> {
      return localVarFp
        .getGlobalRankedKeywordRecommendation(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          amazonAdsAccountId,
          amazonAdvertisingAPIMarketplaceId,
          amazonAdvertisingAPIAdvertiserId,
          getGlobalRankedKeywordRecommendationRequest,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * The <b> POST /sp/targets/keywords/recommendations </b> endpoint returns recommended keyword targets given either A) a list of ad ASINs or B) a campaign ID and ad group ID. Please use the recommendationType field to specify if you want to use option A or option B. This endpoint will also return recommended bids along with each recommendation keyword target.<br><br> <b> Ranking </b> <br> The keyword recommendations will be ranked in descending order of clicks or impressions, depending on the <b>sortDimension</b> field provided by the user. You may also input your own keyword targets to be ranked alongside the keyword recommendations by using the <b>targets</b> array. <br><br> <b> Localization </b> <br> Use the <b> locale </b> field to get keywords in your specified locale. Supported marketplace to locale mappings can be found at the <a href=\'https://advertising.amazon.com/API/docs/en-us/localization/#/Keyword%20Localization\'>POST /keywords/localize</a> endpoint. <h1> Version 5.0 </h1>  <h2> New Features </h2> Version 5.0 utilizes the new theme-based bid recommendations, which can be retrieved at the endpoint <b>/sp/targets/bid/recommendations</b>, to return improved bid recommendations for each keyword. Theme-based bid recommendations provide \\\\\\\"themes\\\\\\\" and \\\\\\\"impact metrics\\\\\\\" along with each bid suggestion to help you choose the right bid for your keyword target.<br><br><b>Themes</b><br> We now may return multiple bid suggestions for each keyword target. Each suggestion will have a theme to express the business objective of the bid. Available themes are: <ul> <li> CONVERSION_OPPORTUNITIES - The default theme which aims to maximize number of conversions. </li> <li> SPECIAL_DAYS - A theme available during high sales events such as Prime Day, to anticipate an increase in sales and competition.</li></ul><b>Impact Metrics</b><br>We have added impact metrics which provide insight on the number of clicks and conversions you will receive for targeting a keyword at a certain bid. <br><br><b>Bidding Strategy</b><br> You may now specify your bidding strategy in the KEYWORDS_BY_ASINS request to get bid suggestions tailored to your bidding strategy. For KEYWORDS_BY_ADGROUP requests, you will not specify a bidding strategy, because the bidding strategy of the ad group is used. The three bidding strategies are: <ul> <li> LEGACY_FOR_SALES - Dynamic bids (down only) </li> <li> AUTO_FOR_SALES - Dynamic bids (up and down) </li> <li> MANUAL - Fixed bids </li> </ul> <h3> Availability </h3> Version 5.0 is only available in the following marketplaces: US, CA, UK, DE, FR, ES, IN, JP. <h1> Version 4.0 </h1> <h2> New features </h2> Version 4.0 allows users to retrieve recommended keyword targets which are sorted in descending order of clicks or conversions. The default sort dimension, if not specified, ranks recommendations by our interal ranking mechanism. We have also added search term metrics. <b> Search term impression share </b> indicates the percentage share of all ad-attributed impressions you received on that keyword in the last 30 days. This metric helps advertisers identify potential opportunities based on their share on relevant keywords. <b> Search term impression rank </b> indicates your ranking among all advertisers for the keyword by ad impressions in a marketplace. It tells an advertiser how many advertisers had higher share of ad impressions. <i> Search term information is only available for keywords the advertiser targeted with ad impressions. </i> <h3> Availability </h3> Version 4.0 is available in all marketplaces.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Get keyword recommendations
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [amazonAdvertisingAPIMarketplaceId] The advertiser\&#39;s Marketplace ID associated with the advertiser. account.
     * @param {string} [amazonAdvertisingAPIAdvertiserId] The advertiser\&#39;s ID associated with the advertiser account.
     * @param {GetRankedKeywordRecommendationRequest} [getRankedKeywordRecommendationRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRankedKeywordRecommendation(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      amazonAdvertisingAPIMarketplaceId?: string,
      amazonAdvertisingAPIAdvertiserId?: string,
      getRankedKeywordRecommendationRequest?: GetRankedKeywordRecommendationRequest,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<KeywordTargetResponse> {
      return localVarFp
        .getRankedKeywordRecommendation(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          amazonAdvertisingAPIMarketplaceId,
          amazonAdvertisingAPIAdvertiserId,
          getRankedKeywordRecommendationRequest,
          options
        )
        .then(request => request(axios, basePath));
    },
  };
};

/**
 * KeywordTargetsApi - object-oriented interface
 * @export
 * @class KeywordTargetsApi
 * @extends {BaseAPI}
 */
export class KeywordTargetsApi extends BaseAPI {
  /**
   * The <b> POST /sp/global/targets/keywords/recommendations/list </b> endpoint returns recommended keyword targets for a list of countries given either A) a list of ad ASINs per target country or B) a global campaign ID and ad group ID. Please use the recommendationType field to specify if you want to use option A or option B. This endpoint will also return recommended bids along with each recommendation keyword target.<br><br> <b> Asins</b> <br>Global API endpoint accepts <b>asins</b> array. Item is a <b>country asin map</b> Key is the 2-letter country code. Value is an asin.<br><br> <b> Targets</b> <br>Global API endpoint accepts <b>targets</b> array. Item is a <b>country target object</b> Object has two fields: matchType and countryKeywords. CountryKeywords is a map with a key as the 2-letter country code and value as a keyword object. <br/><br/>Each country will be processed in parallel according to rules of <a href=\"https://advertising.amazon.com/API/docs/en-us/sponsored-products/3-0/openapi/prod#tag/Keyword-Targets:~:text=keywords/localize%20endpoint.-,Version%205.0,-New%20Features\">version 5</a> recommendation API.<h3> Availability </h3> Global keyword recommendation API is available in all the marketplaces.
   * @summary Get global keyword recommendations
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} amazonAdsAccountId The identifier of a profile associated with the advertiser account. Used for authentication of Global Account.
   * @param {string} [amazonAdvertisingAPIMarketplaceId] The advertiser\&#39;s Marketplace ID associated with the advertiser account to support single marketplace request. Will not be used if global account id is provided.
   * @param {string} [amazonAdvertisingAPIAdvertiserId] The advertiser\&#39;s ID associated with the advertiser account to support single marketplace request. Will not be used if global account id is provided.
   * @param {GetGlobalRankedKeywordRecommendationRequest} [getGlobalRankedKeywordRecommendationRequest]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof KeywordTargetsApi
   */
  public getGlobalRankedKeywordRecommendation(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    amazonAdsAccountId: string,
    amazonAdvertisingAPIMarketplaceId?: string,
    amazonAdvertisingAPIAdvertiserId?: string,
    getGlobalRankedKeywordRecommendationRequest?: GetGlobalRankedKeywordRecommendationRequest,
    options?: RawAxiosRequestConfig
  ) {
    return KeywordTargetsApiFp(this.configuration)
      .getGlobalRankedKeywordRecommendation(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        amazonAdsAccountId,
        amazonAdvertisingAPIMarketplaceId,
        amazonAdvertisingAPIAdvertiserId,
        getGlobalRankedKeywordRecommendationRequest,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * The <b> POST /sp/targets/keywords/recommendations </b> endpoint returns recommended keyword targets given either A) a list of ad ASINs or B) a campaign ID and ad group ID. Please use the recommendationType field to specify if you want to use option A or option B. This endpoint will also return recommended bids along with each recommendation keyword target.<br><br> <b> Ranking </b> <br> The keyword recommendations will be ranked in descending order of clicks or impressions, depending on the <b>sortDimension</b> field provided by the user. You may also input your own keyword targets to be ranked alongside the keyword recommendations by using the <b>targets</b> array. <br><br> <b> Localization </b> <br> Use the <b> locale </b> field to get keywords in your specified locale. Supported marketplace to locale mappings can be found at the <a href=\'https://advertising.amazon.com/API/docs/en-us/localization/#/Keyword%20Localization\'>POST /keywords/localize</a> endpoint. <h1> Version 5.0 </h1>  <h2> New Features </h2> Version 5.0 utilizes the new theme-based bid recommendations, which can be retrieved at the endpoint <b>/sp/targets/bid/recommendations</b>, to return improved bid recommendations for each keyword. Theme-based bid recommendations provide \\\\\\\"themes\\\\\\\" and \\\\\\\"impact metrics\\\\\\\" along with each bid suggestion to help you choose the right bid for your keyword target.<br><br><b>Themes</b><br> We now may return multiple bid suggestions for each keyword target. Each suggestion will have a theme to express the business objective of the bid. Available themes are: <ul> <li> CONVERSION_OPPORTUNITIES - The default theme which aims to maximize number of conversions. </li> <li> SPECIAL_DAYS - A theme available during high sales events such as Prime Day, to anticipate an increase in sales and competition.</li></ul><b>Impact Metrics</b><br>We have added impact metrics which provide insight on the number of clicks and conversions you will receive for targeting a keyword at a certain bid. <br><br><b>Bidding Strategy</b><br> You may now specify your bidding strategy in the KEYWORDS_BY_ASINS request to get bid suggestions tailored to your bidding strategy. For KEYWORDS_BY_ADGROUP requests, you will not specify a bidding strategy, because the bidding strategy of the ad group is used. The three bidding strategies are: <ul> <li> LEGACY_FOR_SALES - Dynamic bids (down only) </li> <li> AUTO_FOR_SALES - Dynamic bids (up and down) </li> <li> MANUAL - Fixed bids </li> </ul> <h3> Availability </h3> Version 5.0 is only available in the following marketplaces: US, CA, UK, DE, FR, ES, IN, JP. <h1> Version 4.0 </h1> <h2> New features </h2> Version 4.0 allows users to retrieve recommended keyword targets which are sorted in descending order of clicks or conversions. The default sort dimension, if not specified, ranks recommendations by our interal ranking mechanism. We have also added search term metrics. <b> Search term impression share </b> indicates the percentage share of all ad-attributed impressions you received on that keyword in the last 30 days. This metric helps advertisers identify potential opportunities based on their share on relevant keywords. <b> Search term impression rank </b> indicates your ranking among all advertisers for the keyword by ad impressions in a marketplace. It tells an advertiser how many advertisers had higher share of ad impressions. <i> Search term information is only available for keywords the advertiser targeted with ad impressions. </i> <h3> Availability </h3> Version 4.0 is available in all marketplaces.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
   * @summary Get keyword recommendations
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} [amazonAdvertisingAPIMarketplaceId] The advertiser\&#39;s Marketplace ID associated with the advertiser. account.
   * @param {string} [amazonAdvertisingAPIAdvertiserId] The advertiser\&#39;s ID associated with the advertiser account.
   * @param {GetRankedKeywordRecommendationRequest} [getRankedKeywordRecommendationRequest]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof KeywordTargetsApi
   */
  public getRankedKeywordRecommendation(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    amazonAdvertisingAPIMarketplaceId?: string,
    amazonAdvertisingAPIAdvertiserId?: string,
    getRankedKeywordRecommendationRequest?: GetRankedKeywordRecommendationRequest,
    options?: RawAxiosRequestConfig
  ) {
    return KeywordTargetsApiFp(this.configuration)
      .getRankedKeywordRecommendation(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        amazonAdvertisingAPIMarketplaceId,
        amazonAdvertisingAPIAdvertiserId,
        getRankedKeywordRecommendationRequest,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }
}

/**
 * KeywordsApi - axios parameter creator
 * @export
 */
export const KeywordsApiAxiosParamCreator = function (configuration?: Configuration) {
  return {
    /**
     * Create keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsCreateSponsoredProductsKeywordsRequestContent} sponsoredProductsCreateSponsoredProductsKeywordsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createSponsoredProductsKeywords: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateSponsoredProductsKeywordsRequestContent: SponsoredProductsCreateSponsoredProductsKeywordsRequestContent,
      prefer?: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('createSponsoredProductsKeywords', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('createSponsoredProductsKeywords', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'sponsoredProductsCreateSponsoredProductsKeywordsRequestContent' is not null or undefined
      assertParamExists(
        'createSponsoredProductsKeywords',
        'sponsoredProductsCreateSponsoredProductsKeywordsRequestContent',
        sponsoredProductsCreateSponsoredProductsKeywordsRequestContent
      );
      const localVarPath = `/sp/keywords`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spKeyword.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      if (prefer != null) {
        localVarHeaderParameter['Prefer'] = String(prefer);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsCreateSponsoredProductsKeywordsRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * Delete keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsDeleteSponsoredProductsKeywordsRequestContent} sponsoredProductsDeleteSponsoredProductsKeywordsRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteSponsoredProductsKeywords: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsDeleteSponsoredProductsKeywordsRequestContent: SponsoredProductsDeleteSponsoredProductsKeywordsRequestContent,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('deleteSponsoredProductsKeywords', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('deleteSponsoredProductsKeywords', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'sponsoredProductsDeleteSponsoredProductsKeywordsRequestContent' is not null or undefined
      assertParamExists(
        'deleteSponsoredProductsKeywords',
        'sponsoredProductsDeleteSponsoredProductsKeywordsRequestContent',
        sponsoredProductsDeleteSponsoredProductsKeywordsRequestContent
      );
      const localVarPath = `/sp/keywords/delete`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spKeyword.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsDeleteSponsoredProductsKeywordsRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * List keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsListSponsoredProductsKeywordsRequestContent} [sponsoredProductsListSponsoredProductsKeywordsRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listSponsoredProductsKeywords: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListSponsoredProductsKeywordsRequestContent?: SponsoredProductsListSponsoredProductsKeywordsRequestContent,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('listSponsoredProductsKeywords', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('listSponsoredProductsKeywords', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      const localVarPath = `/sp/keywords/list`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spKeyword.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsListSponsoredProductsKeywordsRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * Update keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsUpdateSponsoredProductsKeywordsRequestContent} sponsoredProductsUpdateSponsoredProductsKeywordsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateSponsoredProductsKeywords: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsUpdateSponsoredProductsKeywordsRequestContent: SponsoredProductsUpdateSponsoredProductsKeywordsRequestContent,
      prefer?: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('updateSponsoredProductsKeywords', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('updateSponsoredProductsKeywords', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'sponsoredProductsUpdateSponsoredProductsKeywordsRequestContent' is not null or undefined
      assertParamExists(
        'updateSponsoredProductsKeywords',
        'sponsoredProductsUpdateSponsoredProductsKeywordsRequestContent',
        sponsoredProductsUpdateSponsoredProductsKeywordsRequestContent
      );
      const localVarPath = `/sp/keywords`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spKeyword.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      if (prefer != null) {
        localVarHeaderParameter['Prefer'] = String(prefer);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsUpdateSponsoredProductsKeywordsRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
  };
};

/**
 * KeywordsApi - functional programming interface
 * @export
 */
export const KeywordsApiFp = function (configuration?: Configuration) {
  const localVarAxiosParamCreator = KeywordsApiAxiosParamCreator(configuration);
  return {
    /**
     * Create keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsCreateSponsoredProductsKeywordsRequestContent} sponsoredProductsCreateSponsoredProductsKeywordsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async createSponsoredProductsKeywords(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateSponsoredProductsKeywordsRequestContent: SponsoredProductsCreateSponsoredProductsKeywordsRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsCreateSponsoredProductsKeywordsResponseContent>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.createSponsoredProductsKeywords(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsCreateSponsoredProductsKeywordsRequestContent,
        prefer,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath = operationServerMap['KeywordsApi.createSponsoredProductsKeywords']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * Delete keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsDeleteSponsoredProductsKeywordsRequestContent} sponsoredProductsDeleteSponsoredProductsKeywordsRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async deleteSponsoredProductsKeywords(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsDeleteSponsoredProductsKeywordsRequestContent: SponsoredProductsDeleteSponsoredProductsKeywordsRequestContent,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsDeleteSponsoredProductsKeywordsResponseContent>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteSponsoredProductsKeywords(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsDeleteSponsoredProductsKeywordsRequestContent,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath = operationServerMap['KeywordsApi.deleteSponsoredProductsKeywords']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * List keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsListSponsoredProductsKeywordsRequestContent} [sponsoredProductsListSponsoredProductsKeywordsRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async listSponsoredProductsKeywords(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListSponsoredProductsKeywordsRequestContent?: SponsoredProductsListSponsoredProductsKeywordsRequestContent,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsListSponsoredProductsKeywordsResponseContent>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.listSponsoredProductsKeywords(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsListSponsoredProductsKeywordsRequestContent,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath = operationServerMap['KeywordsApi.listSponsoredProductsKeywords']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * Update keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsUpdateSponsoredProductsKeywordsRequestContent} sponsoredProductsUpdateSponsoredProductsKeywordsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async updateSponsoredProductsKeywords(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsUpdateSponsoredProductsKeywordsRequestContent: SponsoredProductsUpdateSponsoredProductsKeywordsRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsUpdateSponsoredProductsKeywordsResponseContent>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.updateSponsoredProductsKeywords(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsUpdateSponsoredProductsKeywordsRequestContent,
        prefer,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath = operationServerMap['KeywordsApi.updateSponsoredProductsKeywords']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
  };
};

/**
 * KeywordsApi - factory interface
 * @export
 */
export const KeywordsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
  const localVarFp = KeywordsApiFp(configuration);
  return {
    /**
     * Create keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsCreateSponsoredProductsKeywordsRequestContent} sponsoredProductsCreateSponsoredProductsKeywordsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createSponsoredProductsKeywords(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateSponsoredProductsKeywordsRequestContent: SponsoredProductsCreateSponsoredProductsKeywordsRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsCreateSponsoredProductsKeywordsResponseContent> {
      return localVarFp
        .createSponsoredProductsKeywords(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsCreateSponsoredProductsKeywordsRequestContent,
          prefer,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * Delete keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsDeleteSponsoredProductsKeywordsRequestContent} sponsoredProductsDeleteSponsoredProductsKeywordsRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteSponsoredProductsKeywords(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsDeleteSponsoredProductsKeywordsRequestContent: SponsoredProductsDeleteSponsoredProductsKeywordsRequestContent,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsDeleteSponsoredProductsKeywordsResponseContent> {
      return localVarFp
        .deleteSponsoredProductsKeywords(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsDeleteSponsoredProductsKeywordsRequestContent,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * List keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsListSponsoredProductsKeywordsRequestContent} [sponsoredProductsListSponsoredProductsKeywordsRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listSponsoredProductsKeywords(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListSponsoredProductsKeywordsRequestContent?: SponsoredProductsListSponsoredProductsKeywordsRequestContent,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsListSponsoredProductsKeywordsResponseContent> {
      return localVarFp
        .listSponsoredProductsKeywords(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsListSponsoredProductsKeywordsRequestContent,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * Update keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsUpdateSponsoredProductsKeywordsRequestContent} sponsoredProductsUpdateSponsoredProductsKeywordsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateSponsoredProductsKeywords(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsUpdateSponsoredProductsKeywordsRequestContent: SponsoredProductsUpdateSponsoredProductsKeywordsRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsUpdateSponsoredProductsKeywordsResponseContent> {
      return localVarFp
        .updateSponsoredProductsKeywords(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsUpdateSponsoredProductsKeywordsRequestContent,
          prefer,
          options
        )
        .then(request => request(axios, basePath));
    },
  };
};

/**
 * KeywordsApi - object-oriented interface
 * @export
 * @class KeywordsApi
 * @extends {BaseAPI}
 */
export class KeywordsApi extends BaseAPI {
  /**
   * Create keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsCreateSponsoredProductsKeywordsRequestContent} sponsoredProductsCreateSponsoredProductsKeywordsRequestContent
   * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof KeywordsApi
   */
  public createSponsoredProductsKeywords(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsCreateSponsoredProductsKeywordsRequestContent: SponsoredProductsCreateSponsoredProductsKeywordsRequestContent,
    prefer?: string,
    options?: RawAxiosRequestConfig
  ) {
    return KeywordsApiFp(this.configuration)
      .createSponsoredProductsKeywords(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsCreateSponsoredProductsKeywordsRequestContent,
        prefer,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * Delete keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsDeleteSponsoredProductsKeywordsRequestContent} sponsoredProductsDeleteSponsoredProductsKeywordsRequestContent
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof KeywordsApi
   */
  public deleteSponsoredProductsKeywords(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsDeleteSponsoredProductsKeywordsRequestContent: SponsoredProductsDeleteSponsoredProductsKeywordsRequestContent,
    options?: RawAxiosRequestConfig
  ) {
    return KeywordsApiFp(this.configuration)
      .deleteSponsoredProductsKeywords(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsDeleteSponsoredProductsKeywordsRequestContent,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * List keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsListSponsoredProductsKeywordsRequestContent} [sponsoredProductsListSponsoredProductsKeywordsRequestContent]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof KeywordsApi
   */
  public listSponsoredProductsKeywords(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsListSponsoredProductsKeywordsRequestContent?: SponsoredProductsListSponsoredProductsKeywordsRequestContent,
    options?: RawAxiosRequestConfig
  ) {
    return KeywordsApiFp(this.configuration)
      .listSponsoredProductsKeywords(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsListSponsoredProductsKeywordsRequestContent,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * Update keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsUpdateSponsoredProductsKeywordsRequestContent} sponsoredProductsUpdateSponsoredProductsKeywordsRequestContent
   * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof KeywordsApi
   */
  public updateSponsoredProductsKeywords(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsUpdateSponsoredProductsKeywordsRequestContent: SponsoredProductsUpdateSponsoredProductsKeywordsRequestContent,
    prefer?: string,
    options?: RawAxiosRequestConfig
  ) {
    return KeywordsApiFp(this.configuration)
      .updateSponsoredProductsKeywords(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsUpdateSponsoredProductsKeywordsRequestContent,
        prefer,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }
}

/**
 * MultiCountryThemeBasedBidRecommendationsApi - axios parameter creator
 * @export
 */
export const MultiCountryThemeBasedBidRecommendationsApiAxiosParamCreator = function (configuration?: Configuration) {
  return {
    /**
     * The <b> POST /sp/targets/bid/recommendations </b> endpoint returns recommended bids for each target given either A) new ad group (a list of ad ASINs) or B) existing ad group (a campaign ID and ad group ID). Please use the recommendationType field to specify if you want to use option A or option B. This API is currently available at marketplaces where SP is available. The API supports keyword, auto and product targets. The API will return a 422 response when an unsupported marketplace or target is provided. <h1> Version 5.0 </h1><h2> New Features </h2><ul><li> Version 5.0 introduces two new capabilities. First, advertisers will receive the estimated impressions for the suggested bid to help them understand the potential impact of adopting them. Second, advertisers will get a view of the estimated impressions for a range of bids (8 bids) for each target. </li><li> The second feature is default to be disabled. To enable it, user needs to set <b> includeAnalysis </b> as True in request body. </li><li> New features are currently available only for existing ad group requests in US marketplace. </li></ul><h1> Version 4.0 </h1><h2> New Features </h2><ul><li> Version 4.0 allows users to get theme-based bid recommendations for product targeting expressions, including PAT_ASIN, PAT_CATEGORY and PAT_CATEGORY_REFINEMENT. </li><li> Version 4.0 supports keyword, auto and product targets in all marketplaces. </li><li> Version 4.0 removes \"impact metrics\" when returning each bid suggestion. </li><li> Version 4.0 also allows users to get theme-based bid recommendations for keyword group targeting expressions with the type KEYWORD_GROUP. This new type is only available in US marketplace. </li></ul><br>  **Authorized resource type**: Global Ad Account ID  **Parameter name**: Amazon-Ads-AccountId  **Parameter in**: header  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Get bid recommendations for multi-country ad groups
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdsAccountId Global Account Id Identifier.
     * @param {GetMultiCountryThemeBasedBidRecommendationForAdGroupV1Request} [getMultiCountryThemeBasedBidRecommendationForAdGroupV1Request]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMultiCountryThemeBasedBidRecommendationForAdGroupV1: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdsAccountId: string,
      getMultiCountryThemeBasedBidRecommendationForAdGroupV1Request?: GetMultiCountryThemeBasedBidRecommendationForAdGroupV1Request,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('getMultiCountryThemeBasedBidRecommendationForAdGroupV1', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdsAccountId' is not null or undefined
      assertParamExists('getMultiCountryThemeBasedBidRecommendationForAdGroupV1', 'amazonAdsAccountId', amazonAdsAccountId);
      const localVarPath = `/sp/global/targets/bid/recommendations`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdsAccountId != null) {
        localVarHeaderParameter['Amazon-Ads-AccountId'] = String(amazonAdsAccountId);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        getMultiCountryThemeBasedBidRecommendationForAdGroupV1Request,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
  };
};

/**
 * MultiCountryThemeBasedBidRecommendationsApi - functional programming interface
 * @export
 */
export const MultiCountryThemeBasedBidRecommendationsApiFp = function (configuration?: Configuration) {
  const localVarAxiosParamCreator = MultiCountryThemeBasedBidRecommendationsApiAxiosParamCreator(configuration);
  return {
    /**
     * The <b> POST /sp/targets/bid/recommendations </b> endpoint returns recommended bids for each target given either A) new ad group (a list of ad ASINs) or B) existing ad group (a campaign ID and ad group ID). Please use the recommendationType field to specify if you want to use option A or option B. This API is currently available at marketplaces where SP is available. The API supports keyword, auto and product targets. The API will return a 422 response when an unsupported marketplace or target is provided. <h1> Version 5.0 </h1><h2> New Features </h2><ul><li> Version 5.0 introduces two new capabilities. First, advertisers will receive the estimated impressions for the suggested bid to help them understand the potential impact of adopting them. Second, advertisers will get a view of the estimated impressions for a range of bids (8 bids) for each target. </li><li> The second feature is default to be disabled. To enable it, user needs to set <b> includeAnalysis </b> as True in request body. </li><li> New features are currently available only for existing ad group requests in US marketplace. </li></ul><h1> Version 4.0 </h1><h2> New Features </h2><ul><li> Version 4.0 allows users to get theme-based bid recommendations for product targeting expressions, including PAT_ASIN, PAT_CATEGORY and PAT_CATEGORY_REFINEMENT. </li><li> Version 4.0 supports keyword, auto and product targets in all marketplaces. </li><li> Version 4.0 removes \"impact metrics\" when returning each bid suggestion. </li><li> Version 4.0 also allows users to get theme-based bid recommendations for keyword group targeting expressions with the type KEYWORD_GROUP. This new type is only available in US marketplace. </li></ul><br>  **Authorized resource type**: Global Ad Account ID  **Parameter name**: Amazon-Ads-AccountId  **Parameter in**: header  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Get bid recommendations for multi-country ad groups
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdsAccountId Global Account Id Identifier.
     * @param {GetMultiCountryThemeBasedBidRecommendationForAdGroupV1Request} [getMultiCountryThemeBasedBidRecommendationForAdGroupV1Request]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async getMultiCountryThemeBasedBidRecommendationForAdGroupV1(
      amazonAdvertisingAPIClientId: string,
      amazonAdsAccountId: string,
      getMultiCountryThemeBasedBidRecommendationForAdGroupV1Request?: GetMultiCountryThemeBasedBidRecommendationForAdGroupV1Request,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MultiCountryThemeBasedBidRecommendationResponse>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.getMultiCountryThemeBasedBidRecommendationForAdGroupV1(
        amazonAdvertisingAPIClientId,
        amazonAdsAccountId,
        getMultiCountryThemeBasedBidRecommendationForAdGroupV1Request,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['MultiCountryThemeBasedBidRecommendationsApi.getMultiCountryThemeBasedBidRecommendationForAdGroupV1']?.[
          localVarOperationServerIndex
        ]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
  };
};

/**
 * MultiCountryThemeBasedBidRecommendationsApi - factory interface
 * @export
 */
export const MultiCountryThemeBasedBidRecommendationsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
  const localVarFp = MultiCountryThemeBasedBidRecommendationsApiFp(configuration);
  return {
    /**
     * The <b> POST /sp/targets/bid/recommendations </b> endpoint returns recommended bids for each target given either A) new ad group (a list of ad ASINs) or B) existing ad group (a campaign ID and ad group ID). Please use the recommendationType field to specify if you want to use option A or option B. This API is currently available at marketplaces where SP is available. The API supports keyword, auto and product targets. The API will return a 422 response when an unsupported marketplace or target is provided. <h1> Version 5.0 </h1><h2> New Features </h2><ul><li> Version 5.0 introduces two new capabilities. First, advertisers will receive the estimated impressions for the suggested bid to help them understand the potential impact of adopting them. Second, advertisers will get a view of the estimated impressions for a range of bids (8 bids) for each target. </li><li> The second feature is default to be disabled. To enable it, user needs to set <b> includeAnalysis </b> as True in request body. </li><li> New features are currently available only for existing ad group requests in US marketplace. </li></ul><h1> Version 4.0 </h1><h2> New Features </h2><ul><li> Version 4.0 allows users to get theme-based bid recommendations for product targeting expressions, including PAT_ASIN, PAT_CATEGORY and PAT_CATEGORY_REFINEMENT. </li><li> Version 4.0 supports keyword, auto and product targets in all marketplaces. </li><li> Version 4.0 removes \"impact metrics\" when returning each bid suggestion. </li><li> Version 4.0 also allows users to get theme-based bid recommendations for keyword group targeting expressions with the type KEYWORD_GROUP. This new type is only available in US marketplace. </li></ul><br>  **Authorized resource type**: Global Ad Account ID  **Parameter name**: Amazon-Ads-AccountId  **Parameter in**: header  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Get bid recommendations for multi-country ad groups
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdsAccountId Global Account Id Identifier.
     * @param {GetMultiCountryThemeBasedBidRecommendationForAdGroupV1Request} [getMultiCountryThemeBasedBidRecommendationForAdGroupV1Request]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMultiCountryThemeBasedBidRecommendationForAdGroupV1(
      amazonAdvertisingAPIClientId: string,
      amazonAdsAccountId: string,
      getMultiCountryThemeBasedBidRecommendationForAdGroupV1Request?: GetMultiCountryThemeBasedBidRecommendationForAdGroupV1Request,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<MultiCountryThemeBasedBidRecommendationResponse> {
      return localVarFp
        .getMultiCountryThemeBasedBidRecommendationForAdGroupV1(
          amazonAdvertisingAPIClientId,
          amazonAdsAccountId,
          getMultiCountryThemeBasedBidRecommendationForAdGroupV1Request,
          options
        )
        .then(request => request(axios, basePath));
    },
  };
};

/**
 * MultiCountryThemeBasedBidRecommendationsApi - object-oriented interface
 * @export
 * @class MultiCountryThemeBasedBidRecommendationsApi
 * @extends {BaseAPI}
 */
export class MultiCountryThemeBasedBidRecommendationsApi extends BaseAPI {
  /**
   * The <b> POST /sp/targets/bid/recommendations </b> endpoint returns recommended bids for each target given either A) new ad group (a list of ad ASINs) or B) existing ad group (a campaign ID and ad group ID). Please use the recommendationType field to specify if you want to use option A or option B. This API is currently available at marketplaces where SP is available. The API supports keyword, auto and product targets. The API will return a 422 response when an unsupported marketplace or target is provided. <h1> Version 5.0 </h1><h2> New Features </h2><ul><li> Version 5.0 introduces two new capabilities. First, advertisers will receive the estimated impressions for the suggested bid to help them understand the potential impact of adopting them. Second, advertisers will get a view of the estimated impressions for a range of bids (8 bids) for each target. </li><li> The second feature is default to be disabled. To enable it, user needs to set <b> includeAnalysis </b> as True in request body. </li><li> New features are currently available only for existing ad group requests in US marketplace. </li></ul><h1> Version 4.0 </h1><h2> New Features </h2><ul><li> Version 4.0 allows users to get theme-based bid recommendations for product targeting expressions, including PAT_ASIN, PAT_CATEGORY and PAT_CATEGORY_REFINEMENT. </li><li> Version 4.0 supports keyword, auto and product targets in all marketplaces. </li><li> Version 4.0 removes \"impact metrics\" when returning each bid suggestion. </li><li> Version 4.0 also allows users to get theme-based bid recommendations for keyword group targeting expressions with the type KEYWORD_GROUP. This new type is only available in US marketplace. </li></ul><br>  **Authorized resource type**: Global Ad Account ID  **Parameter name**: Amazon-Ads-AccountId  **Parameter in**: header  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
   * @summary Get bid recommendations for multi-country ad groups
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdsAccountId Global Account Id Identifier.
   * @param {GetMultiCountryThemeBasedBidRecommendationForAdGroupV1Request} [getMultiCountryThemeBasedBidRecommendationForAdGroupV1Request]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof MultiCountryThemeBasedBidRecommendationsApi
   */
  public getMultiCountryThemeBasedBidRecommendationForAdGroupV1(
    amazonAdvertisingAPIClientId: string,
    amazonAdsAccountId: string,
    getMultiCountryThemeBasedBidRecommendationForAdGroupV1Request?: GetMultiCountryThemeBasedBidRecommendationForAdGroupV1Request,
    options?: RawAxiosRequestConfig
  ) {
    return MultiCountryThemeBasedBidRecommendationsApiFp(this.configuration)
      .getMultiCountryThemeBasedBidRecommendationForAdGroupV1(
        amazonAdvertisingAPIClientId,
        amazonAdsAccountId,
        getMultiCountryThemeBasedBidRecommendationForAdGroupV1Request,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }
}

/**
 * NegativeKeywordsApi - axios parameter creator
 * @export
 */
export const NegativeKeywordsApiAxiosParamCreator = function (configuration?: Configuration) {
  return {
    /**
     * Create negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent} sponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createSponsoredProductsNegativeKeywords: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent: SponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent,
      prefer?: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('createSponsoredProductsNegativeKeywords', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('createSponsoredProductsNegativeKeywords', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'sponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent' is not null or undefined
      assertParamExists(
        'createSponsoredProductsNegativeKeywords',
        'sponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent',
        sponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent
      );
      const localVarPath = `/sp/negativeKeywords`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spNegativeKeyword.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      if (prefer != null) {
        localVarHeaderParameter['Prefer'] = String(prefer);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * Delete negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent} sponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteSponsoredProductsNegativeKeywords: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent: SponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('deleteSponsoredProductsNegativeKeywords', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('deleteSponsoredProductsNegativeKeywords', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'sponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent' is not null or undefined
      assertParamExists(
        'deleteSponsoredProductsNegativeKeywords',
        'sponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent',
        sponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent
      );
      const localVarPath = `/sp/negativeKeywords/delete`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spNegativeKeyword.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * List negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent} [sponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listSponsoredProductsNegativeKeywords: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent?: SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('listSponsoredProductsNegativeKeywords', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('listSponsoredProductsNegativeKeywords', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      const localVarPath = `/sp/negativeKeywords/list`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spNegativeKeyword.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * Update negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent} sponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateSponsoredProductsNegativeKeywords: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent: SponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent,
      prefer?: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('updateSponsoredProductsNegativeKeywords', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('updateSponsoredProductsNegativeKeywords', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'sponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent' is not null or undefined
      assertParamExists(
        'updateSponsoredProductsNegativeKeywords',
        'sponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent',
        sponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent
      );
      const localVarPath = `/sp/negativeKeywords`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spNegativeKeyword.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      if (prefer != null) {
        localVarHeaderParameter['Prefer'] = String(prefer);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
  };
};

/**
 * NegativeKeywordsApi - functional programming interface
 * @export
 */
export const NegativeKeywordsApiFp = function (configuration?: Configuration) {
  const localVarAxiosParamCreator = NegativeKeywordsApiAxiosParamCreator(configuration);
  return {
    /**
     * Create negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent} sponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async createSponsoredProductsNegativeKeywords(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent: SponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsCreateSponsoredProductsNegativeKeywordsResponseContent>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.createSponsoredProductsNegativeKeywords(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent,
        prefer,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['NegativeKeywordsApi.createSponsoredProductsNegativeKeywords']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * Delete negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent} sponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async deleteSponsoredProductsNegativeKeywords(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent: SponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsDeleteSponsoredProductsNegativeKeywordsResponseContent>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteSponsoredProductsNegativeKeywords(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['NegativeKeywordsApi.deleteSponsoredProductsNegativeKeywords']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * List negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent} [sponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async listSponsoredProductsNegativeKeywords(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent?: SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsListSponsoredProductsNegativeKeywordsResponseContent>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.listSponsoredProductsNegativeKeywords(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['NegativeKeywordsApi.listSponsoredProductsNegativeKeywords']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * Update negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent} sponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async updateSponsoredProductsNegativeKeywords(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent: SponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsUpdateSponsoredProductsNegativeKeywordsResponseContent>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.updateSponsoredProductsNegativeKeywords(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent,
        prefer,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['NegativeKeywordsApi.updateSponsoredProductsNegativeKeywords']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
  };
};

/**
 * NegativeKeywordsApi - factory interface
 * @export
 */
export const NegativeKeywordsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
  const localVarFp = NegativeKeywordsApiFp(configuration);
  return {
    /**
     * Create negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent} sponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createSponsoredProductsNegativeKeywords(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent: SponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsCreateSponsoredProductsNegativeKeywordsResponseContent> {
      return localVarFp
        .createSponsoredProductsNegativeKeywords(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent,
          prefer,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * Delete negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent} sponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteSponsoredProductsNegativeKeywords(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent: SponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsDeleteSponsoredProductsNegativeKeywordsResponseContent> {
      return localVarFp
        .deleteSponsoredProductsNegativeKeywords(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * List negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent} [sponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listSponsoredProductsNegativeKeywords(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent?: SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsListSponsoredProductsNegativeKeywordsResponseContent> {
      return localVarFp
        .listSponsoredProductsNegativeKeywords(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * Update negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent} sponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateSponsoredProductsNegativeKeywords(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent: SponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsUpdateSponsoredProductsNegativeKeywordsResponseContent> {
      return localVarFp
        .updateSponsoredProductsNegativeKeywords(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent,
          prefer,
          options
        )
        .then(request => request(axios, basePath));
    },
  };
};

/**
 * NegativeKeywordsApi - object-oriented interface
 * @export
 * @class NegativeKeywordsApi
 * @extends {BaseAPI}
 */
export class NegativeKeywordsApi extends BaseAPI {
  /**
   * Create negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent} sponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent
   * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof NegativeKeywordsApi
   */
  public createSponsoredProductsNegativeKeywords(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent: SponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent,
    prefer?: string,
    options?: RawAxiosRequestConfig
  ) {
    return NegativeKeywordsApiFp(this.configuration)
      .createSponsoredProductsNegativeKeywords(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent,
        prefer,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * Delete negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent} sponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof NegativeKeywordsApi
   */
  public deleteSponsoredProductsNegativeKeywords(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent: SponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent,
    options?: RawAxiosRequestConfig
  ) {
    return NegativeKeywordsApiFp(this.configuration)
      .deleteSponsoredProductsNegativeKeywords(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * List negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent} [sponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof NegativeKeywordsApi
   */
  public listSponsoredProductsNegativeKeywords(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent?: SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent,
    options?: RawAxiosRequestConfig
  ) {
    return NegativeKeywordsApiFp(this.configuration)
      .listSponsoredProductsNegativeKeywords(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * Update negative keywords  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent} sponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent
   * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof NegativeKeywordsApi
   */
  public updateSponsoredProductsNegativeKeywords(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent: SponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent,
    prefer?: string,
    options?: RawAxiosRequestConfig
  ) {
    return NegativeKeywordsApiFp(this.configuration)
      .updateSponsoredProductsNegativeKeywords(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent,
        prefer,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }
}

/**
 * NegativeTargetingClausesApi - axios parameter creator
 * @export
 */
export const NegativeTargetingClausesApiAxiosParamCreator = function (configuration?: Configuration) {
  return {
    /**
     * Create negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent} sponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createSponsoredProductsNegativeTargetingClauses: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent: SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent,
      prefer?: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('createSponsoredProductsNegativeTargetingClauses', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('createSponsoredProductsNegativeTargetingClauses', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'sponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent' is not null or undefined
      assertParamExists(
        'createSponsoredProductsNegativeTargetingClauses',
        'sponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent',
        sponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent
      );
      const localVarPath = `/sp/negativeTargets`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spNegativeTargetingClause.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      if (prefer != null) {
        localVarHeaderParameter['Prefer'] = String(prefer);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * Delete negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent} sponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteSponsoredProductsNegativeTargetingClauses: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent: SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('deleteSponsoredProductsNegativeTargetingClauses', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('deleteSponsoredProductsNegativeTargetingClauses', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'sponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent' is not null or undefined
      assertParamExists(
        'deleteSponsoredProductsNegativeTargetingClauses',
        'sponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent',
        sponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent
      );
      const localVarPath = `/sp/negativeTargets/delete`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spNegativeTargetingClause.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * List negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent} [sponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listSponsoredProductsNegativeTargetingClauses: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent?: SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('listSponsoredProductsNegativeTargetingClauses', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('listSponsoredProductsNegativeTargetingClauses', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      const localVarPath = `/sp/negativeTargets/list`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spNegativeTargetingClause.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * Update negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent} sponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateSponsoredProductsNegativeTargetingClauses: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent: SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent,
      prefer?: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('updateSponsoredProductsNegativeTargetingClauses', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('updateSponsoredProductsNegativeTargetingClauses', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'sponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent' is not null or undefined
      assertParamExists(
        'updateSponsoredProductsNegativeTargetingClauses',
        'sponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent',
        sponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent
      );
      const localVarPath = `/sp/negativeTargets`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spNegativeTargetingClause.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      if (prefer != null) {
        localVarHeaderParameter['Prefer'] = String(prefer);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
  };
};

/**
 * NegativeTargetingClausesApi - functional programming interface
 * @export
 */
export const NegativeTargetingClausesApiFp = function (configuration?: Configuration) {
  const localVarAxiosParamCreator = NegativeTargetingClausesApiAxiosParamCreator(configuration);
  return {
    /**
     * Create negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent} sponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async createSponsoredProductsNegativeTargetingClauses(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent: SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): Promise<
      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesResponseContent>
    > {
      const localVarAxiosArgs = await localVarAxiosParamCreator.createSponsoredProductsNegativeTargetingClauses(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent,
        prefer,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['NegativeTargetingClausesApi.createSponsoredProductsNegativeTargetingClauses']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * Delete negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent} sponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async deleteSponsoredProductsNegativeTargetingClauses(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent: SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent,
      options?: RawAxiosRequestConfig
    ): Promise<
      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesResponseContent>
    > {
      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteSponsoredProductsNegativeTargetingClauses(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['NegativeTargetingClausesApi.deleteSponsoredProductsNegativeTargetingClauses']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * List negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent} [sponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async listSponsoredProductsNegativeTargetingClauses(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent?: SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent,
      options?: RawAxiosRequestConfig
    ): Promise<
      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsListSponsoredProductsNegativeTargetingClausesResponseContent>
    > {
      const localVarAxiosArgs = await localVarAxiosParamCreator.listSponsoredProductsNegativeTargetingClauses(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['NegativeTargetingClausesApi.listSponsoredProductsNegativeTargetingClauses']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * Update negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent} sponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async updateSponsoredProductsNegativeTargetingClauses(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent: SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): Promise<
      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesResponseContent>
    > {
      const localVarAxiosArgs = await localVarAxiosParamCreator.updateSponsoredProductsNegativeTargetingClauses(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent,
        prefer,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['NegativeTargetingClausesApi.updateSponsoredProductsNegativeTargetingClauses']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
  };
};

/**
 * NegativeTargetingClausesApi - factory interface
 * @export
 */
export const NegativeTargetingClausesApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
  const localVarFp = NegativeTargetingClausesApiFp(configuration);
  return {
    /**
     * Create negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent} sponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createSponsoredProductsNegativeTargetingClauses(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent: SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesResponseContent> {
      return localVarFp
        .createSponsoredProductsNegativeTargetingClauses(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent,
          prefer,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * Delete negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent} sponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteSponsoredProductsNegativeTargetingClauses(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent: SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesResponseContent> {
      return localVarFp
        .deleteSponsoredProductsNegativeTargetingClauses(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * List negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent} [sponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listSponsoredProductsNegativeTargetingClauses(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent?: SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsListSponsoredProductsNegativeTargetingClausesResponseContent> {
      return localVarFp
        .listSponsoredProductsNegativeTargetingClauses(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * Update negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent} sponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateSponsoredProductsNegativeTargetingClauses(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent: SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesResponseContent> {
      return localVarFp
        .updateSponsoredProductsNegativeTargetingClauses(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent,
          prefer,
          options
        )
        .then(request => request(axios, basePath));
    },
  };
};

/**
 * NegativeTargetingClausesApi - object-oriented interface
 * @export
 * @class NegativeTargetingClausesApi
 * @extends {BaseAPI}
 */
export class NegativeTargetingClausesApi extends BaseAPI {
  /**
   * Create negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent} sponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent
   * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof NegativeTargetingClausesApi
   */
  public createSponsoredProductsNegativeTargetingClauses(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent: SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent,
    prefer?: string,
    options?: RawAxiosRequestConfig
  ) {
    return NegativeTargetingClausesApiFp(this.configuration)
      .createSponsoredProductsNegativeTargetingClauses(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent,
        prefer,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * Delete negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent} sponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof NegativeTargetingClausesApi
   */
  public deleteSponsoredProductsNegativeTargetingClauses(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent: SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent,
    options?: RawAxiosRequestConfig
  ) {
    return NegativeTargetingClausesApiFp(this.configuration)
      .deleteSponsoredProductsNegativeTargetingClauses(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * List negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent} [sponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof NegativeTargetingClausesApi
   */
  public listSponsoredProductsNegativeTargetingClauses(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent?: SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent,
    options?: RawAxiosRequestConfig
  ) {
    return NegativeTargetingClausesApiFp(this.configuration)
      .listSponsoredProductsNegativeTargetingClauses(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * Update negative targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent} sponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent
   * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof NegativeTargetingClausesApi
   */
  public updateSponsoredProductsNegativeTargetingClauses(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent: SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent,
    prefer?: string,
    options?: RawAxiosRequestConfig
  ) {
    return NegativeTargetingClausesApiFp(this.configuration)
      .updateSponsoredProductsNegativeTargetingClauses(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent,
        prefer,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }
}

/**
 * OptimizationRulesApi - axios parameter creator
 * @export
 */
export const OptimizationRulesApiAxiosParamCreator = function (configuration?: Configuration) {
  return {
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Associates one or multiple optimization rules with a campaign.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} campaignId The sp campaign identifier.
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {OptimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignRequest} [optimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    associateOptimizationRulesToCampaign: async (
      amazonAdvertisingAPIClientId: string,
      campaignId: string,
      amazonAdvertisingAPIScope?: string,
      optimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignRequest?: OptimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignRequest,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('associateOptimizationRulesToCampaign', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'campaignId' is not null or undefined
      assertParamExists('associateOptimizationRulesToCampaign', 'campaignId', campaignId);
      const localVarPath = `/sp/campaigns/{campaignId}/optimizationRules`.replace(`{${'campaignId'}}`, encodeURIComponent(String(campaignId)));
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spoptimizationrules.v1+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        optimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignRequest,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Creates one or more optimization rules.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {OptimizationRulesAPISwaggerCreateOptimizationRulesRequest} [optimizationRulesAPISwaggerCreateOptimizationRulesRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createOptimizationRules: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope?: string,
      optimizationRulesAPISwaggerCreateOptimizationRulesRequest?: OptimizationRulesAPISwaggerCreateOptimizationRulesRequest,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('createOptimizationRules', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      const localVarPath = `/sp/rules/optimization`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spoptimizationrules.v1+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        optimizationRulesAPISwaggerCreateOptimizationRulesRequest,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Searches optimization rules based on optional filters.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {OptimizationRulesAPISwaggerSearchOptimizationRulesRequest} [optimizationRulesAPISwaggerSearchOptimizationRulesRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    searchOptimizationRules: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope?: string,
      optimizationRulesAPISwaggerSearchOptimizationRulesRequest?: OptimizationRulesAPISwaggerSearchOptimizationRulesRequest,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('searchOptimizationRules', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      const localVarPath = `/sp/rules/optimization/search`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spoptimizationrules.v1+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        optimizationRulesAPISwaggerSearchOptimizationRulesRequest,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Updates one or more optimization rules.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {OptimizationRulesAPISwaggerUpdateOptimizationRulesRequest} [optimizationRulesAPISwaggerUpdateOptimizationRulesRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateOptimizationRules: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope?: string,
      optimizationRulesAPISwaggerUpdateOptimizationRulesRequest?: OptimizationRulesAPISwaggerUpdateOptimizationRulesRequest,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('updateOptimizationRules', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      const localVarPath = `/sp/rules/optimization`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spoptimizationrules.v1+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        optimizationRulesAPISwaggerUpdateOptimizationRulesRequest,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
  };
};

/**
 * OptimizationRulesApi - functional programming interface
 * @export
 */
export const OptimizationRulesApiFp = function (configuration?: Configuration) {
  const localVarAxiosParamCreator = OptimizationRulesApiAxiosParamCreator(configuration);
  return {
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Associates one or multiple optimization rules with a campaign.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} campaignId The sp campaign identifier.
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {OptimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignRequest} [optimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async associateOptimizationRulesToCampaign(
      amazonAdvertisingAPIClientId: string,
      campaignId: string,
      amazonAdvertisingAPIScope?: string,
      optimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignRequest?: OptimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignRequest,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OptimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignResponse>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.associateOptimizationRulesToCampaign(
        amazonAdvertisingAPIClientId,
        campaignId,
        amazonAdvertisingAPIScope,
        optimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignRequest,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['OptimizationRulesApi.associateOptimizationRulesToCampaign']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Creates one or more optimization rules.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {OptimizationRulesAPISwaggerCreateOptimizationRulesRequest} [optimizationRulesAPISwaggerCreateOptimizationRulesRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async createOptimizationRules(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope?: string,
      optimizationRulesAPISwaggerCreateOptimizationRulesRequest?: OptimizationRulesAPISwaggerCreateOptimizationRulesRequest,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OptimizationRulesAPISwaggerOptimizationRulesResponse>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.createOptimizationRules(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        optimizationRulesAPISwaggerCreateOptimizationRulesRequest,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath = operationServerMap['OptimizationRulesApi.createOptimizationRules']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Searches optimization rules based on optional filters.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {OptimizationRulesAPISwaggerSearchOptimizationRulesRequest} [optimizationRulesAPISwaggerSearchOptimizationRulesRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async searchOptimizationRules(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope?: string,
      optimizationRulesAPISwaggerSearchOptimizationRulesRequest?: OptimizationRulesAPISwaggerSearchOptimizationRulesRequest,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OptimizationRulesAPISwaggerSearchOptimizationRulesResponse>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.searchOptimizationRules(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        optimizationRulesAPISwaggerSearchOptimizationRulesRequest,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath = operationServerMap['OptimizationRulesApi.searchOptimizationRules']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Updates one or more optimization rules.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {OptimizationRulesAPISwaggerUpdateOptimizationRulesRequest} [optimizationRulesAPISwaggerUpdateOptimizationRulesRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async updateOptimizationRules(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope?: string,
      optimizationRulesAPISwaggerUpdateOptimizationRulesRequest?: OptimizationRulesAPISwaggerUpdateOptimizationRulesRequest,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OptimizationRulesAPISwaggerOptimizationRulesResponse>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.updateOptimizationRules(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        optimizationRulesAPISwaggerUpdateOptimizationRulesRequest,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath = operationServerMap['OptimizationRulesApi.updateOptimizationRules']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
  };
};

/**
 * OptimizationRulesApi - factory interface
 * @export
 */
export const OptimizationRulesApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
  const localVarFp = OptimizationRulesApiFp(configuration);
  return {
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Associates one or multiple optimization rules with a campaign.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} campaignId The sp campaign identifier.
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {OptimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignRequest} [optimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    associateOptimizationRulesToCampaign(
      amazonAdvertisingAPIClientId: string,
      campaignId: string,
      amazonAdvertisingAPIScope?: string,
      optimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignRequest?: OptimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignRequest,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<OptimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignResponse> {
      return localVarFp
        .associateOptimizationRulesToCampaign(
          amazonAdvertisingAPIClientId,
          campaignId,
          amazonAdvertisingAPIScope,
          optimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignRequest,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Creates one or more optimization rules.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {OptimizationRulesAPISwaggerCreateOptimizationRulesRequest} [optimizationRulesAPISwaggerCreateOptimizationRulesRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createOptimizationRules(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope?: string,
      optimizationRulesAPISwaggerCreateOptimizationRulesRequest?: OptimizationRulesAPISwaggerCreateOptimizationRulesRequest,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<OptimizationRulesAPISwaggerOptimizationRulesResponse> {
      return localVarFp
        .createOptimizationRules(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          optimizationRulesAPISwaggerCreateOptimizationRulesRequest,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Searches optimization rules based on optional filters.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {OptimizationRulesAPISwaggerSearchOptimizationRulesRequest} [optimizationRulesAPISwaggerSearchOptimizationRulesRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    searchOptimizationRules(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope?: string,
      optimizationRulesAPISwaggerSearchOptimizationRulesRequest?: OptimizationRulesAPISwaggerSearchOptimizationRulesRequest,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<OptimizationRulesAPISwaggerSearchOptimizationRulesResponse> {
      return localVarFp
        .searchOptimizationRules(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          optimizationRulesAPISwaggerSearchOptimizationRulesRequest,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Updates one or more optimization rules.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {OptimizationRulesAPISwaggerUpdateOptimizationRulesRequest} [optimizationRulesAPISwaggerUpdateOptimizationRulesRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateOptimizationRules(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope?: string,
      optimizationRulesAPISwaggerUpdateOptimizationRulesRequest?: OptimizationRulesAPISwaggerUpdateOptimizationRulesRequest,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<OptimizationRulesAPISwaggerOptimizationRulesResponse> {
      return localVarFp
        .updateOptimizationRules(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          optimizationRulesAPISwaggerUpdateOptimizationRulesRequest,
          options
        )
        .then(request => request(axios, basePath));
    },
  };
};

/**
 * OptimizationRulesApi - object-oriented interface
 * @export
 * @class OptimizationRulesApi
 * @extends {BaseAPI}
 */
export class OptimizationRulesApi extends BaseAPI {
  /**
   *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @summary Associates one or multiple optimization rules with a campaign.
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} campaignId The sp campaign identifier.
   * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
   * @param {OptimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignRequest} [optimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignRequest]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof OptimizationRulesApi
   */
  public associateOptimizationRulesToCampaign(
    amazonAdvertisingAPIClientId: string,
    campaignId: string,
    amazonAdvertisingAPIScope?: string,
    optimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignRequest?: OptimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignRequest,
    options?: RawAxiosRequestConfig
  ) {
    return OptimizationRulesApiFp(this.configuration)
      .associateOptimizationRulesToCampaign(
        amazonAdvertisingAPIClientId,
        campaignId,
        amazonAdvertisingAPIScope,
        optimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignRequest,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @summary Creates one or more optimization rules.
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
   * @param {OptimizationRulesAPISwaggerCreateOptimizationRulesRequest} [optimizationRulesAPISwaggerCreateOptimizationRulesRequest]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof OptimizationRulesApi
   */
  public createOptimizationRules(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope?: string,
    optimizationRulesAPISwaggerCreateOptimizationRulesRequest?: OptimizationRulesAPISwaggerCreateOptimizationRulesRequest,
    options?: RawAxiosRequestConfig
  ) {
    return OptimizationRulesApiFp(this.configuration)
      .createOptimizationRules(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        optimizationRulesAPISwaggerCreateOptimizationRulesRequest,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
   * @summary Searches optimization rules based on optional filters.
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
   * @param {OptimizationRulesAPISwaggerSearchOptimizationRulesRequest} [optimizationRulesAPISwaggerSearchOptimizationRulesRequest]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof OptimizationRulesApi
   */
  public searchOptimizationRules(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope?: string,
    optimizationRulesAPISwaggerSearchOptimizationRulesRequest?: OptimizationRulesAPISwaggerSearchOptimizationRulesRequest,
    options?: RawAxiosRequestConfig
  ) {
    return OptimizationRulesApiFp(this.configuration)
      .searchOptimizationRules(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        optimizationRulesAPISwaggerSearchOptimizationRulesRequest,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @summary Updates one or more optimization rules.
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
   * @param {OptimizationRulesAPISwaggerUpdateOptimizationRulesRequest} [optimizationRulesAPISwaggerUpdateOptimizationRulesRequest]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof OptimizationRulesApi
   */
  public updateOptimizationRules(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope?: string,
    optimizationRulesAPISwaggerUpdateOptimizationRulesRequest?: OptimizationRulesAPISwaggerUpdateOptimizationRulesRequest,
    options?: RawAxiosRequestConfig
  ) {
    return OptimizationRulesApiFp(this.configuration)
      .updateOptimizationRules(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        optimizationRulesAPISwaggerUpdateOptimizationRulesRequest,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }
}

/**
 * ProductAdsApi - axios parameter creator
 * @export
 */
export const ProductAdsApiAxiosParamCreator = function (configuration?: Configuration) {
  return {
    /**
     * Create product ads  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsCreateSponsoredProductsProductAdsRequestContent} sponsoredProductsCreateSponsoredProductsProductAdsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createSponsoredProductsProductAds: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateSponsoredProductsProductAdsRequestContent: SponsoredProductsCreateSponsoredProductsProductAdsRequestContent,
      prefer?: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('createSponsoredProductsProductAds', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('createSponsoredProductsProductAds', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'sponsoredProductsCreateSponsoredProductsProductAdsRequestContent' is not null or undefined
      assertParamExists(
        'createSponsoredProductsProductAds',
        'sponsoredProductsCreateSponsoredProductsProductAdsRequestContent',
        sponsoredProductsCreateSponsoredProductsProductAdsRequestContent
      );
      const localVarPath = `/sp/productAds`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spProductAd.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      if (prefer != null) {
        localVarHeaderParameter['Prefer'] = String(prefer);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsCreateSponsoredProductsProductAdsRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * Delete product ads  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent} sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteSponsoredProductsProductAds: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent: SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('deleteSponsoredProductsProductAds', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('deleteSponsoredProductsProductAds', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent' is not null or undefined
      assertParamExists(
        'deleteSponsoredProductsProductAds',
        'sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent',
        sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent
      );
      const localVarPath = `/sp/productAds/delete`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spProductAd.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * List product ads  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsListSponsoredProductsProductAdsRequestContent} [sponsoredProductsListSponsoredProductsProductAdsRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listSponsoredProductsProductAds: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListSponsoredProductsProductAdsRequestContent?: SponsoredProductsListSponsoredProductsProductAdsRequestContent,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('listSponsoredProductsProductAds', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('listSponsoredProductsProductAds', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      const localVarPath = `/sp/productAds/list`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spProductAd.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsListSponsoredProductsProductAdsRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * Update product ads  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent} sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateSponsoredProductsProductAds: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent: SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent,
      prefer?: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('updateSponsoredProductsProductAds', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('updateSponsoredProductsProductAds', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent' is not null or undefined
      assertParamExists(
        'updateSponsoredProductsProductAds',
        'sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent',
        sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent
      );
      const localVarPath = `/sp/productAds`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spProductAd.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      if (prefer != null) {
        localVarHeaderParameter['Prefer'] = String(prefer);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
  };
};

/**
 * ProductAdsApi - functional programming interface
 * @export
 */
export const ProductAdsApiFp = function (configuration?: Configuration) {
  const localVarAxiosParamCreator = ProductAdsApiAxiosParamCreator(configuration);
  return {
    /**
     * Create product ads  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsCreateSponsoredProductsProductAdsRequestContent} sponsoredProductsCreateSponsoredProductsProductAdsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async createSponsoredProductsProductAds(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateSponsoredProductsProductAdsRequestContent: SponsoredProductsCreateSponsoredProductsProductAdsRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsCreateSponsoredProductsProductAdsResponseContent>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.createSponsoredProductsProductAds(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsCreateSponsoredProductsProductAdsRequestContent,
        prefer,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['ProductAdsApi.createSponsoredProductsProductAds']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * Delete product ads  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent} sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async deleteSponsoredProductsProductAds(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent: SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteSponsoredProductsProductAds(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['ProductAdsApi.deleteSponsoredProductsProductAds']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * List product ads  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsListSponsoredProductsProductAdsRequestContent} [sponsoredProductsListSponsoredProductsProductAdsRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async listSponsoredProductsProductAds(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListSponsoredProductsProductAdsRequestContent?: SponsoredProductsListSponsoredProductsProductAdsRequestContent,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsListSponsoredProductsProductAdsResponseContent>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.listSponsoredProductsProductAds(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsListSponsoredProductsProductAdsRequestContent,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['ProductAdsApi.listSponsoredProductsProductAds']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * Update product ads  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent} sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async updateSponsoredProductsProductAds(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent: SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.updateSponsoredProductsProductAds(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent,
        prefer,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['ProductAdsApi.updateSponsoredProductsProductAds']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
  };
};

/**
 * ProductAdsApi - factory interface
 * @export
 */
export const ProductAdsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
  const localVarFp = ProductAdsApiFp(configuration);
  return {
    /**
     * Create product ads  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsCreateSponsoredProductsProductAdsRequestContent} sponsoredProductsCreateSponsoredProductsProductAdsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createSponsoredProductsProductAds(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateSponsoredProductsProductAdsRequestContent: SponsoredProductsCreateSponsoredProductsProductAdsRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsCreateSponsoredProductsProductAdsResponseContent> {
      return localVarFp
        .createSponsoredProductsProductAds(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsCreateSponsoredProductsProductAdsRequestContent,
          prefer,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * Delete product ads  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent} sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteSponsoredProductsProductAds(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent: SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent> {
      return localVarFp
        .deleteSponsoredProductsProductAds(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * List product ads  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsListSponsoredProductsProductAdsRequestContent} [sponsoredProductsListSponsoredProductsProductAdsRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listSponsoredProductsProductAds(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListSponsoredProductsProductAdsRequestContent?: SponsoredProductsListSponsoredProductsProductAdsRequestContent,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsListSponsoredProductsProductAdsResponseContent> {
      return localVarFp
        .listSponsoredProductsProductAds(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsListSponsoredProductsProductAdsRequestContent,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * Update product ads  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent} sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateSponsoredProductsProductAds(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent: SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent> {
      return localVarFp
        .updateSponsoredProductsProductAds(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent,
          prefer,
          options
        )
        .then(request => request(axios, basePath));
    },
  };
};

/**
 * ProductAdsApi - object-oriented interface
 * @export
 * @class ProductAdsApi
 * @extends {BaseAPI}
 */
export class ProductAdsApi extends BaseAPI {
  /**
   * Create product ads  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsCreateSponsoredProductsProductAdsRequestContent} sponsoredProductsCreateSponsoredProductsProductAdsRequestContent
   * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof ProductAdsApi
   */
  public createSponsoredProductsProductAds(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsCreateSponsoredProductsProductAdsRequestContent: SponsoredProductsCreateSponsoredProductsProductAdsRequestContent,
    prefer?: string,
    options?: RawAxiosRequestConfig
  ) {
    return ProductAdsApiFp(this.configuration)
      .createSponsoredProductsProductAds(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsCreateSponsoredProductsProductAdsRequestContent,
        prefer,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * Delete product ads  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent} sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof ProductAdsApi
   */
  public deleteSponsoredProductsProductAds(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent: SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent,
    options?: RawAxiosRequestConfig
  ) {
    return ProductAdsApiFp(this.configuration)
      .deleteSponsoredProductsProductAds(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * List product ads  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsListSponsoredProductsProductAdsRequestContent} [sponsoredProductsListSponsoredProductsProductAdsRequestContent]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof ProductAdsApi
   */
  public listSponsoredProductsProductAds(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsListSponsoredProductsProductAdsRequestContent?: SponsoredProductsListSponsoredProductsProductAdsRequestContent,
    options?: RawAxiosRequestConfig
  ) {
    return ProductAdsApiFp(this.configuration)
      .listSponsoredProductsProductAds(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsListSponsoredProductsProductAdsRequestContent,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * Update product ads  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent} sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent
   * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof ProductAdsApi
   */
  public updateSponsoredProductsProductAds(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent: SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent,
    prefer?: string,
    options?: RawAxiosRequestConfig
  ) {
    return ProductAdsApiFp(this.configuration)
      .updateSponsoredProductsProductAds(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent,
        prefer,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }
}

/**
 * ProductRecommendationServiceApi - axios parameter creator
 * @export
 */
export const ProductRecommendationServiceApiAxiosParamCreator = function (configuration?: Configuration) {
  return {
    /**
     * Given an advertised ASIN as input, this API returns suggested ASINs to target in a product targeting campaign. We use various methods to generate these suggestions. These include using historical performance of your ad, items that shoppers they frequently view and purchase together, etc. The suggested targets can be retrieved either as a single list, or grouped by ‘theme\' – i.e. an accompanying context for why we recommend the items. You can pick the desired format using the Accepts header, please see the response mediaTypes for more information. </br> <h4>Pagination Behavior</h4> The API supports cursor based pagination using encoded cursor values to return next set of records or previously served records. The <b>count</b> parameter in the request body will be used to determine the size of results when requesting the previous page or next page. If no value for <b>count</b> is passed in the request, a default value is assumed. Please refer the range and defaults for these values in the request schema under GetProductRecommendationsRequest. </br> <i><b>Note:</b> The clients should never cache pagination cursor values locally as these values will expire after a certain time period. However a cursor value can be reused to perform retries in case of failures as long as the value has not expired. </br></br> <h4>Themes </h4> Themes provide additional context for why we are recommending a product as a target. See below for an overall list of themes currently available –  </br><b>- Top converting targets</b> – These ASINs generated conversions for the input ASIN in the past 30 days (e.g. your product appeared as an ad on the detail page of these items, and a shopper clicked and purchased your item). The suggested ASINs under this theme are sorted in decreasing order of sales generated for your promoted item. </br><b>- Similar items (frequently viewed together)</b> – Items that shoppers frequently view and click along with your advertised item during a shopping session. </br><b>- Complements</b> – Items that are frequently purchased together as complements. For example, if you are promoting a tennis racquet, you may see tennis balls recommended under this theme. </br><b>- Similar items with low ratings and reviews</b> – Subset of the ‘similar items’ theme containing items that are rated lower than 3 stars and/or with fewer than 5 reviews. </br><b>- Other books read by your readers</b> – Items that shoppers frequently view and click along with your advertised item during a shopping session. </br></br><i><b>Note:</b> Availability of themes differs by input ASIN - some ASINs may not have all above themes available</i>
     * @summary Suggested target ASINs for your advertised product
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [amazonAdvertisingAPIAdvertiserId] The Advertiser ID associated with the advertiser account.
     * @param {GetProductRecommendationsRequest} [getProductRecommendationsRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getProductRecommendations: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      amazonAdvertisingAPIAdvertiserId?: string,
      getProductRecommendationsRequest?: GetProductRecommendationsRequest,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('getProductRecommendations', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('getProductRecommendations', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      const localVarPath = `/sp/targets/products/recommendations`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spproductrecommendation.v3+json';

      if (amazonAdvertisingAPIAdvertiserId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-AdvertiserId'] = String(amazonAdvertisingAPIAdvertiserId);
      }
      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(getProductRecommendationsRequest, localVarRequestOptions, configuration);

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
  };
};

/**
 * ProductRecommendationServiceApi - functional programming interface
 * @export
 */
export const ProductRecommendationServiceApiFp = function (configuration?: Configuration) {
  const localVarAxiosParamCreator = ProductRecommendationServiceApiAxiosParamCreator(configuration);
  return {
    /**
     * Given an advertised ASIN as input, this API returns suggested ASINs to target in a product targeting campaign. We use various methods to generate these suggestions. These include using historical performance of your ad, items that shoppers they frequently view and purchase together, etc. The suggested targets can be retrieved either as a single list, or grouped by ‘theme\' – i.e. an accompanying context for why we recommend the items. You can pick the desired format using the Accepts header, please see the response mediaTypes for more information. </br> <h4>Pagination Behavior</h4> The API supports cursor based pagination using encoded cursor values to return next set of records or previously served records. The <b>count</b> parameter in the request body will be used to determine the size of results when requesting the previous page or next page. If no value for <b>count</b> is passed in the request, a default value is assumed. Please refer the range and defaults for these values in the request schema under GetProductRecommendationsRequest. </br> <i><b>Note:</b> The clients should never cache pagination cursor values locally as these values will expire after a certain time period. However a cursor value can be reused to perform retries in case of failures as long as the value has not expired. </br></br> <h4>Themes </h4> Themes provide additional context for why we are recommending a product as a target. See below for an overall list of themes currently available –  </br><b>- Top converting targets</b> – These ASINs generated conversions for the input ASIN in the past 30 days (e.g. your product appeared as an ad on the detail page of these items, and a shopper clicked and purchased your item). The suggested ASINs under this theme are sorted in decreasing order of sales generated for your promoted item. </br><b>- Similar items (frequently viewed together)</b> – Items that shoppers frequently view and click along with your advertised item during a shopping session. </br><b>- Complements</b> – Items that are frequently purchased together as complements. For example, if you are promoting a tennis racquet, you may see tennis balls recommended under this theme. </br><b>- Similar items with low ratings and reviews</b> – Subset of the ‘similar items’ theme containing items that are rated lower than 3 stars and/or with fewer than 5 reviews. </br><b>- Other books read by your readers</b> – Items that shoppers frequently view and click along with your advertised item during a shopping session. </br></br><i><b>Note:</b> Availability of themes differs by input ASIN - some ASINs may not have all above themes available</i>
     * @summary Suggested target ASINs for your advertised product
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [amazonAdvertisingAPIAdvertiserId] The Advertiser ID associated with the advertiser account.
     * @param {GetProductRecommendationsRequest} [getProductRecommendationsRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async getProductRecommendations(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      amazonAdvertisingAPIAdvertiserId?: string,
      getProductRecommendationsRequest?: GetProductRecommendationsRequest,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProductRecommendationsByTheme>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.getProductRecommendations(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        amazonAdvertisingAPIAdvertiserId,
        getProductRecommendationsRequest,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['ProductRecommendationServiceApi.getProductRecommendations']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
  };
};

/**
 * ProductRecommendationServiceApi - factory interface
 * @export
 */
export const ProductRecommendationServiceApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
  const localVarFp = ProductRecommendationServiceApiFp(configuration);
  return {
    /**
     * Given an advertised ASIN as input, this API returns suggested ASINs to target in a product targeting campaign. We use various methods to generate these suggestions. These include using historical performance of your ad, items that shoppers they frequently view and purchase together, etc. The suggested targets can be retrieved either as a single list, or grouped by ‘theme\' – i.e. an accompanying context for why we recommend the items. You can pick the desired format using the Accepts header, please see the response mediaTypes for more information. </br> <h4>Pagination Behavior</h4> The API supports cursor based pagination using encoded cursor values to return next set of records or previously served records. The <b>count</b> parameter in the request body will be used to determine the size of results when requesting the previous page or next page. If no value for <b>count</b> is passed in the request, a default value is assumed. Please refer the range and defaults for these values in the request schema under GetProductRecommendationsRequest. </br> <i><b>Note:</b> The clients should never cache pagination cursor values locally as these values will expire after a certain time period. However a cursor value can be reused to perform retries in case of failures as long as the value has not expired. </br></br> <h4>Themes </h4> Themes provide additional context for why we are recommending a product as a target. See below for an overall list of themes currently available –  </br><b>- Top converting targets</b> – These ASINs generated conversions for the input ASIN in the past 30 days (e.g. your product appeared as an ad on the detail page of these items, and a shopper clicked and purchased your item). The suggested ASINs under this theme are sorted in decreasing order of sales generated for your promoted item. </br><b>- Similar items (frequently viewed together)</b> – Items that shoppers frequently view and click along with your advertised item during a shopping session. </br><b>- Complements</b> – Items that are frequently purchased together as complements. For example, if you are promoting a tennis racquet, you may see tennis balls recommended under this theme. </br><b>- Similar items with low ratings and reviews</b> – Subset of the ‘similar items’ theme containing items that are rated lower than 3 stars and/or with fewer than 5 reviews. </br><b>- Other books read by your readers</b> – Items that shoppers frequently view and click along with your advertised item during a shopping session. </br></br><i><b>Note:</b> Availability of themes differs by input ASIN - some ASINs may not have all above themes available</i>
     * @summary Suggested target ASINs for your advertised product
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [amazonAdvertisingAPIAdvertiserId] The Advertiser ID associated with the advertiser account.
     * @param {GetProductRecommendationsRequest} [getProductRecommendationsRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getProductRecommendations(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      amazonAdvertisingAPIAdvertiserId?: string,
      getProductRecommendationsRequest?: GetProductRecommendationsRequest,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<ProductRecommendationsByTheme> {
      return localVarFp
        .getProductRecommendations(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          amazonAdvertisingAPIAdvertiserId,
          getProductRecommendationsRequest,
          options
        )
        .then(request => request(axios, basePath));
    },
  };
};

/**
 * ProductRecommendationServiceApi - object-oriented interface
 * @export
 * @class ProductRecommendationServiceApi
 * @extends {BaseAPI}
 */
export class ProductRecommendationServiceApi extends BaseAPI {
  /**
   * Given an advertised ASIN as input, this API returns suggested ASINs to target in a product targeting campaign. We use various methods to generate these suggestions. These include using historical performance of your ad, items that shoppers they frequently view and purchase together, etc. The suggested targets can be retrieved either as a single list, or grouped by ‘theme\' – i.e. an accompanying context for why we recommend the items. You can pick the desired format using the Accepts header, please see the response mediaTypes for more information. </br> <h4>Pagination Behavior</h4> The API supports cursor based pagination using encoded cursor values to return next set of records or previously served records. The <b>count</b> parameter in the request body will be used to determine the size of results when requesting the previous page or next page. If no value for <b>count</b> is passed in the request, a default value is assumed. Please refer the range and defaults for these values in the request schema under GetProductRecommendationsRequest. </br> <i><b>Note:</b> The clients should never cache pagination cursor values locally as these values will expire after a certain time period. However a cursor value can be reused to perform retries in case of failures as long as the value has not expired. </br></br> <h4>Themes </h4> Themes provide additional context for why we are recommending a product as a target. See below for an overall list of themes currently available –  </br><b>- Top converting targets</b> – These ASINs generated conversions for the input ASIN in the past 30 days (e.g. your product appeared as an ad on the detail page of these items, and a shopper clicked and purchased your item). The suggested ASINs under this theme are sorted in decreasing order of sales generated for your promoted item. </br><b>- Similar items (frequently viewed together)</b> – Items that shoppers frequently view and click along with your advertised item during a shopping session. </br><b>- Complements</b> – Items that are frequently purchased together as complements. For example, if you are promoting a tennis racquet, you may see tennis balls recommended under this theme. </br><b>- Similar items with low ratings and reviews</b> – Subset of the ‘similar items’ theme containing items that are rated lower than 3 stars and/or with fewer than 5 reviews. </br><b>- Other books read by your readers</b> – Items that shoppers frequently view and click along with your advertised item during a shopping session. </br></br><i><b>Note:</b> Availability of themes differs by input ASIN - some ASINs may not have all above themes available</i>
   * @summary Suggested target ASINs for your advertised product
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} [amazonAdvertisingAPIAdvertiserId] The Advertiser ID associated with the advertiser account.
   * @param {GetProductRecommendationsRequest} [getProductRecommendationsRequest]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof ProductRecommendationServiceApi
   */
  public getProductRecommendations(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    amazonAdvertisingAPIAdvertiserId?: string,
    getProductRecommendationsRequest?: GetProductRecommendationsRequest,
    options?: RawAxiosRequestConfig
  ) {
    return ProductRecommendationServiceApiFp(this.configuration)
      .getProductRecommendations(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        amazonAdvertisingAPIAdvertiserId,
        getProductRecommendationsRequest,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }
}

/**
 * ProductTargetingApi - axios parameter creator
 * @export
 */
export const ProductTargetingApiAxiosParamCreator = function (configuration?: Configuration) {
  return {
    /**
     * Returns a list of category recommendations for the input list of ASINs. Use this API to discover relevant categories to target. To find ASINs, either use the Product Metadata API or browse the Amazon Retail Website. <br> <ul><li>Response can be requested in different versions with the help of accept header. Please review the response mediaTypes for more information.</li><ul>  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Returns a list of category recommendations for the input list of ASINs.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @param {GetCategoryRecommendationsForASINsLocaleEnum} [locale] The locale to which the caller wishes to translate the list of category recommendations to. For example, if the caller wishes to receive a list of category recommendations in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned list of category recommendations will be in the default language of the marketplace.
     * @param {GetCategoryRecommendationsForAsinsRequest} [getCategoryRecommendationsForAsinsRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCategoryRecommendationsForASINs: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      prefer?: string,
      locale?: GetCategoryRecommendationsForASINsLocaleEnum,
      getCategoryRecommendationsForAsinsRequest?: GetCategoryRecommendationsForAsinsRequest,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('getCategoryRecommendationsForASINs', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('getCategoryRecommendationsForASINs', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      const localVarPath = `/sp/targets/categories/recommendations`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      if (locale !== undefined) {
        localVarQueryParameter['locale'] = locale;
      }

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spproducttargeting.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      if (prefer != null) {
        localVarHeaderParameter['Prefer'] = String(prefer);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(getCategoryRecommendationsForAsinsRequest, localVarRequestOptions, configuration);

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * Returns brands recommended for negative targeting. Only available for Sellers and Vendors. These recommendations include your own brands because targeting your own brands usually results in lower performance than targeting competitors\' brands.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Returns brands recommended for negative targeting.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getNegativeBrands: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      prefer?: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('getNegativeBrands', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('getNegativeBrands', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      const localVarPath = `/sp/negativeTargets/brands/recommendations`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      if (prefer != null) {
        localVarHeaderParameter['Prefer'] = String(prefer);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * Returns refinements according to category input.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Returns refinements according to category input.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} categoryId The category ID. Please use the GetTargetableCategories API or the GetCategoriesForASINs API to retrieve categories IDs. This API does not check if the category is a valid category.
     * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @param {GetRefinementsForCategoryLocaleEnum} [locale] The locale to which the caller wishes to translate the refinements to. For example, if the caller wishes to receive the refinements in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the refinements will be in the default language of the marketplace.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRefinementsForCategory: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      categoryId: string,
      prefer?: string,
      locale?: GetRefinementsForCategoryLocaleEnum,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('getRefinementsForCategory', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('getRefinementsForCategory', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'categoryId' is not null or undefined
      assertParamExists('getRefinementsForCategory', 'categoryId', categoryId);
      const localVarPath = `/sp/targets/category/{categoryId}/refinements`.replace(`{${'categoryId'}}`, encodeURIComponent(String(categoryId)));
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      if (locale !== undefined) {
        localVarQueryParameter['locale'] = locale;
      }

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      if (prefer != null) {
        localVarHeaderParameter['Prefer'] = String(prefer);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * Get number of targetable asins based on refinements provided by the user. Please use the GetTargetableCategories API or the GetCategoryRecommendationsForASINs API to retrieve the category ID. Please use the GetRefinementsByCategory API to retrieve refinements data for a category.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Get number of targetable asins based on refinements provided by the user.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @param {GetTargetableAsinCountsRequest} [getTargetableAsinCountsRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTargetableASINCounts: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      prefer?: string,
      getTargetableAsinCountsRequest?: GetTargetableAsinCountsRequest,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('getTargetableASINCounts', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('getTargetableASINCounts', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      const localVarPath = `/sp/targets/products/count`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spproducttargeting.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      if (prefer != null) {
        localVarHeaderParameter['Prefer'] = String(prefer);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(getTargetableAsinCountsRequest, localVarRequestOptions, configuration);

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * Returns all targetable categories. This API returns a large JSON string containing a tree of category nodes. Each category node has the fields - category id, category name, and child categories.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Returns all targetable categories.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @param {GetTargetableCategoriesLocaleEnum} [locale] The locale to which the caller wishes to translate the targetable categories to. For example, if the caller wishes to receive the targetable categories in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned targetable categories will be in the default language of the marketplace.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTargetableCategories: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      prefer?: string,
      locale?: GetTargetableCategoriesLocaleEnum,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('getTargetableCategories', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('getTargetableCategories', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      const localVarPath = `/sp/targets/categories`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      if (locale !== undefined) {
        localVarQueryParameter['locale'] = locale;
      }

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      if (prefer != null) {
        localVarHeaderParameter['Prefer'] = String(prefer);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * Returns up to 100 brands related to keyword input for negative targeting.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Returns brands related to keyword input for negative targeting.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @param {SearchBrandsRequest} [searchBrandsRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    searchBrands: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      prefer?: string,
      searchBrandsRequest?: SearchBrandsRequest,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('searchBrands', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('searchBrands', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      const localVarPath = `/sp/negativeTargets/brands/search`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spproducttargeting.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      if (prefer != null) {
        localVarHeaderParameter['Prefer'] = String(prefer);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(searchBrandsRequest, localVarRequestOptions, configuration);

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
  };
};

/**
 * ProductTargetingApi - functional programming interface
 * @export
 */
export const ProductTargetingApiFp = function (configuration?: Configuration) {
  const localVarAxiosParamCreator = ProductTargetingApiAxiosParamCreator(configuration);
  return {
    /**
     * Returns a list of category recommendations for the input list of ASINs. Use this API to discover relevant categories to target. To find ASINs, either use the Product Metadata API or browse the Amazon Retail Website. <br> <ul><li>Response can be requested in different versions with the help of accept header. Please review the response mediaTypes for more information.</li><ul>  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Returns a list of category recommendations for the input list of ASINs.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @param {GetCategoryRecommendationsForASINsLocaleEnum} [locale] The locale to which the caller wishes to translate the list of category recommendations to. For example, if the caller wishes to receive a list of category recommendations in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned list of category recommendations will be in the default language of the marketplace.
     * @param {GetCategoryRecommendationsForAsinsRequest} [getCategoryRecommendationsForAsinsRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async getCategoryRecommendationsForASINs(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      prefer?: string,
      locale?: GetCategoryRecommendationsForASINsLocaleEnum,
      getCategoryRecommendationsForAsinsRequest?: GetCategoryRecommendationsForAsinsRequest,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CategoryRecommendations>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.getCategoryRecommendationsForASINs(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        prefer,
        locale,
        getCategoryRecommendationsForAsinsRequest,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['ProductTargetingApi.getCategoryRecommendationsForASINs']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * Returns brands recommended for negative targeting. Only available for Sellers and Vendors. These recommendations include your own brands because targeting your own brands usually results in lower performance than targeting competitors\' brands.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Returns brands recommended for negative targeting.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async getNegativeBrands(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Brand>>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.getNegativeBrands(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        prefer,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath = operationServerMap['ProductTargetingApi.getNegativeBrands']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * Returns refinements according to category input.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Returns refinements according to category input.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} categoryId The category ID. Please use the GetTargetableCategories API or the GetCategoriesForASINs API to retrieve categories IDs. This API does not check if the category is a valid category.
     * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @param {GetRefinementsForCategoryLocaleEnum} [locale] The locale to which the caller wishes to translate the refinements to. For example, if the caller wishes to receive the refinements in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the refinements will be in the default language of the marketplace.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async getRefinementsForCategory(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      categoryId: string,
      prefer?: string,
      locale?: GetRefinementsForCategoryLocaleEnum,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Refinements>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.getRefinementsForCategory(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        categoryId,
        prefer,
        locale,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['ProductTargetingApi.getRefinementsForCategory']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * Get number of targetable asins based on refinements provided by the user. Please use the GetTargetableCategories API or the GetCategoryRecommendationsForASINs API to retrieve the category ID. Please use the GetRefinementsByCategory API to retrieve refinements data for a category.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Get number of targetable asins based on refinements provided by the user.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @param {GetTargetableAsinCountsRequest} [getTargetableAsinCountsRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async getTargetableASINCounts(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      prefer?: string,
      getTargetableAsinCountsRequest?: GetTargetableAsinCountsRequest,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TargetableAsinCounts>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.getTargetableASINCounts(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        prefer,
        getTargetableAsinCountsRequest,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath = operationServerMap['ProductTargetingApi.getTargetableASINCounts']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * Returns all targetable categories. This API returns a large JSON string containing a tree of category nodes. Each category node has the fields - category id, category name, and child categories.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Returns all targetable categories.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @param {GetTargetableCategoriesLocaleEnum} [locale] The locale to which the caller wishes to translate the targetable categories to. For example, if the caller wishes to receive the targetable categories in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned targetable categories will be in the default language of the marketplace.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async getTargetableCategories(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      prefer?: string,
      locale?: GetTargetableCategoriesLocaleEnum,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TargetableCategories>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.getTargetableCategories(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        prefer,
        locale,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath = operationServerMap['ProductTargetingApi.getTargetableCategories']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * Returns up to 100 brands related to keyword input for negative targeting.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Returns brands related to keyword input for negative targeting.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @param {SearchBrandsRequest} [searchBrandsRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async searchBrands(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      prefer?: string,
      searchBrandsRequest?: SearchBrandsRequest,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Brand>>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.searchBrands(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        prefer,
        searchBrandsRequest,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath = operationServerMap['ProductTargetingApi.searchBrands']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
  };
};

/**
 * ProductTargetingApi - factory interface
 * @export
 */
export const ProductTargetingApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
  const localVarFp = ProductTargetingApiFp(configuration);
  return {
    /**
     * Returns a list of category recommendations for the input list of ASINs. Use this API to discover relevant categories to target. To find ASINs, either use the Product Metadata API or browse the Amazon Retail Website. <br> <ul><li>Response can be requested in different versions with the help of accept header. Please review the response mediaTypes for more information.</li><ul>  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Returns a list of category recommendations for the input list of ASINs.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @param {GetCategoryRecommendationsForASINsLocaleEnum} [locale] The locale to which the caller wishes to translate the list of category recommendations to. For example, if the caller wishes to receive a list of category recommendations in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned list of category recommendations will be in the default language of the marketplace.
     * @param {GetCategoryRecommendationsForAsinsRequest} [getCategoryRecommendationsForAsinsRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCategoryRecommendationsForASINs(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      prefer?: string,
      locale?: GetCategoryRecommendationsForASINsLocaleEnum,
      getCategoryRecommendationsForAsinsRequest?: GetCategoryRecommendationsForAsinsRequest,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<CategoryRecommendations> {
      return localVarFp
        .getCategoryRecommendationsForASINs(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          prefer,
          locale,
          getCategoryRecommendationsForAsinsRequest,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * Returns brands recommended for negative targeting. Only available for Sellers and Vendors. These recommendations include your own brands because targeting your own brands usually results in lower performance than targeting competitors\' brands.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Returns brands recommended for negative targeting.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getNegativeBrands(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<Array<Brand>> {
      return localVarFp
        .getNegativeBrands(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, options)
        .then(request => request(axios, basePath));
    },
    /**
     * Returns refinements according to category input.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Returns refinements according to category input.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} categoryId The category ID. Please use the GetTargetableCategories API or the GetCategoriesForASINs API to retrieve categories IDs. This API does not check if the category is a valid category.
     * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @param {GetRefinementsForCategoryLocaleEnum} [locale] The locale to which the caller wishes to translate the refinements to. For example, if the caller wishes to receive the refinements in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the refinements will be in the default language of the marketplace.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRefinementsForCategory(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      categoryId: string,
      prefer?: string,
      locale?: GetRefinementsForCategoryLocaleEnum,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<Refinements> {
      return localVarFp
        .getRefinementsForCategory(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, categoryId, prefer, locale, options)
        .then(request => request(axios, basePath));
    },
    /**
     * Get number of targetable asins based on refinements provided by the user. Please use the GetTargetableCategories API or the GetCategoryRecommendationsForASINs API to retrieve the category ID. Please use the GetRefinementsByCategory API to retrieve refinements data for a category.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Get number of targetable asins based on refinements provided by the user.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @param {GetTargetableAsinCountsRequest} [getTargetableAsinCountsRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTargetableASINCounts(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      prefer?: string,
      getTargetableAsinCountsRequest?: GetTargetableAsinCountsRequest,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<TargetableAsinCounts> {
      return localVarFp
        .getTargetableASINCounts(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, getTargetableAsinCountsRequest, options)
        .then(request => request(axios, basePath));
    },
    /**
     * Returns all targetable categories. This API returns a large JSON string containing a tree of category nodes. Each category node has the fields - category id, category name, and child categories.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Returns all targetable categories.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @param {GetTargetableCategoriesLocaleEnum} [locale] The locale to which the caller wishes to translate the targetable categories to. For example, if the caller wishes to receive the targetable categories in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned targetable categories will be in the default language of the marketplace.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTargetableCategories(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      prefer?: string,
      locale?: GetTargetableCategoriesLocaleEnum,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<TargetableCategories> {
      return localVarFp
        .getTargetableCategories(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, locale, options)
        .then(request => request(axios, basePath));
    },
    /**
     * Returns up to 100 brands related to keyword input for negative targeting.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Returns brands related to keyword input for negative targeting.
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @param {SearchBrandsRequest} [searchBrandsRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    searchBrands(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      prefer?: string,
      searchBrandsRequest?: SearchBrandsRequest,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<Array<Brand>> {
      return localVarFp
        .searchBrands(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, searchBrandsRequest, options)
        .then(request => request(axios, basePath));
    },
  };
};

/**
 * ProductTargetingApi - object-oriented interface
 * @export
 * @class ProductTargetingApi
 * @extends {BaseAPI}
 */
export class ProductTargetingApi extends BaseAPI {
  /**
   * Returns a list of category recommendations for the input list of ASINs. Use this API to discover relevant categories to target. To find ASINs, either use the Product Metadata API or browse the Amazon Retail Website. <br> <ul><li>Response can be requested in different versions with the help of accept header. Please review the response mediaTypes for more information.</li><ul>  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
   * @summary Returns a list of category recommendations for the input list of ASINs.
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
   * @param {GetCategoryRecommendationsForASINsLocaleEnum} [locale] The locale to which the caller wishes to translate the list of category recommendations to. For example, if the caller wishes to receive a list of category recommendations in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned list of category recommendations will be in the default language of the marketplace.
   * @param {GetCategoryRecommendationsForAsinsRequest} [getCategoryRecommendationsForAsinsRequest]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof ProductTargetingApi
   */
  public getCategoryRecommendationsForASINs(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    prefer?: string,
    locale?: GetCategoryRecommendationsForASINsLocaleEnum,
    getCategoryRecommendationsForAsinsRequest?: GetCategoryRecommendationsForAsinsRequest,
    options?: RawAxiosRequestConfig
  ) {
    return ProductTargetingApiFp(this.configuration)
      .getCategoryRecommendationsForASINs(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        prefer,
        locale,
        getCategoryRecommendationsForAsinsRequest,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * Returns brands recommended for negative targeting. Only available for Sellers and Vendors. These recommendations include your own brands because targeting your own brands usually results in lower performance than targeting competitors\' brands.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
   * @summary Returns brands recommended for negative targeting.
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof ProductTargetingApi
   */
  public getNegativeBrands(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    prefer?: string,
    options?: RawAxiosRequestConfig
  ) {
    return ProductTargetingApiFp(this.configuration)
      .getNegativeBrands(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, options)
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * Returns refinements according to category input.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
   * @summary Returns refinements according to category input.
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} categoryId The category ID. Please use the GetTargetableCategories API or the GetCategoriesForASINs API to retrieve categories IDs. This API does not check if the category is a valid category.
   * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
   * @param {GetRefinementsForCategoryLocaleEnum} [locale] The locale to which the caller wishes to translate the refinements to. For example, if the caller wishes to receive the refinements in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the refinements will be in the default language of the marketplace.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof ProductTargetingApi
   */
  public getRefinementsForCategory(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    categoryId: string,
    prefer?: string,
    locale?: GetRefinementsForCategoryLocaleEnum,
    options?: RawAxiosRequestConfig
  ) {
    return ProductTargetingApiFp(this.configuration)
      .getRefinementsForCategory(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, categoryId, prefer, locale, options)
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * Get number of targetable asins based on refinements provided by the user. Please use the GetTargetableCategories API or the GetCategoryRecommendationsForASINs API to retrieve the category ID. Please use the GetRefinementsByCategory API to retrieve refinements data for a category.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
   * @summary Get number of targetable asins based on refinements provided by the user.
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
   * @param {GetTargetableAsinCountsRequest} [getTargetableAsinCountsRequest]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof ProductTargetingApi
   */
  public getTargetableASINCounts(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    prefer?: string,
    getTargetableAsinCountsRequest?: GetTargetableAsinCountsRequest,
    options?: RawAxiosRequestConfig
  ) {
    return ProductTargetingApiFp(this.configuration)
      .getTargetableASINCounts(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, getTargetableAsinCountsRequest, options)
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * Returns all targetable categories. This API returns a large JSON string containing a tree of category nodes. Each category node has the fields - category id, category name, and child categories.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
   * @summary Returns all targetable categories.
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
   * @param {GetTargetableCategoriesLocaleEnum} [locale] The locale to which the caller wishes to translate the targetable categories to. For example, if the caller wishes to receive the targetable categories in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned targetable categories will be in the default language of the marketplace.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof ProductTargetingApi
   */
  public getTargetableCategories(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    prefer?: string,
    locale?: GetTargetableCategoriesLocaleEnum,
    options?: RawAxiosRequestConfig
  ) {
    return ProductTargetingApiFp(this.configuration)
      .getTargetableCategories(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, locale, options)
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * Returns up to 100 brands related to keyword input for negative targeting.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
   * @summary Returns brands related to keyword input for negative targeting.
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
   * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
   * @param {SearchBrandsRequest} [searchBrandsRequest]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof ProductTargetingApi
   */
  public searchBrands(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    prefer?: string,
    searchBrandsRequest?: SearchBrandsRequest,
    options?: RawAxiosRequestConfig
  ) {
    return ProductTargetingApiFp(this.configuration)
      .searchBrands(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, searchBrandsRequest, options)
      .then(request => request(this.axios, this.basePath));
  }
}

/**
 * @export
 */
export const GetCategoryRecommendationsForASINsLocaleEnum = {
  ArAe: 'ar_AE',
  DeDe: 'de_DE',
  EnAe: 'en_AE',
  EnAu: 'en_AU',
  EnCa: 'en_CA',
  EnGb: 'en_GB',
  EnIn: 'en_IN',
  EnSg: 'en_SG',
  EnUs: 'en_US',
  EsEs: 'es_ES',
  EsMx: 'es_MX',
  FrCa: 'fr_CA',
  FrFr: 'fr_FR',
  HiIn: 'hi_IN',
  ItIt: 'it_IT',
  JaJp: 'ja_JP',
  KoKr: 'ko_KR',
  NlNl: 'nl_NL',
  PlPl: 'pl_PL',
  PtBr: 'pt_BR',
  SvSe: 'sv_SE',
  TaIn: 'ta_IN',
  ThTh: 'th_TH',
  TrTr: 'tr_TR',
  ViVn: 'vi_VN',
  ZhCn: 'zh_CN',
} as const;
export type GetCategoryRecommendationsForASINsLocaleEnum =
  (typeof GetCategoryRecommendationsForASINsLocaleEnum)[keyof typeof GetCategoryRecommendationsForASINsLocaleEnum];
/**
 * @export
 */
export const GetRefinementsForCategoryLocaleEnum = {
  ArAe: 'ar_AE',
  DeDe: 'de_DE',
  EnAe: 'en_AE',
  EnAu: 'en_AU',
  EnCa: 'en_CA',
  EnGb: 'en_GB',
  EnIn: 'en_IN',
  EnSg: 'en_SG',
  EnUs: 'en_US',
  EsEs: 'es_ES',
  EsMx: 'es_MX',
  FrCa: 'fr_CA',
  FrFr: 'fr_FR',
  HiIn: 'hi_IN',
  ItIt: 'it_IT',
  JaJp: 'ja_JP',
  KoKr: 'ko_KR',
  NlNl: 'nl_NL',
  PlPl: 'pl_PL',
  PtBr: 'pt_BR',
  SvSe: 'sv_SE',
  TaIn: 'ta_IN',
  ThTh: 'th_TH',
  TrTr: 'tr_TR',
  ViVn: 'vi_VN',
  ZhCn: 'zh_CN',
} as const;
export type GetRefinementsForCategoryLocaleEnum = (typeof GetRefinementsForCategoryLocaleEnum)[keyof typeof GetRefinementsForCategoryLocaleEnum];
/**
 * @export
 */
export const GetTargetableCategoriesLocaleEnum = {
  ArAe: 'ar_AE',
  DeDe: 'de_DE',
  EnAe: 'en_AE',
  EnAu: 'en_AU',
  EnCa: 'en_CA',
  EnGb: 'en_GB',
  EnIn: 'en_IN',
  EnSg: 'en_SG',
  EnUs: 'en_US',
  EsEs: 'es_ES',
  EsMx: 'es_MX',
  FrCa: 'fr_CA',
  FrFr: 'fr_FR',
  HiIn: 'hi_IN',
  ItIt: 'it_IT',
  JaJp: 'ja_JP',
  KoKr: 'ko_KR',
  NlNl: 'nl_NL',
  PlPl: 'pl_PL',
  PtBr: 'pt_BR',
  SvSe: 'sv_SE',
  TaIn: 'ta_IN',
  ThTh: 'th_TH',
  TrTr: 'tr_TR',
  ViVn: 'vi_VN',
  ZhCn: 'zh_CN',
} as const;
export type GetTargetableCategoriesLocaleEnum = (typeof GetTargetableCategoriesLocaleEnum)[keyof typeof GetTargetableCategoriesLocaleEnum];

/**
 * TargetPromotionGroupsApi - axios parameter creator
 * @export
 */
export const TargetPromotionGroupsApiAxiosParamCreator = function (configuration?: Configuration) {
  return {
    /**
     * Creates keyword and/or product targets in the manual adGroup that are part of the target promotion group  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId  The identifier of a client associated with a \&#39;Login with Amazon\&#39; account. This is a required     header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles     resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a     required header for advertisers and integrators using the Advertising API.
     * @param {SponsoredProductsCreateTargetPromotionGroupTargetsRequestContent} sponsoredProductsCreateTargetPromotionGroupTargetsRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createTargetPromotionGroupTargets: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateTargetPromotionGroupTargetsRequestContent: SponsoredProductsCreateTargetPromotionGroupTargetsRequestContent,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('createTargetPromotionGroupTargets', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('createTargetPromotionGroupTargets', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'sponsoredProductsCreateTargetPromotionGroupTargetsRequestContent' is not null or undefined
      assertParamExists(
        'createTargetPromotionGroupTargets',
        'sponsoredProductsCreateTargetPromotionGroupTargetsRequestContent',
        sponsoredProductsCreateTargetPromotionGroupTargetsRequestContent
      );
      const localVarPath = `/sp/targetPromotionGroups/targets`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.sptargetpromotiongrouptarget.v1+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsCreateTargetPromotionGroupTargetsRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * Creates a target promotion group, by grouping the auto-targeting adGroupId and manual-targeting adGroups, divided by keyword targeting adGroups, and product targeting adGroups.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId  The identifier of a client associated with a \&#39;Login with Amazon\&#39; account. This is a required     header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles     resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a     required header for advertisers and integrators using the Advertising API.
     * @param {SponsoredProductsCreateTargetPromotionGroupsV2RequestContent} sponsoredProductsCreateTargetPromotionGroupsV2RequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createTargetPromotionGroups: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateTargetPromotionGroupsV2RequestContent: SponsoredProductsCreateTargetPromotionGroupsV2RequestContent,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('createTargetPromotionGroups', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('createTargetPromotionGroups', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'sponsoredProductsCreateTargetPromotionGroupsV2RequestContent' is not null or undefined
      assertParamExists(
        'createTargetPromotionGroups',
        'sponsoredProductsCreateTargetPromotionGroupsV2RequestContent',
        sponsoredProductsCreateTargetPromotionGroupsV2RequestContent
      );
      const localVarPath = `/sp/targetPromotionGroups`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.sptargetpromotiongroup.v2+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsCreateTargetPromotionGroupsV2RequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * Retrieves keyword and product targets of an auto-targeting campaign as recommendations for promoting to a manual-targeting campaign. The recommendations are based on performance heuristics of the targets.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&#39;Login with Amazon\&#39; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsGetTargetPromotionGroupsRecommendationsRequestContent} [sponsoredProductsGetTargetPromotionGroupsRecommendationsRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTargetPromotionGroupsRecommendations: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsGetTargetPromotionGroupsRecommendationsRequestContent?: SponsoredProductsGetTargetPromotionGroupsRecommendationsRequestContent,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('getTargetPromotionGroupsRecommendations', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('getTargetPromotionGroupsRecommendations', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      const localVarPath = `/sp/targetPromotionGroups/recommendations`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spTargetPromotionGroupsRecommendations.v1+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsGetTargetPromotionGroupsRecommendationsRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * Returns the targets created through target promotion groups for an advertiser and / or given target promotion group.  **Requires one of these permissions**: [\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&#39;Login with Amazon\&#39; account. This is a required     header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles     resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a     required header for advertisers and integrators using the Advertising API.
     * @param {SponsoredProductsListTargetPromotionGroupTargetsRequestContent} [sponsoredProductsListTargetPromotionGroupTargetsRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listTargetPromotionGroupTargets: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListTargetPromotionGroupTargetsRequestContent?: SponsoredProductsListTargetPromotionGroupTargetsRequestContent,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('listTargetPromotionGroupTargets', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('listTargetPromotionGroupTargets', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      const localVarPath = `/sp/targetPromotionGroups/targets/list`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.sptargetpromotiongrouptarget.v1+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsListTargetPromotionGroupTargetsRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * Returns the target promotion groups for an advertiser and / or adGroupId, and / or target promotion group id.  **Requires one of these permissions**: [\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId  The identifier of a client associated with a \&#39;Login with Amazon\&#39; account. This is a required     header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles     resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a     required header for advertisers and integrators using the Advertising API.
     * @param {SponsoredProductsListTargetPromotionGroupsV2RequestContent} [sponsoredProductsListTargetPromotionGroupsV2RequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listTargetPromotionGroups: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListTargetPromotionGroupsV2RequestContent?: SponsoredProductsListTargetPromotionGroupsV2RequestContent,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('listTargetPromotionGroups', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('listTargetPromotionGroups', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      const localVarPath = `/sp/targetPromotionGroups/list`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.sptargetpromotiongroup.v2+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsListTargetPromotionGroupsV2RequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
  };
};

/**
 * TargetPromotionGroupsApi - functional programming interface
 * @export
 */
export const TargetPromotionGroupsApiFp = function (configuration?: Configuration) {
  const localVarAxiosParamCreator = TargetPromotionGroupsApiAxiosParamCreator(configuration);
  return {
    /**
     * Creates keyword and/or product targets in the manual adGroup that are part of the target promotion group  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId  The identifier of a client associated with a \&#39;Login with Amazon\&#39; account. This is a required     header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles     resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a     required header for advertisers and integrators using the Advertising API.
     * @param {SponsoredProductsCreateTargetPromotionGroupTargetsRequestContent} sponsoredProductsCreateTargetPromotionGroupTargetsRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async createTargetPromotionGroupTargets(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateTargetPromotionGroupTargetsRequestContent: SponsoredProductsCreateTargetPromotionGroupTargetsRequestContent,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsCreateTargetPromotionGroupTargetsResponseContent>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.createTargetPromotionGroupTargets(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsCreateTargetPromotionGroupTargetsRequestContent,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['TargetPromotionGroupsApi.createTargetPromotionGroupTargets']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * Creates a target promotion group, by grouping the auto-targeting adGroupId and manual-targeting adGroups, divided by keyword targeting adGroups, and product targeting adGroups.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId  The identifier of a client associated with a \&#39;Login with Amazon\&#39; account. This is a required     header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles     resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a     required header for advertisers and integrators using the Advertising API.
     * @param {SponsoredProductsCreateTargetPromotionGroupsV2RequestContent} sponsoredProductsCreateTargetPromotionGroupsV2RequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async createTargetPromotionGroups(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateTargetPromotionGroupsV2RequestContent: SponsoredProductsCreateTargetPromotionGroupsV2RequestContent,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsCreateTargetPromotionGroupsV2ResponseContent>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.createTargetPromotionGroups(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsCreateTargetPromotionGroupsV2RequestContent,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['TargetPromotionGroupsApi.createTargetPromotionGroups']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * Retrieves keyword and product targets of an auto-targeting campaign as recommendations for promoting to a manual-targeting campaign. The recommendations are based on performance heuristics of the targets.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&#39;Login with Amazon\&#39; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsGetTargetPromotionGroupsRecommendationsRequestContent} [sponsoredProductsGetTargetPromotionGroupsRecommendationsRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async getTargetPromotionGroupsRecommendations(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsGetTargetPromotionGroupsRecommendationsRequestContent?: SponsoredProductsGetTargetPromotionGroupsRecommendationsRequestContent,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsGetTargetPromotionGroupsRecommendationsResponseContent>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.getTargetPromotionGroupsRecommendations(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsGetTargetPromotionGroupsRecommendationsRequestContent,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['TargetPromotionGroupsApi.getTargetPromotionGroupsRecommendations']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * Returns the targets created through target promotion groups for an advertiser and / or given target promotion group.  **Requires one of these permissions**: [\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&#39;Login with Amazon\&#39; account. This is a required     header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles     resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a     required header for advertisers and integrators using the Advertising API.
     * @param {SponsoredProductsListTargetPromotionGroupTargetsRequestContent} [sponsoredProductsListTargetPromotionGroupTargetsRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async listTargetPromotionGroupTargets(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListTargetPromotionGroupTargetsRequestContent?: SponsoredProductsListTargetPromotionGroupTargetsRequestContent,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsListTargetPromotionGroupTargetsResponseContent>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.listTargetPromotionGroupTargets(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsListTargetPromotionGroupTargetsRequestContent,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['TargetPromotionGroupsApi.listTargetPromotionGroupTargets']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * Returns the target promotion groups for an advertiser and / or adGroupId, and / or target promotion group id.  **Requires one of these permissions**: [\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId  The identifier of a client associated with a \&#39;Login with Amazon\&#39; account. This is a required     header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles     resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a     required header for advertisers and integrators using the Advertising API.
     * @param {SponsoredProductsListTargetPromotionGroupsV2RequestContent} [sponsoredProductsListTargetPromotionGroupsV2RequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async listTargetPromotionGroups(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListTargetPromotionGroupsV2RequestContent?: SponsoredProductsListTargetPromotionGroupsV2RequestContent,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsListTargetPromotionGroupsV2ResponseContent>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.listTargetPromotionGroups(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsListTargetPromotionGroupsV2RequestContent,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['TargetPromotionGroupsApi.listTargetPromotionGroups']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
  };
};

/**
 * TargetPromotionGroupsApi - factory interface
 * @export
 */
export const TargetPromotionGroupsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
  const localVarFp = TargetPromotionGroupsApiFp(configuration);
  return {
    /**
     * Creates keyword and/or product targets in the manual adGroup that are part of the target promotion group  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId  The identifier of a client associated with a \&#39;Login with Amazon\&#39; account. This is a required     header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles     resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a     required header for advertisers and integrators using the Advertising API.
     * @param {SponsoredProductsCreateTargetPromotionGroupTargetsRequestContent} sponsoredProductsCreateTargetPromotionGroupTargetsRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createTargetPromotionGroupTargets(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateTargetPromotionGroupTargetsRequestContent: SponsoredProductsCreateTargetPromotionGroupTargetsRequestContent,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsCreateTargetPromotionGroupTargetsResponseContent> {
      return localVarFp
        .createTargetPromotionGroupTargets(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsCreateTargetPromotionGroupTargetsRequestContent,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * Creates a target promotion group, by grouping the auto-targeting adGroupId and manual-targeting adGroups, divided by keyword targeting adGroups, and product targeting adGroups.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId  The identifier of a client associated with a \&#39;Login with Amazon\&#39; account. This is a required     header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles     resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a     required header for advertisers and integrators using the Advertising API.
     * @param {SponsoredProductsCreateTargetPromotionGroupsV2RequestContent} sponsoredProductsCreateTargetPromotionGroupsV2RequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createTargetPromotionGroups(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateTargetPromotionGroupsV2RequestContent: SponsoredProductsCreateTargetPromotionGroupsV2RequestContent,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsCreateTargetPromotionGroupsV2ResponseContent> {
      return localVarFp
        .createTargetPromotionGroups(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsCreateTargetPromotionGroupsV2RequestContent,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * Retrieves keyword and product targets of an auto-targeting campaign as recommendations for promoting to a manual-targeting campaign. The recommendations are based on performance heuristics of the targets.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&#39;Login with Amazon\&#39; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsGetTargetPromotionGroupsRecommendationsRequestContent} [sponsoredProductsGetTargetPromotionGroupsRecommendationsRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTargetPromotionGroupsRecommendations(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsGetTargetPromotionGroupsRecommendationsRequestContent?: SponsoredProductsGetTargetPromotionGroupsRecommendationsRequestContent,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsGetTargetPromotionGroupsRecommendationsResponseContent> {
      return localVarFp
        .getTargetPromotionGroupsRecommendations(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsGetTargetPromotionGroupsRecommendationsRequestContent,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * Returns the targets created through target promotion groups for an advertiser and / or given target promotion group.  **Requires one of these permissions**: [\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&#39;Login with Amazon\&#39; account. This is a required     header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles     resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a     required header for advertisers and integrators using the Advertising API.
     * @param {SponsoredProductsListTargetPromotionGroupTargetsRequestContent} [sponsoredProductsListTargetPromotionGroupTargetsRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listTargetPromotionGroupTargets(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListTargetPromotionGroupTargetsRequestContent?: SponsoredProductsListTargetPromotionGroupTargetsRequestContent,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsListTargetPromotionGroupTargetsResponseContent> {
      return localVarFp
        .listTargetPromotionGroupTargets(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsListTargetPromotionGroupTargetsRequestContent,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * Returns the target promotion groups for an advertiser and / or adGroupId, and / or target promotion group id.  **Requires one of these permissions**: [\"advertiser_campaign_view\"]
     * @param {string} amazonAdvertisingAPIClientId  The identifier of a client associated with a \&#39;Login with Amazon\&#39; account. This is a required     header for advertisers and integrators using the Advertising API.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles     resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a     required header for advertisers and integrators using the Advertising API.
     * @param {SponsoredProductsListTargetPromotionGroupsV2RequestContent} [sponsoredProductsListTargetPromotionGroupsV2RequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listTargetPromotionGroups(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListTargetPromotionGroupsV2RequestContent?: SponsoredProductsListTargetPromotionGroupsV2RequestContent,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsListTargetPromotionGroupsV2ResponseContent> {
      return localVarFp
        .listTargetPromotionGroups(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsListTargetPromotionGroupsV2RequestContent,
          options
        )
        .then(request => request(axios, basePath));
    },
  };
};

/**
 * TargetPromotionGroupsApi - object-oriented interface
 * @export
 * @class TargetPromotionGroupsApi
 * @extends {BaseAPI}
 */
export class TargetPromotionGroupsApi extends BaseAPI {
  /**
   * Creates keyword and/or product targets in the manual adGroup that are part of the target promotion group  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
   * @param {string} amazonAdvertisingAPIClientId  The identifier of a client associated with a \&#39;Login with Amazon\&#39; account. This is a required     header for advertisers and integrators using the Advertising API.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles     resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a     required header for advertisers and integrators using the Advertising API.
   * @param {SponsoredProductsCreateTargetPromotionGroupTargetsRequestContent} sponsoredProductsCreateTargetPromotionGroupTargetsRequestContent
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof TargetPromotionGroupsApi
   */
  public createTargetPromotionGroupTargets(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsCreateTargetPromotionGroupTargetsRequestContent: SponsoredProductsCreateTargetPromotionGroupTargetsRequestContent,
    options?: RawAxiosRequestConfig
  ) {
    return TargetPromotionGroupsApiFp(this.configuration)
      .createTargetPromotionGroupTargets(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsCreateTargetPromotionGroupTargetsRequestContent,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * Creates a target promotion group, by grouping the auto-targeting adGroupId and manual-targeting adGroups, divided by keyword targeting adGroups, and product targeting adGroups.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
   * @param {string} amazonAdvertisingAPIClientId  The identifier of a client associated with a \&#39;Login with Amazon\&#39; account. This is a required     header for advertisers and integrators using the Advertising API.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles     resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a     required header for advertisers and integrators using the Advertising API.
   * @param {SponsoredProductsCreateTargetPromotionGroupsV2RequestContent} sponsoredProductsCreateTargetPromotionGroupsV2RequestContent
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof TargetPromotionGroupsApi
   */
  public createTargetPromotionGroups(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsCreateTargetPromotionGroupsV2RequestContent: SponsoredProductsCreateTargetPromotionGroupsV2RequestContent,
    options?: RawAxiosRequestConfig
  ) {
    return TargetPromotionGroupsApiFp(this.configuration)
      .createTargetPromotionGroups(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsCreateTargetPromotionGroupsV2RequestContent,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * Retrieves keyword and product targets of an auto-targeting campaign as recommendations for promoting to a manual-targeting campaign. The recommendations are based on performance heuristics of the targets.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&#39;Login with Amazon\&#39; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsGetTargetPromotionGroupsRecommendationsRequestContent} [sponsoredProductsGetTargetPromotionGroupsRecommendationsRequestContent]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof TargetPromotionGroupsApi
   */
  public getTargetPromotionGroupsRecommendations(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsGetTargetPromotionGroupsRecommendationsRequestContent?: SponsoredProductsGetTargetPromotionGroupsRecommendationsRequestContent,
    options?: RawAxiosRequestConfig
  ) {
    return TargetPromotionGroupsApiFp(this.configuration)
      .getTargetPromotionGroupsRecommendations(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsGetTargetPromotionGroupsRecommendationsRequestContent,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * Returns the targets created through target promotion groups for an advertiser and / or given target promotion group.  **Requires one of these permissions**: [\"advertiser_campaign_view\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&#39;Login with Amazon\&#39; account. This is a required     header for advertisers and integrators using the Advertising API.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles     resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a     required header for advertisers and integrators using the Advertising API.
   * @param {SponsoredProductsListTargetPromotionGroupTargetsRequestContent} [sponsoredProductsListTargetPromotionGroupTargetsRequestContent]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof TargetPromotionGroupsApi
   */
  public listTargetPromotionGroupTargets(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsListTargetPromotionGroupTargetsRequestContent?: SponsoredProductsListTargetPromotionGroupTargetsRequestContent,
    options?: RawAxiosRequestConfig
  ) {
    return TargetPromotionGroupsApiFp(this.configuration)
      .listTargetPromotionGroupTargets(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsListTargetPromotionGroupTargetsRequestContent,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * Returns the target promotion groups for an advertiser and / or adGroupId, and / or target promotion group id.  **Requires one of these permissions**: [\"advertiser_campaign_view\"]
   * @param {string} amazonAdvertisingAPIClientId  The identifier of a client associated with a \&#39;Login with Amazon\&#39; account. This is a required     header for advertisers and integrators using the Advertising API.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles     resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a     required header for advertisers and integrators using the Advertising API.
   * @param {SponsoredProductsListTargetPromotionGroupsV2RequestContent} [sponsoredProductsListTargetPromotionGroupsV2RequestContent]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof TargetPromotionGroupsApi
   */
  public listTargetPromotionGroups(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsListTargetPromotionGroupsV2RequestContent?: SponsoredProductsListTargetPromotionGroupsV2RequestContent,
    options?: RawAxiosRequestConfig
  ) {
    return TargetPromotionGroupsApiFp(this.configuration)
      .listTargetPromotionGroups(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsListTargetPromotionGroupsV2RequestContent,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }
}

/**
 * TargetingClausesApi - axios parameter creator
 * @export
 */
export const TargetingClausesApiAxiosParamCreator = function (configuration?: Configuration) {
  return {
    /**
     * Create targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent} sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createSponsoredProductsTargetingClauses: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent: SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent,
      prefer?: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('createSponsoredProductsTargetingClauses', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('createSponsoredProductsTargetingClauses', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent' is not null or undefined
      assertParamExists(
        'createSponsoredProductsTargetingClauses',
        'sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent',
        sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent
      );
      const localVarPath = `/sp/targets`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spTargetingClause.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      if (prefer != null) {
        localVarHeaderParameter['Prefer'] = String(prefer);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * Delete targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent} sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteSponsoredProductsTargetingClauses: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent: SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('deleteSponsoredProductsTargetingClauses', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('deleteSponsoredProductsTargetingClauses', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent' is not null or undefined
      assertParamExists(
        'deleteSponsoredProductsTargetingClauses',
        'sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent',
        sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent
      );
      const localVarPath = `/sp/targets/delete`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spTargetingClause.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * List targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsListSponsoredProductsTargetingClausesRequestContent} [sponsoredProductsListSponsoredProductsTargetingClausesRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listSponsoredProductsTargetingClauses: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListSponsoredProductsTargetingClausesRequestContent?: SponsoredProductsListSponsoredProductsTargetingClausesRequestContent,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('listSponsoredProductsTargetingClauses', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('listSponsoredProductsTargetingClauses', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      const localVarPath = `/sp/targets/list`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spTargetingClause.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsListSponsoredProductsTargetingClausesRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     * Update targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent} sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateSponsoredProductsTargetingClauses: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent: SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent,
      prefer?: string,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('updateSponsoredProductsTargetingClauses', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('updateSponsoredProductsTargetingClauses', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      // verify required parameter 'sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent' is not null or undefined
      assertParamExists(
        'updateSponsoredProductsTargetingClauses',
        'sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent',
        sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent
      );
      const localVarPath = `/sp/targets`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spTargetingClause.v3+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      if (prefer != null) {
        localVarHeaderParameter['Prefer'] = String(prefer);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(
        sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent,
        localVarRequestOptions,
        configuration
      );

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
  };
};

/**
 * TargetingClausesApi - functional programming interface
 * @export
 */
export const TargetingClausesApiFp = function (configuration?: Configuration) {
  const localVarAxiosParamCreator = TargetingClausesApiAxiosParamCreator(configuration);
  return {
    /**
     * Create targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent} sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async createSponsoredProductsTargetingClauses(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent: SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.createSponsoredProductsTargetingClauses(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent,
        prefer,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['TargetingClausesApi.createSponsoredProductsTargetingClauses']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * Delete targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent} sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async deleteSponsoredProductsTargetingClauses(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent: SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteSponsoredProductsTargetingClauses(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['TargetingClausesApi.deleteSponsoredProductsTargetingClauses']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * List targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsListSponsoredProductsTargetingClausesRequestContent} [sponsoredProductsListSponsoredProductsTargetingClausesRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async listSponsoredProductsTargetingClauses(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListSponsoredProductsTargetingClausesRequestContent?: SponsoredProductsListSponsoredProductsTargetingClausesRequestContent,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsListSponsoredProductsTargetingClausesResponseContent>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.listSponsoredProductsTargetingClauses(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsListSponsoredProductsTargetingClausesRequestContent,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['TargetingClausesApi.listSponsoredProductsTargetingClauses']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     * Update targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent} sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async updateSponsoredProductsTargetingClauses(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent: SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.updateSponsoredProductsTargetingClauses(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent,
        prefer,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['TargetingClausesApi.updateSponsoredProductsTargetingClauses']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
  };
};

/**
 * TargetingClausesApi - factory interface
 * @export
 */
export const TargetingClausesApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
  const localVarFp = TargetingClausesApiFp(configuration);
  return {
    /**
     * Create targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent} sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createSponsoredProductsTargetingClauses(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent: SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent> {
      return localVarFp
        .createSponsoredProductsTargetingClauses(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent,
          prefer,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * Delete targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent} sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteSponsoredProductsTargetingClauses(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent: SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent> {
      return localVarFp
        .deleteSponsoredProductsTargetingClauses(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * List targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsListSponsoredProductsTargetingClausesRequestContent} [sponsoredProductsListSponsoredProductsTargetingClausesRequestContent]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listSponsoredProductsTargetingClauses(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsListSponsoredProductsTargetingClausesRequestContent?: SponsoredProductsListSponsoredProductsTargetingClausesRequestContent,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsListSponsoredProductsTargetingClausesResponseContent> {
      return localVarFp
        .listSponsoredProductsTargetingClauses(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsListSponsoredProductsTargetingClausesRequestContent,
          options
        )
        .then(request => request(axios, basePath));
    },
    /**
     * Update targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @param {SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent} sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent
     * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateSponsoredProductsTargetingClauses(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent: SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent,
      prefer?: string,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent> {
      return localVarFp
        .updateSponsoredProductsTargetingClauses(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent,
          prefer,
          options
        )
        .then(request => request(axios, basePath));
    },
  };
};

/**
 * TargetingClausesApi - object-oriented interface
 * @export
 * @class TargetingClausesApi
 * @extends {BaseAPI}
 */
export class TargetingClausesApi extends BaseAPI {
  /**
   * Create targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent} sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent
   * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof TargetingClausesApi
   */
  public createSponsoredProductsTargetingClauses(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent: SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent,
    prefer?: string,
    options?: RawAxiosRequestConfig
  ) {
    return TargetingClausesApiFp(this.configuration)
      .createSponsoredProductsTargetingClauses(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent,
        prefer,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * Delete targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent} sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof TargetingClausesApi
   */
  public deleteSponsoredProductsTargetingClauses(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent: SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent,
    options?: RawAxiosRequestConfig
  ) {
    return TargetingClausesApiFp(this.configuration)
      .deleteSponsoredProductsTargetingClauses(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * List targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsListSponsoredProductsTargetingClausesRequestContent} [sponsoredProductsListSponsoredProductsTargetingClausesRequestContent]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof TargetingClausesApi
   */
  public listSponsoredProductsTargetingClauses(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsListSponsoredProductsTargetingClausesRequestContent?: SponsoredProductsListSponsoredProductsTargetingClausesRequestContent,
    options?: RawAxiosRequestConfig
  ) {
    return TargetingClausesApiFp(this.configuration)
      .listSponsoredProductsTargetingClauses(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsListSponsoredProductsTargetingClausesRequestContent,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }

  /**
   * Update targeting clauses  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
   * @param {SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent} sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent
   * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof TargetingClausesApi
   */
  public updateSponsoredProductsTargetingClauses(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent: SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent,
    prefer?: string,
    options?: RawAxiosRequestConfig
  ) {
    return TargetingClausesApiFp(this.configuration)
      .updateSponsoredProductsTargetingClauses(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent,
        prefer,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }
}

/**
 * ThemeBasedBidRecommendationsApi - axios parameter creator
 * @export
 */
export const ThemeBasedBidRecommendationsApiAxiosParamCreator = function (configuration?: Configuration) {
  return {
    /**
     * The <b> POST /sp/targets/bid/recommendations </b> endpoint returns recommended bids for each target given either A) new ad group (a list of ad ASINs) or B) existing ad group (a campaign ID and ad group ID). Please use the recommendationType field to specify if you want to use option A or option B. This API is currently available at marketplaces where SP is available. The API supports keyword, auto and product targets. The API will return a 422 response when an unsupported marketplace or target is provided. <h1> Version 5.0 </h1><h2> New Features </h2><ul><li> Version 5.0 introduces two new capabilities. First, advertisers will receive the estimated impressions for the suggested bid to help them understand the potential impact of adopting them. Second, advertisers will get a view of the estimated impressions for a range of bids (8 bids) for each target. </li><li> The second feature is default to be disabled. To enable it, user needs to set <b> includeAnalysis </b> as True in request body. </li><li> New features are currently available only for existing ad group requests in US marketplace. </li></ul><h1> Version 4.0 </h1><h2> New Features </h2><ul><li> Version 4.0 allows users to get theme-based bid recommendations for product targeting expressions, including PAT_ASIN, PAT_CATEGORY and PAT_CATEGORY_REFINEMENT. </li><li> Version 4.0 supports keyword, auto and product targets in all marketplaces. </li><li> Version 4.0 removes \"impact metrics\" when returning each bid suggestion. </li><li> Version 4.0 also allows users to get theme-based bid recommendations for keyword group targeting expressions with the type KEYWORD_GROUP. This new type is only available in US marketplace. </li></ul><br>  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Get bid recommendations for ad groups
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @param {GetThemeBasedBidRecommendationForAdGroupV1Request} [getThemeBasedBidRecommendationForAdGroupV1Request]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getThemeBasedBidRecommendationForAdGroupV1: async (
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      getThemeBasedBidRecommendationForAdGroupV1Request?: GetThemeBasedBidRecommendationForAdGroupV1Request,
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
      assertParamExists('getThemeBasedBidRecommendationForAdGroupV1', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId);
      // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
      assertParamExists('getThemeBasedBidRecommendationForAdGroupV1', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope);
      const localVarPath = `/sp/targets/bid/recommendations`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      localVarHeaderParameter['Content-Type'] = 'application/vnd.spthemebasedbidrecommendation.v4+json';

      if (amazonAdvertisingAPIClientId != null) {
        localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
      }
      if (amazonAdvertisingAPIScope != null) {
        localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
      }
      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = { ...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers };
      localVarRequestOptions.data = serializeDataIfNeeded(getThemeBasedBidRecommendationForAdGroupV1Request, localVarRequestOptions, configuration);

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
  };
};

/**
 * ThemeBasedBidRecommendationsApi - functional programming interface
 * @export
 */
export const ThemeBasedBidRecommendationsApiFp = function (configuration?: Configuration) {
  const localVarAxiosParamCreator = ThemeBasedBidRecommendationsApiAxiosParamCreator(configuration);
  return {
    /**
     * The <b> POST /sp/targets/bid/recommendations </b> endpoint returns recommended bids for each target given either A) new ad group (a list of ad ASINs) or B) existing ad group (a campaign ID and ad group ID). Please use the recommendationType field to specify if you want to use option A or option B. This API is currently available at marketplaces where SP is available. The API supports keyword, auto and product targets. The API will return a 422 response when an unsupported marketplace or target is provided. <h1> Version 5.0 </h1><h2> New Features </h2><ul><li> Version 5.0 introduces two new capabilities. First, advertisers will receive the estimated impressions for the suggested bid to help them understand the potential impact of adopting them. Second, advertisers will get a view of the estimated impressions for a range of bids (8 bids) for each target. </li><li> The second feature is default to be disabled. To enable it, user needs to set <b> includeAnalysis </b> as True in request body. </li><li> New features are currently available only for existing ad group requests in US marketplace. </li></ul><h1> Version 4.0 </h1><h2> New Features </h2><ul><li> Version 4.0 allows users to get theme-based bid recommendations for product targeting expressions, including PAT_ASIN, PAT_CATEGORY and PAT_CATEGORY_REFINEMENT. </li><li> Version 4.0 supports keyword, auto and product targets in all marketplaces. </li><li> Version 4.0 removes \"impact metrics\" when returning each bid suggestion. </li><li> Version 4.0 also allows users to get theme-based bid recommendations for keyword group targeting expressions with the type KEYWORD_GROUP. This new type is only available in US marketplace. </li></ul><br>  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Get bid recommendations for ad groups
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @param {GetThemeBasedBidRecommendationForAdGroupV1Request} [getThemeBasedBidRecommendationForAdGroupV1Request]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async getThemeBasedBidRecommendationForAdGroupV1(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      getThemeBasedBidRecommendationForAdGroupV1Request?: GetThemeBasedBidRecommendationForAdGroupV1Request,
      options?: RawAxiosRequestConfig
    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ThemeBasedBidRecommendationResponseV4>> {
      const localVarAxiosArgs = await localVarAxiosParamCreator.getThemeBasedBidRecommendationForAdGroupV1(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        getThemeBasedBidRecommendationForAdGroupV1Request,
        options
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['ThemeBasedBidRecommendationsApi.getThemeBasedBidRecommendationForAdGroupV1']?.[localVarOperationServerIndex]?.url;
      return (axios, basePath) =>
        createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
    },
  };
};

/**
 * ThemeBasedBidRecommendationsApi - factory interface
 * @export
 */
export const ThemeBasedBidRecommendationsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
  const localVarFp = ThemeBasedBidRecommendationsApiFp(configuration);
  return {
    /**
     * The <b> POST /sp/targets/bid/recommendations </b> endpoint returns recommended bids for each target given either A) new ad group (a list of ad ASINs) or B) existing ad group (a campaign ID and ad group ID). Please use the recommendationType field to specify if you want to use option A or option B. This API is currently available at marketplaces where SP is available. The API supports keyword, auto and product targets. The API will return a 422 response when an unsupported marketplace or target is provided. <h1> Version 5.0 </h1><h2> New Features </h2><ul><li> Version 5.0 introduces two new capabilities. First, advertisers will receive the estimated impressions for the suggested bid to help them understand the potential impact of adopting them. Second, advertisers will get a view of the estimated impressions for a range of bids (8 bids) for each target. </li><li> The second feature is default to be disabled. To enable it, user needs to set <b> includeAnalysis </b> as True in request body. </li><li> New features are currently available only for existing ad group requests in US marketplace. </li></ul><h1> Version 4.0 </h1><h2> New Features </h2><ul><li> Version 4.0 allows users to get theme-based bid recommendations for product targeting expressions, including PAT_ASIN, PAT_CATEGORY and PAT_CATEGORY_REFINEMENT. </li><li> Version 4.0 supports keyword, auto and product targets in all marketplaces. </li><li> Version 4.0 removes \"impact metrics\" when returning each bid suggestion. </li><li> Version 4.0 also allows users to get theme-based bid recommendations for keyword group targeting expressions with the type KEYWORD_GROUP. This new type is only available in US marketplace. </li></ul><br>  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Get bid recommendations for ad groups
     * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @param {GetThemeBasedBidRecommendationForAdGroupV1Request} [getThemeBasedBidRecommendationForAdGroupV1Request]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getThemeBasedBidRecommendationForAdGroupV1(
      amazonAdvertisingAPIClientId: string,
      amazonAdvertisingAPIScope: string,
      getThemeBasedBidRecommendationForAdGroupV1Request?: GetThemeBasedBidRecommendationForAdGroupV1Request,
      options?: RawAxiosRequestConfig
    ): AxiosPromise<ThemeBasedBidRecommendationResponseV4> {
      return localVarFp
        .getThemeBasedBidRecommendationForAdGroupV1(
          amazonAdvertisingAPIClientId,
          amazonAdvertisingAPIScope,
          getThemeBasedBidRecommendationForAdGroupV1Request,
          options
        )
        .then(request => request(axios, basePath));
    },
  };
};

/**
 * ThemeBasedBidRecommendationsApi - object-oriented interface
 * @export
 * @class ThemeBasedBidRecommendationsApi
 * @extends {BaseAPI}
 */
export class ThemeBasedBidRecommendationsApi extends BaseAPI {
  /**
   * The <b> POST /sp/targets/bid/recommendations </b> endpoint returns recommended bids for each target given either A) new ad group (a list of ad ASINs) or B) existing ad group (a campaign ID and ad group ID). Please use the recommendationType field to specify if you want to use option A or option B. This API is currently available at marketplaces where SP is available. The API supports keyword, auto and product targets. The API will return a 422 response when an unsupported marketplace or target is provided. <h1> Version 5.0 </h1><h2> New Features </h2><ul><li> Version 5.0 introduces two new capabilities. First, advertisers will receive the estimated impressions for the suggested bid to help them understand the potential impact of adopting them. Second, advertisers will get a view of the estimated impressions for a range of bids (8 bids) for each target. </li><li> The second feature is default to be disabled. To enable it, user needs to set <b> includeAnalysis </b> as True in request body. </li><li> New features are currently available only for existing ad group requests in US marketplace. </li></ul><h1> Version 4.0 </h1><h2> New Features </h2><ul><li> Version 4.0 allows users to get theme-based bid recommendations for product targeting expressions, including PAT_ASIN, PAT_CATEGORY and PAT_CATEGORY_REFINEMENT. </li><li> Version 4.0 supports keyword, auto and product targets in all marketplaces. </li><li> Version 4.0 removes \"impact metrics\" when returning each bid suggestion. </li><li> Version 4.0 also allows users to get theme-based bid recommendations for keyword group targeting expressions with the type KEYWORD_GROUP. This new type is only available in US marketplace. </li></ul><br>  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
   * @summary Get bid recommendations for ad groups
   * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
   * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
   * @param {GetThemeBasedBidRecommendationForAdGroupV1Request} [getThemeBasedBidRecommendationForAdGroupV1Request]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof ThemeBasedBidRecommendationsApi
   */
  public getThemeBasedBidRecommendationForAdGroupV1(
    amazonAdvertisingAPIClientId: string,
    amazonAdvertisingAPIScope: string,
    getThemeBasedBidRecommendationForAdGroupV1Request?: GetThemeBasedBidRecommendationForAdGroupV1Request,
    options?: RawAxiosRequestConfig
  ) {
    return ThemeBasedBidRecommendationsApiFp(this.configuration)
      .getThemeBasedBidRecommendationForAdGroupV1(
        amazonAdvertisingAPIClientId,
        amazonAdvertisingAPIScope,
        getThemeBasedBidRecommendationForAdGroupV1Request,
        options
      )
      .then(request => request(this.axios, this.basePath));
  }
}
